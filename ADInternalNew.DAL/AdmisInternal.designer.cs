#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADInternalNew.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Admis")]
	public partial class AdmisInternalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount_Master(Account_Master instance);
    partial void UpdateAccount_Master(Account_Master instance);
    partial void DeleteAccount_Master(Account_Master instance);
    partial void InsertUser_To_User_Mapping(User_To_User_Mapping instance);
    partial void UpdateUser_To_User_Mapping(User_To_User_Mapping instance);
    partial void DeleteUser_To_User_Mapping(User_To_User_Mapping instance);
    partial void InsertAddress_Master(Address_Master instance);
    partial void UpdateAddress_Master(Address_Master instance);
    partial void DeleteAddress_Master(Address_Master instance);
    partial void InsertBilling_Cycle(Billing_Cycle instance);
    partial void UpdateBilling_Cycle(Billing_Cycle instance);
    partial void DeleteBilling_Cycle(Billing_Cycle instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertComp_Off_Master(Comp_Off_Master instance);
    partial void UpdateComp_Off_Master(Comp_Off_Master instance);
    partial void DeleteComp_Off_Master(Comp_Off_Master instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertDaily_Log_Status(Daily_Log_Status instance);
    partial void UpdateDaily_Log_Status(Daily_Log_Status instance);
    partial void DeleteDaily_Log_Status(Daily_Log_Status instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertDiscount_Type(Discount_Type instance);
    partial void UpdateDiscount_Type(Discount_Type instance);
    partial void DeleteDiscount_Type(Discount_Type instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertFile_Master(File_Master instance);
    partial void UpdateFile_Master(File_Master instance);
    partial void DeleteFile_Master(File_Master instance);
    partial void InsertFile_Type(File_Type instance);
    partial void UpdateFile_Type(File_Type instance);
    partial void DeleteFile_Type(File_Type instance);
    partial void InsertFile_Upload_Type(File_Upload_Type instance);
    partial void UpdateFile_Upload_Type(File_Upload_Type instance);
    partial void DeleteFile_Upload_Type(File_Upload_Type instance);
    partial void InsertFunctionality(Functionality instance);
    partial void UpdateFunctionality(Functionality instance);
    partial void DeleteFunctionality(Functionality instance);
    partial void InsertIdle_Master(Idle_Master instance);
    partial void UpdateIdle_Master(Idle_Master instance);
    partial void DeleteIdle_Master(Idle_Master instance);
    partial void InsertInstruction(Instruction instance);
    partial void UpdateInstruction(Instruction instance);
    partial void DeleteInstruction(Instruction instance);
    partial void InsertInstruction_To_File_Mapping(Instruction_To_File_Mapping instance);
    partial void UpdateInstruction_To_File_Mapping(Instruction_To_File_Mapping instance);
    partial void DeleteInstruction_To_File_Mapping(Instruction_To_File_Mapping instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertLevel(Level instance);
    partial void UpdateLevel(Level instance);
    partial void DeleteLevel(Level instance);
    partial void InsertLevel_To_Skill_Mapping(Level_To_Skill_Mapping instance);
    partial void UpdateLevel_To_Skill_Mapping(Level_To_Skill_Mapping instance);
    partial void DeleteLevel_To_Skill_Mapping(Level_To_Skill_Mapping instance);
    partial void InsertLogin_Master(Login_Master instance);
    partial void UpdateLogin_Master(Login_Master instance);
    partial void DeleteLogin_Master(Login_Master instance);
    partial void InsertOptions_Master(Options_Master instance);
    partial void UpdateOptions_Master(Options_Master instance);
    partial void DeleteOptions_Master(Options_Master instance);
    partial void InsertOrder_Detail(Order_Detail instance);
    partial void UpdateOrder_Detail(Order_Detail instance);
    partial void DeleteOrder_Detail(Order_Detail instance);
    partial void InsertOrder_Detail_To_File_Mapping(Order_Detail_To_File_Mapping instance);
    partial void UpdateOrder_Detail_To_File_Mapping(Order_Detail_To_File_Mapping instance);
    partial void DeleteOrder_Detail_To_File_Mapping(Order_Detail_To_File_Mapping instance);
    partial void InsertOrder_Quote_Master(Order_Quote_Master instance);
    partial void UpdateOrder_Quote_Master(Order_Quote_Master instance);
    partial void DeleteOrder_Quote_Master(Order_Quote_Master instance);
    partial void InsertOrder_Status(Order_Status instance);
    partial void UpdateOrder_Status(Order_Status instance);
    partial void DeleteOrder_Status(Order_Status instance);
    partial void InsertOrder_Status_Questionnaire_Mapping(Order_Status_Questionnaire_Mapping instance);
    partial void UpdateOrder_Status_Questionnaire_Mapping(Order_Status_Questionnaire_Mapping instance);
    partial void DeleteOrder_Status_Questionnaire_Mapping(Order_Status_Questionnaire_Mapping instance);
    partial void InsertOrder_To_Discount_Mapping(Order_To_Discount_Mapping instance);
    partial void UpdateOrder_To_Discount_Mapping(Order_To_Discount_Mapping instance);
    partial void DeleteOrder_To_Discount_Mapping(Order_To_Discount_Mapping instance);
    partial void InsertOrder_To_Instruction_Mapping(Order_To_Instruction_Mapping instance);
    partial void UpdateOrder_To_Instruction_Mapping(Order_To_Instruction_Mapping instance);
    partial void DeleteOrder_To_Instruction_Mapping(Order_To_Instruction_Mapping instance);
    partial void InsertOrder_To_Order(Order_To_Order instance);
    partial void UpdateOrder_To_Order(Order_To_Order instance);
    partial void DeleteOrder_To_Order(Order_To_Order instance);
    partial void InsertOrder_To_Reminder_Mapping(Order_To_Reminder_Mapping instance);
    partial void UpdateOrder_To_Reminder_Mapping(Order_To_Reminder_Mapping instance);
    partial void DeleteOrder_To_Reminder_Mapping(Order_To_Reminder_Mapping instance);
    partial void InsertOrder_To_User_Mapping(Order_To_User_Mapping instance);
    partial void UpdateOrder_To_User_Mapping(Order_To_User_Mapping instance);
    partial void DeleteOrder_To_User_Mapping(Order_To_User_Mapping instance);
    partial void InsertOrder_Type(Order_Type instance);
    partial void UpdateOrder_Type(Order_Type instance);
    partial void DeleteOrder_Type(Order_Type instance);
    partial void InsertOrder_Type_To_File_Mapping(Order_Type_To_File_Mapping instance);
    partial void UpdateOrder_Type_To_File_Mapping(Order_Type_To_File_Mapping instance);
    partial void DeleteOrder_Type_To_File_Mapping(Order_Type_To_File_Mapping instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertPayment_Mode(Payment_Mode instance);
    partial void UpdatePayment_Mode(Payment_Mode instance);
    partial void DeletePayment_Mode(Payment_Mode instance);
    partial void InsertPayment_To_File_Mapping(Payment_To_File_Mapping instance);
    partial void UpdatePayment_To_File_Mapping(Payment_To_File_Mapping instance);
    partial void DeletePayment_To_File_Mapping(Payment_To_File_Mapping instance);
    partial void InsertPayment_To_Invoice_Mapping(Payment_To_Invoice_Mapping instance);
    partial void UpdatePayment_To_Invoice_Mapping(Payment_To_Invoice_Mapping instance);
    partial void DeletePayment_To_Invoice_Mapping(Payment_To_Invoice_Mapping instance);
    partial void InsertPayment_Type(Payment_Type instance);
    partial void UpdatePayment_Type(Payment_Type instance);
    partial void DeletePayment_Type(Payment_Type instance);
    partial void InsertPhone_Number_Master(Phone_Number_Master instance);
    partial void UpdatePhone_Number_Master(Phone_Number_Master instance);
    partial void DeletePhone_Number_Master(Phone_Number_Master instance);
    partial void InsertPO_To_Order_Mapping(PO_To_Order_Mapping instance);
    partial void UpdatePO_To_Order_Mapping(PO_To_Order_Mapping instance);
    partial void DeletePO_To_Order_Mapping(PO_To_Order_Mapping instance);
    partial void InsertPreference(Preference instance);
    partial void UpdatePreference(Preference instance);
    partial void DeletePreference(Preference instance);
    partial void InsertQuestionnaire_Master(Questionnaire_Master instance);
    partial void UpdateQuestionnaire_Master(Questionnaire_Master instance);
    partial void DeleteQuestionnaire_Master(Questionnaire_Master instance);
    partial void InsertReminder(Reminder instance);
    partial void UpdateReminder(Reminder instance);
    partial void DeleteReminder(Reminder instance);
    partial void InsertReminder_Type(Reminder_Type instance);
    partial void UpdateReminder_Type(Reminder_Type instance);
    partial void DeleteReminder_Type(Reminder_Type instance);
    partial void InsertRevision(Revision instance);
    partial void UpdateRevision(Revision instance);
    partial void DeleteRevision(Revision instance);
    partial void InsertRevision_To_File_Mapping(Revision_To_File_Mapping instance);
    partial void UpdateRevision_To_File_Mapping(Revision_To_File_Mapping instance);
    partial void DeleteRevision_To_File_Mapping(Revision_To_File_Mapping instance);
    partial void InsertRevision_To_Instruction_Mapping(Revision_To_Instruction_Mapping instance);
    partial void UpdateRevision_To_Instruction_Mapping(Revision_To_Instruction_Mapping instance);
    partial void DeleteRevision_To_Instruction_Mapping(Revision_To_Instruction_Mapping instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRole_To_Functionality_Mapping(Role_To_Functionality_Mapping instance);
    partial void UpdateRole_To_Functionality_Mapping(Role_To_Functionality_Mapping instance);
    partial void DeleteRole_To_Functionality_Mapping(Role_To_Functionality_Mapping instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertShift_Log(Shift_Log instance);
    partial void UpdateShift_Log(Shift_Log instance);
    partial void DeleteShift_Log(Shift_Log instance);
    partial void InsertSkill(Skill instance);
    partial void UpdateSkill(Skill instance);
    partial void DeleteSkill(Skill instance);
    partial void InsertSpecial_Offer(Special_Offer instance);
    partial void UpdateSpecial_Offer(Special_Offer instance);
    partial void DeleteSpecial_Offer(Special_Offer instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTag_To_Order_Mapping(Tag_To_Order_Mapping instance);
    partial void UpdateTag_To_Order_Mapping(Tag_To_Order_Mapping instance);
    partial void DeleteTag_To_Order_Mapping(Tag_To_Order_Mapping instance);
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertTemplate_To_Special_Offer_Mapping(Template_To_Special_Offer_Mapping instance);
    partial void UpdateTemplate_To_Special_Offer_Mapping(Template_To_Special_Offer_Mapping instance);
    partial void DeleteTemplate_To_Special_Offer_Mapping(Template_To_Special_Offer_Mapping instance);
    partial void InsertTime_Stamp(Time_Stamp instance);
    partial void UpdateTime_Stamp(Time_Stamp instance);
    partial void DeleteTime_Stamp(Time_Stamp instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUser_Billing_Preference_Mapping(User_Billing_Preference_Mapping instance);
    partial void UpdateUser_Billing_Preference_Mapping(User_Billing_Preference_Mapping instance);
    partial void DeleteUser_Billing_Preference_Mapping(User_Billing_Preference_Mapping instance);
    partial void InsertUser_Currency_Preferenc_Mapping(User_Currency_Preferenc_Mapping instance);
    partial void UpdateUser_Currency_Preferenc_Mapping(User_Currency_Preferenc_Mapping instance);
    partial void DeleteUser_Currency_Preferenc_Mapping(User_Currency_Preferenc_Mapping instance);
    partial void InsertUser_Daily_ToTimeStamp_Mapping(User_Daily_ToTimeStamp_Mapping instance);
    partial void UpdateUser_Daily_ToTimeStamp_Mapping(User_Daily_ToTimeStamp_Mapping instance);
    partial void DeleteUser_Daily_ToTimeStamp_Mapping(User_Daily_ToTimeStamp_Mapping instance);
    partial void InsertUser_FileType_Preference_Mapping(User_FileType_Preference_Mapping instance);
    partial void UpdateUser_FileType_Preference_Mapping(User_FileType_Preference_Mapping instance);
    partial void DeleteUser_FileType_Preference_Mapping(User_FileType_Preference_Mapping instance);
    partial void InsertUser_Input_To_Option_Mapping(User_Input_To_Option_Mapping instance);
    partial void UpdateUser_Input_To_Option_Mapping(User_Input_To_Option_Mapping instance);
    partial void DeleteUser_Input_To_Option_Mapping(User_Input_To_Option_Mapping instance);
    partial void InsertUser_Input_to_Order_mapping(User_Input_to_Order_mapping instance);
    partial void UpdateUser_Input_to_Order_mapping(User_Input_to_Order_mapping instance);
    partial void DeleteUser_Input_to_Order_mapping(User_Input_to_Order_mapping instance);
    partial void InsertUser_Input_To_User_Mapping(User_Input_To_User_Mapping instance);
    partial void UpdateUser_Input_To_User_Mapping(User_Input_To_User_Mapping instance);
    partial void DeleteUser_Input_To_User_Mapping(User_Input_To_User_Mapping instance);
    partial void InsertUser_Payment_Preference_Mapping(User_Payment_Preference_Mapping instance);
    partial void UpdateUser_Payment_Preference_Mapping(User_Payment_Preference_Mapping instance);
    partial void DeleteUser_Payment_Preference_Mapping(User_Payment_Preference_Mapping instance);
    partial void InsertUser_Status(User_Status instance);
    partial void UpdateUser_Status(User_Status instance);
    partial void DeleteUser_Status(User_Status instance);
    partial void InsertUser_Status_Time_Stamp_Mapping(User_Status_Time_Stamp_Mapping instance);
    partial void UpdateUser_Status_Time_Stamp_Mapping(User_Status_Time_Stamp_Mapping instance);
    partial void DeleteUser_Status_Time_Stamp_Mapping(User_Status_Time_Stamp_Mapping instance);
    partial void InsertUser_Status_To_Questionnaire_Mapping(User_Status_To_Questionnaire_Mapping instance);
    partial void UpdateUser_Status_To_Questionnaire_Mapping(User_Status_To_Questionnaire_Mapping instance);
    partial void DeleteUser_Status_To_Questionnaire_Mapping(User_Status_To_Questionnaire_Mapping instance);
    partial void InsertUser_To_Input_mapping(User_To_Input_mapping instance);
    partial void UpdateUser_To_Input_mapping(User_To_Input_mapping instance);
    partial void DeleteUser_To_Input_mapping(User_To_Input_mapping instance);
    partial void InsertUser_To_Level_Mapping(User_To_Level_Mapping instance);
    partial void UpdateUser_To_Level_Mapping(User_To_Level_Mapping instance);
    partial void DeleteUser_To_Level_Mapping(User_To_Level_Mapping instance);
    partial void InsertUser_To_Phone_Mapping(User_To_Phone_Mapping instance);
    partial void UpdateUser_To_Phone_Mapping(User_To_Phone_Mapping instance);
    partial void DeleteUser_To_Phone_Mapping(User_To_Phone_Mapping instance);
    partial void InsertUser_To_Preference(User_To_Preference instance);
    partial void UpdateUser_To_Preference(User_To_Preference instance);
    partial void DeleteUser_To_Preference(User_To_Preference instance);
    partial void InsertUser_To_Reminder(User_To_Reminder instance);
    partial void UpdateUser_To_Reminder(User_To_Reminder instance);
    partial void DeleteUser_To_Reminder(User_To_Reminder instance);
    partial void InsertUser_To_Role_Mapping(User_To_Role_Mapping instance);
    partial void UpdateUser_To_Role_Mapping(User_To_Role_Mapping instance);
    partial void DeleteUser_To_Role_Mapping(User_To_Role_Mapping instance);
    partial void InsertUser_To_Shift_Mapping(User_To_Shift_Mapping instance);
    partial void UpdateUser_To_Shift_Mapping(User_To_Shift_Mapping instance);
    partial void DeleteUser_To_Shift_Mapping(User_To_Shift_Mapping instance);
    partial void InsertUser_To_Special_Offer_Mapping(User_To_Special_Offer_Mapping instance);
    partial void UpdateUser_To_Special_Offer_Mapping(User_To_Special_Offer_Mapping instance);
    partial void DeleteUser_To_Special_Offer_Mapping(User_To_Special_Offer_Mapping instance);
    #endregion
		
		public AdmisInternalDataContext() : 
				base(global::ADInternalNew.DAL.Properties.Settings.Default.AdmisConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdmisInternalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdmisInternalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdmisInternalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdmisInternalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account_Master> Account_Masters
		{
			get
			{
				return this.GetTable<Account_Master>();
			}
		}
		
		public System.Data.Linq.Table<User_To_User_Mapping> User_To_User_Mappings
		{
			get
			{
				return this.GetTable<User_To_User_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Address_Master> Address_Masters
		{
			get
			{
				return this.GetTable<Address_Master>();
			}
		}
		
		public System.Data.Linq.Table<Billing_Cycle> Billing_Cycles
		{
			get
			{
				return this.GetTable<Billing_Cycle>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Comp_Off_Master> Comp_Off_Masters
		{
			get
			{
				return this.GetTable<Comp_Off_Master>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Daily_Log_Status> Daily_Log_Status
		{
			get
			{
				return this.GetTable<Daily_Log_Status>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<Discount_Type> Discount_Types
		{
			get
			{
				return this.GetTable<Discount_Type>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<File_Master> File_Masters
		{
			get
			{
				return this.GetTable<File_Master>();
			}
		}
		
		public System.Data.Linq.Table<File_Type> File_Types
		{
			get
			{
				return this.GetTable<File_Type>();
			}
		}
		
		public System.Data.Linq.Table<File_Upload_Type> File_Upload_Types
		{
			get
			{
				return this.GetTable<File_Upload_Type>();
			}
		}
		
		public System.Data.Linq.Table<Functionality> Functionalities
		{
			get
			{
				return this.GetTable<Functionality>();
			}
		}
		
		public System.Data.Linq.Table<Idle_Master> Idle_Masters
		{
			get
			{
				return this.GetTable<Idle_Master>();
			}
		}
		
		public System.Data.Linq.Table<Instruction> Instructions
		{
			get
			{
				return this.GetTable<Instruction>();
			}
		}
		
		public System.Data.Linq.Table<Instruction_To_File_Mapping> Instruction_To_File_Mappings
		{
			get
			{
				return this.GetTable<Instruction_To_File_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Level> Levels
		{
			get
			{
				return this.GetTable<Level>();
			}
		}
		
		public System.Data.Linq.Table<Level_To_Skill_Mapping> Level_To_Skill_Mappings
		{
			get
			{
				return this.GetTable<Level_To_Skill_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Login_Master> Login_Masters
		{
			get
			{
				return this.GetTable<Login_Master>();
			}
		}
		
		public System.Data.Linq.Table<Options_Master> Options_Masters
		{
			get
			{
				return this.GetTable<Options_Master>();
			}
		}
		
		public System.Data.Linq.Table<Order_Detail> Order_Details
		{
			get
			{
				return this.GetTable<Order_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Order_Detail_To_File_Mapping> Order_Detail_To_File_Mappings
		{
			get
			{
				return this.GetTable<Order_Detail_To_File_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_Quote_Master> Order_Quote_Masters
		{
			get
			{
				return this.GetTable<Order_Quote_Master>();
			}
		}
		
		public System.Data.Linq.Table<Order_Status> Order_Status
		{
			get
			{
				return this.GetTable<Order_Status>();
			}
		}
		
		public System.Data.Linq.Table<Order_Status_Questionnaire_Mapping> Order_Status_Questionnaire_Mappings
		{
			get
			{
				return this.GetTable<Order_Status_Questionnaire_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_To_Discount_Mapping> Order_To_Discount_Mappings
		{
			get
			{
				return this.GetTable<Order_To_Discount_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_To_Instruction_Mapping> Order_To_Instruction_Mappings
		{
			get
			{
				return this.GetTable<Order_To_Instruction_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_To_Order> Order_To_Orders
		{
			get
			{
				return this.GetTable<Order_To_Order>();
			}
		}
		
		public System.Data.Linq.Table<Order_To_Reminder_Mapping> Order_To_Reminder_Mappings
		{
			get
			{
				return this.GetTable<Order_To_Reminder_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_To_User_Mapping> Order_To_User_Mappings
		{
			get
			{
				return this.GetTable<Order_To_User_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Order_Type> Order_Types
		{
			get
			{
				return this.GetTable<Order_Type>();
			}
		}
		
		public System.Data.Linq.Table<Order_Type_To_File_Mapping> Order_Type_To_File_Mappings
		{
			get
			{
				return this.GetTable<Order_Type_To_File_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Payment_Mode> Payment_Modes
		{
			get
			{
				return this.GetTable<Payment_Mode>();
			}
		}
		
		public System.Data.Linq.Table<Payment_To_File_Mapping> Payment_To_File_Mappings
		{
			get
			{
				return this.GetTable<Payment_To_File_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Payment_To_Invoice_Mapping> Payment_To_Invoice_Mappings
		{
			get
			{
				return this.GetTable<Payment_To_Invoice_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Payment_Type> Payment_Types
		{
			get
			{
				return this.GetTable<Payment_Type>();
			}
		}
		
		public System.Data.Linq.Table<Phone_Number_Master> Phone_Number_Masters
		{
			get
			{
				return this.GetTable<Phone_Number_Master>();
			}
		}
		
		public System.Data.Linq.Table<PO_To_Order_Mapping> PO_To_Order_Mappings
		{
			get
			{
				return this.GetTable<PO_To_Order_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Preference> Preferences
		{
			get
			{
				return this.GetTable<Preference>();
			}
		}
		
		public System.Data.Linq.Table<Questionnaire_Master> Questionnaire_Masters
		{
			get
			{
				return this.GetTable<Questionnaire_Master>();
			}
		}
		
		public System.Data.Linq.Table<Reminder> Reminders
		{
			get
			{
				return this.GetTable<Reminder>();
			}
		}
		
		public System.Data.Linq.Table<Reminder_Type> Reminder_Types
		{
			get
			{
				return this.GetTable<Reminder_Type>();
			}
		}
		
		public System.Data.Linq.Table<Revision> Revisions
		{
			get
			{
				return this.GetTable<Revision>();
			}
		}
		
		public System.Data.Linq.Table<Revision_To_File_Mapping> Revision_To_File_Mappings
		{
			get
			{
				return this.GetTable<Revision_To_File_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Revision_To_Instruction_Mapping> Revision_To_Instruction_Mappings
		{
			get
			{
				return this.GetTable<Revision_To_Instruction_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Role_To_Functionality_Mapping> Role_To_Functionality_Mappings
		{
			get
			{
				return this.GetTable<Role_To_Functionality_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<Shift_Log> Shift_Logs
		{
			get
			{
				return this.GetTable<Shift_Log>();
			}
		}
		
		public System.Data.Linq.Table<Skill> Skills
		{
			get
			{
				return this.GetTable<Skill>();
			}
		}
		
		public System.Data.Linq.Table<Special_Offer> Special_Offers
		{
			get
			{
				return this.GetTable<Special_Offer>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<Tag_To_Order_Mapping> Tag_To_Order_Mappings
		{
			get
			{
				return this.GetTable<Tag_To_Order_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<Template_To_Special_Offer_Mapping> Template_To_Special_Offer_Mappings
		{
			get
			{
				return this.GetTable<Template_To_Special_Offer_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Time_Stamp> Time_Stamps
		{
			get
			{
				return this.GetTable<Time_Stamp>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<User_Billing_Preference_Mapping> User_Billing_Preference_Mappings
		{
			get
			{
				return this.GetTable<User_Billing_Preference_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Currency_Preferenc_Mapping> User_Currency_Preferenc_Mappings
		{
			get
			{
				return this.GetTable<User_Currency_Preferenc_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Daily_ToTimeStamp_Mapping> User_Daily_ToTimeStamp_Mappings
		{
			get
			{
				return this.GetTable<User_Daily_ToTimeStamp_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_FileType_Preference_Mapping> User_FileType_Preference_Mappings
		{
			get
			{
				return this.GetTable<User_FileType_Preference_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Input_To_Option_Mapping> User_Input_To_Option_Mappings
		{
			get
			{
				return this.GetTable<User_Input_To_Option_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Input_to_Order_mapping> User_Input_to_Order_mappings
		{
			get
			{
				return this.GetTable<User_Input_to_Order_mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Input_To_User_Mapping> User_Input_To_User_Mappings
		{
			get
			{
				return this.GetTable<User_Input_To_User_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Payment_Preference_Mapping> User_Payment_Preference_Mappings
		{
			get
			{
				return this.GetTable<User_Payment_Preference_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Status> User_Status
		{
			get
			{
				return this.GetTable<User_Status>();
			}
		}
		
		public System.Data.Linq.Table<User_Status_Time_Stamp_Mapping> User_Status_Time_Stamp_Mappings
		{
			get
			{
				return this.GetTable<User_Status_Time_Stamp_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_Status_To_Questionnaire_Mapping> User_Status_To_Questionnaire_Mappings
		{
			get
			{
				return this.GetTable<User_Status_To_Questionnaire_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Input_mapping> User_To_Input_mappings
		{
			get
			{
				return this.GetTable<User_To_Input_mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Level_Mapping> User_To_Level_Mappings
		{
			get
			{
				return this.GetTable<User_To_Level_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Phone_Mapping> User_To_Phone_Mappings
		{
			get
			{
				return this.GetTable<User_To_Phone_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Preference> User_To_Preferences
		{
			get
			{
				return this.GetTable<User_To_Preference>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Reminder> User_To_Reminders
		{
			get
			{
				return this.GetTable<User_To_Reminder>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Role_Mapping> User_To_Role_Mappings
		{
			get
			{
				return this.GetTable<User_To_Role_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Shift_Mapping> User_To_Shift_Mappings
		{
			get
			{
				return this.GetTable<User_To_Shift_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<User_To_Special_Offer_Mapping> User_To_Special_Offer_Mappings
		{
			get
			{
				return this.GetTable<User_To_Special_Offer_Mapping>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_Master")]
	public partial class Account_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Account_Master_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<decimal> _Debit_Amount;
		
		private System.Nullable<decimal> _Credit_Amount;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_Master_IdChanging(int value);
    partial void OnAccount_Master_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnDebit_AmountChanging(System.Nullable<decimal> value);
    partial void OnDebit_AmountChanged();
    partial void OnCredit_AmountChanging(System.Nullable<decimal> value);
    partial void OnCredit_AmountChanged();
    #endregion
		
		public Account_Master()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Master_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Account_Master_Id
		{
			get
			{
				return this._Account_Master_Id;
			}
			set
			{
				if ((this._Account_Master_Id != value))
				{
					this.OnAccount_Master_IdChanging(value);
					this.SendPropertyChanging();
					this._Account_Master_Id = value;
					this.SendPropertyChanged("Account_Master_Id");
					this.OnAccount_Master_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Debit_Amount
		{
			get
			{
				return this._Debit_Amount;
			}
			set
			{
				if ((this._Debit_Amount != value))
				{
					this.OnDebit_AmountChanging(value);
					this.SendPropertyChanging();
					this._Debit_Amount = value;
					this.SendPropertyChanged("Debit_Amount");
					this.OnDebit_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Credit_Amount
		{
			get
			{
				return this._Credit_Amount;
			}
			set
			{
				if ((this._Credit_Amount != value))
				{
					this.OnCredit_AmountChanging(value);
					this.SendPropertyChanging();
					this._Credit_Amount = value;
					this.SendPropertyChanged("Credit_Amount");
					this.OnCredit_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account_Master", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Account_Masters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Account_Masters.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_User_Mapping")]
	public partial class User_To_User_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_User_Mapping_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Parent_User_Id;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_User_Mapping_IdChanging(int value);
    partial void OnUser_To_User_Mapping_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnParent_User_IdChanging(System.Nullable<int> value);
    partial void OnParent_User_IdChanged();
    #endregion
		
		public User_To_User_Mapping()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_User_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_User_Mapping_Id
		{
			get
			{
				return this._User_To_User_Mapping_Id;
			}
			set
			{
				if ((this._User_To_User_Mapping_Id != value))
				{
					this.OnUser_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_User_Mapping_Id = value;
					this.SendPropertyChanged("User_To_User_Mapping_Id");
					this.OnUser_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_User_Id", DbType="Int")]
		public System.Nullable<int> Parent_User_Id
		{
			get
			{
				return this._Parent_User_Id;
			}
			set
			{
				if ((this._Parent_User_Id != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_User_Id = value;
					this.SendPropertyChanged("Parent_User_Id");
					this.OnParent_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_User_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_User_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_User_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_User_Mapping1", Storage="_User1", ThisKey="Parent_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.User_To_User_Mappings1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.User_To_User_Mappings1.Add(this);
						this._Parent_User_Id = value.User_Id;
					}
					else
					{
						this._Parent_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address_Master")]
	public partial class Address_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Address_Id;
		
		private string _Address_Detail1;
		
		private string _Address_Detail2;
		
		private System.Nullable<int> _City_Id;
		
		private string _Zip_Code;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _State_Id;
		
		private System.Nullable<int> _Country_Id;
		
		private EntityRef<City> _City;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<State> _State;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddress_IdChanging(int value);
    partial void OnAddress_IdChanged();
    partial void OnAddress_Detail1Changing(string value);
    partial void OnAddress_Detail1Changed();
    partial void OnAddress_Detail2Changing(string value);
    partial void OnAddress_Detail2Changed();
    partial void OnCity_IdChanging(System.Nullable<int> value);
    partial void OnCity_IdChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnState_IdChanging(System.Nullable<int> value);
    partial void OnState_IdChanged();
    partial void OnCountry_IdChanging(System.Nullable<int> value);
    partial void OnCountry_IdChanged();
    #endregion
		
		public Address_Master()
		{
			this._City = default(EntityRef<City>);
			this._Country = default(EntityRef<Country>);
			this._State = default(EntityRef<State>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Address_Id
		{
			get
			{
				return this._Address_Id;
			}
			set
			{
				if ((this._Address_Id != value))
				{
					this.OnAddress_IdChanging(value);
					this.SendPropertyChanging();
					this._Address_Id = value;
					this.SendPropertyChanged("Address_Id");
					this.OnAddress_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Detail1", DbType="VarChar(MAX)")]
		public string Address_Detail1
		{
			get
			{
				return this._Address_Detail1;
			}
			set
			{
				if ((this._Address_Detail1 != value))
				{
					this.OnAddress_Detail1Changing(value);
					this.SendPropertyChanging();
					this._Address_Detail1 = value;
					this.SendPropertyChanged("Address_Detail1");
					this.OnAddress_Detail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Detail2", DbType="VarChar(MAX)")]
		public string Address_Detail2
		{
			get
			{
				return this._Address_Detail2;
			}
			set
			{
				if ((this._Address_Detail2 != value))
				{
					this.OnAddress_Detail2Changing(value);
					this.SendPropertyChanging();
					this._Address_Detail2 = value;
					this.SendPropertyChanged("Address_Detail2");
					this.OnAddress_Detail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", DbType="Int")]
		public System.Nullable<int> City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="VarChar(50)")]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", DbType="Int")]
		public System.Nullable<int> State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", DbType="Int")]
		public System.Nullable<int> Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Address_Master", Storage="_City", ThisKey="City_Id", OtherKey="City_Id", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Address_Masters.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Address_Masters.Add(this);
						this._City_Id = value.City_Id;
					}
					else
					{
						this._City_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Address_Master", Storage="_Country", ThisKey="Country_Id", OtherKey="Country_Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Address_Masters.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Address_Masters.Add(this);
						this._Country_Id = value.Country_Id;
					}
					else
					{
						this._Country_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address_Master", Storage="_State", ThisKey="State_Id", OtherKey="State_Id", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Address_Masters.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Address_Masters.Add(this);
						this._State_Id = value.State_Id;
					}
					else
					{
						this._State_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Address_Master", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Address_Masters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Address_Masters.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing_Cycle")]
	public partial class Billing_Cycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Billing_Cycle_Id;
		
		private System.Nullable<int> _Billing_Cycle_Type;
		
		private EntitySet<User_Billing_Preference_Mapping> _User_Billing_Preference_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBilling_Cycle_IdChanging(int value);
    partial void OnBilling_Cycle_IdChanged();
    partial void OnBilling_Cycle_TypeChanging(System.Nullable<int> value);
    partial void OnBilling_Cycle_TypeChanged();
    #endregion
		
		public Billing_Cycle()
		{
			this._User_Billing_Preference_Mappings = new EntitySet<User_Billing_Preference_Mapping>(new Action<User_Billing_Preference_Mapping>(this.attach_User_Billing_Preference_Mappings), new Action<User_Billing_Preference_Mapping>(this.detach_User_Billing_Preference_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billing_Cycle_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Billing_Cycle_Id
		{
			get
			{
				return this._Billing_Cycle_Id;
			}
			set
			{
				if ((this._Billing_Cycle_Id != value))
				{
					this.OnBilling_Cycle_IdChanging(value);
					this.SendPropertyChanging();
					this._Billing_Cycle_Id = value;
					this.SendPropertyChanged("Billing_Cycle_Id");
					this.OnBilling_Cycle_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billing_Cycle_Type", DbType="Int")]
		public System.Nullable<int> Billing_Cycle_Type
		{
			get
			{
				return this._Billing_Cycle_Type;
			}
			set
			{
				if ((this._Billing_Cycle_Type != value))
				{
					this.OnBilling_Cycle_TypeChanging(value);
					this.SendPropertyChanging();
					this._Billing_Cycle_Type = value;
					this.SendPropertyChanged("Billing_Cycle_Type");
					this.OnBilling_Cycle_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billing_Cycle_User_Billing_Preference_Mapping", Storage="_User_Billing_Preference_Mappings", ThisKey="Billing_Cycle_Id", OtherKey="Billing_Cycle_Id")]
		public EntitySet<User_Billing_Preference_Mapping> User_Billing_Preference_Mappings
		{
			get
			{
				return this._User_Billing_Preference_Mappings;
			}
			set
			{
				this._User_Billing_Preference_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Billing_Preference_Mappings(User_Billing_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Billing_Cycle = this;
		}
		
		private void detach_User_Billing_Preference_Mappings(User_Billing_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Billing_Cycle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _City_Id;
		
		private string _City_Name;
		
		private EntitySet<Address_Master> _Address_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCity_IdChanging(int value);
    partial void OnCity_IdChanged();
    partial void OnCity_NameChanging(string value);
    partial void OnCity_NameChanged();
    #endregion
		
		public City()
		{
			this._Address_Masters = new EntitySet<Address_Master>(new Action<Address_Master>(this.attach_Address_Masters), new Action<Address_Master>(this.detach_Address_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Name", DbType="VarChar(50)")]
		public string City_Name
		{
			get
			{
				return this._City_Name;
			}
			set
			{
				if ((this._City_Name != value))
				{
					this.OnCity_NameChanging(value);
					this.SendPropertyChanging();
					this._City_Name = value;
					this.SendPropertyChanged("City_Name");
					this.OnCity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Address_Master", Storage="_Address_Masters", ThisKey="City_Id", OtherKey="City_Id")]
		public EntitySet<Address_Master> Address_Masters
		{
			get
			{
				return this._Address_Masters;
			}
			set
			{
				this._Address_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comp_Off_Master")]
	public partial class Comp_Off_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Comp_Off_Master_Id;
		
		private System.Nullable<int> _Login_Id;
		
		private System.Nullable<int> _Duration;
		
		private string _Reason_Of_Comp_Off;
		
		private EntityRef<Login_Master> _Login_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComp_Off_Master_IdChanging(int value);
    partial void OnComp_Off_Master_IdChanged();
    partial void OnLogin_IdChanging(System.Nullable<int> value);
    partial void OnLogin_IdChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnReason_Of_Comp_OffChanging(string value);
    partial void OnReason_Of_Comp_OffChanged();
    #endregion
		
		public Comp_Off_Master()
		{
			this._Login_Master = default(EntityRef<Login_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp_Off_Master_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Comp_Off_Master_Id
		{
			get
			{
				return this._Comp_Off_Master_Id;
			}
			set
			{
				if ((this._Comp_Off_Master_Id != value))
				{
					this.OnComp_Off_Master_IdChanging(value);
					this.SendPropertyChanging();
					this._Comp_Off_Master_Id = value;
					this.SendPropertyChanged("Comp_Off_Master_Id");
					this.OnComp_Off_Master_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", DbType="Int")]
		public System.Nullable<int> Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					if (this._Login_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason_Of_Comp_Off", DbType="VarChar(MAX)")]
		public string Reason_Of_Comp_Off
		{
			get
			{
				return this._Reason_Of_Comp_Off;
			}
			set
			{
				if ((this._Reason_Of_Comp_Off != value))
				{
					this.OnReason_Of_Comp_OffChanging(value);
					this.SendPropertyChanging();
					this._Reason_Of_Comp_Off = value;
					this.SendPropertyChanged("Reason_Of_Comp_Off");
					this.OnReason_Of_Comp_OffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_Comp_Off_Master", Storage="_Login_Master", ThisKey="Login_Id", OtherKey="Login_Id", IsForeignKey=true)]
		public Login_Master Login_Master
		{
			get
			{
				return this._Login_Master.Entity;
			}
			set
			{
				Login_Master previousValue = this._Login_Master.Entity;
				if (((previousValue != value) 
							|| (this._Login_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login_Master.Entity = null;
						previousValue.Comp_Off_Masters.Remove(this);
					}
					this._Login_Master.Entity = value;
					if ((value != null))
					{
						value.Comp_Off_Masters.Add(this);
						this._Login_Id = value.Login_Id;
					}
					else
					{
						this._Login_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _Company_Name;
		
		private string _First_Contact_Name;
		
		private System.Nullable<int> _Internal_User_Id;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnFirst_Contact_NameChanging(string value);
    partial void OnFirst_Contact_NameChanged();
    partial void OnInternal_User_IdChanging(System.Nullable<int> value);
    partial void OnInternal_User_IdChanged();
    #endregion
		
		public Company()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="VarChar(50)")]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Contact_Name", DbType="VarChar(50)")]
		public string First_Contact_Name
		{
			get
			{
				return this._First_Contact_Name;
			}
			set
			{
				if ((this._First_Contact_Name != value))
				{
					this.OnFirst_Contact_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Contact_Name = value;
					this.SendPropertyChanged("First_Contact_Name");
					this.OnFirst_Contact_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internal_User_Id", DbType="Int")]
		public System.Nullable<int> Internal_User_Id
		{
			get
			{
				return this._Internal_User_Id;
			}
			set
			{
				if ((this._Internal_User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInternal_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Internal_User_Id = value;
					this.SendPropertyChanged("Internal_User_Id");
					this.OnInternal_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Company", Storage="_User", ThisKey="Internal_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._Internal_User_Id = value.User_Id;
					}
					else
					{
						this._Internal_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Country_Id;
		
		private string _Country_Name;
		
		private EntitySet<Address_Master> _Address_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountry_IdChanging(int value);
    partial void OnCountry_IdChanged();
    partial void OnCountry_NameChanging(string value);
    partial void OnCountry_NameChanged();
    #endregion
		
		public Country()
		{
			this._Address_Masters = new EntitySet<Address_Master>(new Action<Address_Master>(this.attach_Address_Masters), new Action<Address_Master>(this.detach_Address_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Name", DbType="VarChar(50)")]
		public string Country_Name
		{
			get
			{
				return this._Country_Name;
			}
			set
			{
				if ((this._Country_Name != value))
				{
					this.OnCountry_NameChanging(value);
					this.SendPropertyChanging();
					this._Country_Name = value;
					this.SendPropertyChanged("Country_Name");
					this.OnCountry_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Address_Master", Storage="_Address_Masters", ThisKey="Country_Id", OtherKey="Country_Id")]
		public EntitySet<Address_Master> Address_Masters
		{
			get
			{
				return this._Address_Masters;
			}
			set
			{
				this._Address_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Currency_Id;
		
		private string _Currency_Name;
		
		private EntitySet<User_Currency_Preferenc_Mapping> _User_Currency_Preferenc_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrency_IdChanging(int value);
    partial void OnCurrency_IdChanged();
    partial void OnCurrency_NameChanging(string value);
    partial void OnCurrency_NameChanged();
    #endregion
		
		public Currency()
		{
			this._User_Currency_Preferenc_Mappings = new EntitySet<User_Currency_Preferenc_Mapping>(new Action<User_Currency_Preferenc_Mapping>(this.attach_User_Currency_Preferenc_Mappings), new Action<User_Currency_Preferenc_Mapping>(this.detach_User_Currency_Preferenc_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Currency_Id
		{
			get
			{
				return this._Currency_Id;
			}
			set
			{
				if ((this._Currency_Id != value))
				{
					this.OnCurrency_IdChanging(value);
					this.SendPropertyChanging();
					this._Currency_Id = value;
					this.SendPropertyChanged("Currency_Id");
					this.OnCurrency_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency_Name", DbType="VarChar(50)")]
		public string Currency_Name
		{
			get
			{
				return this._Currency_Name;
			}
			set
			{
				if ((this._Currency_Name != value))
				{
					this.OnCurrency_NameChanging(value);
					this.SendPropertyChanging();
					this._Currency_Name = value;
					this.SendPropertyChanged("Currency_Name");
					this.OnCurrency_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_User_Currency_Preferenc_Mapping", Storage="_User_Currency_Preferenc_Mappings", ThisKey="Currency_Id", OtherKey="Currency_Id")]
		public EntitySet<User_Currency_Preferenc_Mapping> User_Currency_Preferenc_Mappings
		{
			get
			{
				return this._User_Currency_Preferenc_Mappings;
			}
			set
			{
				this._User_Currency_Preferenc_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Currency_Preferenc_Mappings(User_Currency_Preferenc_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_User_Currency_Preferenc_Mappings(User_Currency_Preferenc_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Daily_Log_Status")]
	public partial class Daily_Log_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Daily_Log_Status_Id;
		
		private string _Daily_Log_Status_Name;
		
		private EntitySet<User_Daily_ToTimeStamp_Mapping> _User_Daily_ToTimeStamp_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDaily_Log_Status_IdChanging(int value);
    partial void OnDaily_Log_Status_IdChanged();
    partial void OnDaily_Log_Status_NameChanging(string value);
    partial void OnDaily_Log_Status_NameChanged();
    #endregion
		
		public Daily_Log_Status()
		{
			this._User_Daily_ToTimeStamp_Mappings = new EntitySet<User_Daily_ToTimeStamp_Mapping>(new Action<User_Daily_ToTimeStamp_Mapping>(this.attach_User_Daily_ToTimeStamp_Mappings), new Action<User_Daily_ToTimeStamp_Mapping>(this.detach_User_Daily_ToTimeStamp_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daily_Log_Status_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Daily_Log_Status_Id
		{
			get
			{
				return this._Daily_Log_Status_Id;
			}
			set
			{
				if ((this._Daily_Log_Status_Id != value))
				{
					this.OnDaily_Log_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Daily_Log_Status_Id = value;
					this.SendPropertyChanged("Daily_Log_Status_Id");
					this.OnDaily_Log_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daily_Log_Status_Name", DbType="VarChar(50)")]
		public string Daily_Log_Status_Name
		{
			get
			{
				return this._Daily_Log_Status_Name;
			}
			set
			{
				if ((this._Daily_Log_Status_Name != value))
				{
					this.OnDaily_Log_Status_NameChanging(value);
					this.SendPropertyChanging();
					this._Daily_Log_Status_Name = value;
					this.SendPropertyChanged("Daily_Log_Status_Name");
					this.OnDaily_Log_Status_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Log_Status_User_Daily_ToTimeStamp_Mapping", Storage="_User_Daily_ToTimeStamp_Mappings", ThisKey="Daily_Log_Status_Id", OtherKey="Daily_Log_Status_Id")]
		public EntitySet<User_Daily_ToTimeStamp_Mapping> User_Daily_ToTimeStamp_Mappings
		{
			get
			{
				return this._User_Daily_ToTimeStamp_Mappings;
			}
			set
			{
				this._User_Daily_ToTimeStamp_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Log_Status = this;
		}
		
		private void detach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Log_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Discount_Id;
		
		private System.Nullable<decimal> _Discount_Amount;
		
		private System.Nullable<int> _Discount_Type_Id;
		
		private string _Discount_Name;
		
		private System.Nullable<bool> _IsSpecialOffer;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Order_To_Discount_Mapping> _Order_To_Discount_Mappings;
		
		private EntitySet<Special_Offer> _Special_Offers;
		
		private EntityRef<Discount_Type> _Discount_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscount_IdChanging(int value);
    partial void OnDiscount_IdChanged();
    partial void OnDiscount_AmountChanging(System.Nullable<decimal> value);
    partial void OnDiscount_AmountChanged();
    partial void OnDiscount_Type_IdChanging(System.Nullable<int> value);
    partial void OnDiscount_Type_IdChanged();
    partial void OnDiscount_NameChanging(string value);
    partial void OnDiscount_NameChanged();
    partial void OnIsSpecialOfferChanging(System.Nullable<bool> value);
    partial void OnIsSpecialOfferChanged();
    #endregion
		
		public Discount()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Order_To_Discount_Mappings = new EntitySet<Order_To_Discount_Mapping>(new Action<Order_To_Discount_Mapping>(this.attach_Order_To_Discount_Mappings), new Action<Order_To_Discount_Mapping>(this.detach_Order_To_Discount_Mappings));
			this._Special_Offers = new EntitySet<Special_Offer>(new Action<Special_Offer>(this.attach_Special_Offers), new Action<Special_Offer>(this.detach_Special_Offers));
			this._Discount_Type = default(EntityRef<Discount_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Discount_Id
		{
			get
			{
				return this._Discount_Id;
			}
			set
			{
				if ((this._Discount_Id != value))
				{
					this.OnDiscount_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Id = value;
					this.SendPropertyChanged("Discount_Id");
					this.OnDiscount_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount_Amount
		{
			get
			{
				return this._Discount_Amount;
			}
			set
			{
				if ((this._Discount_Amount != value))
				{
					this.OnDiscount_AmountChanging(value);
					this.SendPropertyChanging();
					this._Discount_Amount = value;
					this.SendPropertyChanged("Discount_Amount");
					this.OnDiscount_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Type_Id", DbType="Int")]
		public System.Nullable<int> Discount_Type_Id
		{
			get
			{
				return this._Discount_Type_Id;
			}
			set
			{
				if ((this._Discount_Type_Id != value))
				{
					if (this._Discount_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Type_Id = value;
					this.SendPropertyChanged("Discount_Type_Id");
					this.OnDiscount_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Name", DbType="VarChar(50)")]
		public string Discount_Name
		{
			get
			{
				return this._Discount_Name;
			}
			set
			{
				if ((this._Discount_Name != value))
				{
					this.OnDiscount_NameChanging(value);
					this.SendPropertyChanging();
					this._Discount_Name = value;
					this.SendPropertyChanged("Discount_Name");
					this.OnDiscount_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecialOffer", DbType="Bit")]
		public System.Nullable<bool> IsSpecialOffer
		{
			get
			{
				return this._IsSpecialOffer;
			}
			set
			{
				if ((this._IsSpecialOffer != value))
				{
					this.OnIsSpecialOfferChanging(value);
					this.SendPropertyChanging();
					this._IsSpecialOffer = value;
					this.SendPropertyChanged("IsSpecialOffer");
					this.OnIsSpecialOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Invoice", Storage="_Invoices", ThisKey="Discount_Id", OtherKey="Discount_Id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Order_To_Discount_Mapping", Storage="_Order_To_Discount_Mappings", ThisKey="Discount_Id", OtherKey="Discount_Id")]
		public EntitySet<Order_To_Discount_Mapping> Order_To_Discount_Mappings
		{
			get
			{
				return this._Order_To_Discount_Mappings;
			}
			set
			{
				this._Order_To_Discount_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Special_Offer", Storage="_Special_Offers", ThisKey="Discount_Id", OtherKey="Discount_Id")]
		public EntitySet<Special_Offer> Special_Offers
		{
			get
			{
				return this._Special_Offers;
			}
			set
			{
				this._Special_Offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Type_Discount", Storage="_Discount_Type", ThisKey="Discount_Type_Id", OtherKey="Discount_Type_Id", IsForeignKey=true)]
		public Discount_Type Discount_Type
		{
			get
			{
				return this._Discount_Type.Entity;
			}
			set
			{
				Discount_Type previousValue = this._Discount_Type.Entity;
				if (((previousValue != value) 
							|| (this._Discount_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount_Type.Entity = null;
						previousValue.Discounts.Remove(this);
					}
					this._Discount_Type.Entity = value;
					if ((value != null))
					{
						value.Discounts.Add(this);
						this._Discount_Type_Id = value.Discount_Type_Id;
					}
					else
					{
						this._Discount_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Discount_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_Order_To_Discount_Mappings(Order_To_Discount_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_Order_To_Discount_Mappings(Order_To_Discount_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_Special_Offers(Special_Offer entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_Special_Offers(Special_Offer entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount_Type")]
	public partial class Discount_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Discount_Type_Id;
		
		private string _Discount_Type_Name;
		
		private EntitySet<Discount> _Discounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscount_Type_IdChanging(int value);
    partial void OnDiscount_Type_IdChanged();
    partial void OnDiscount_Type_NameChanging(string value);
    partial void OnDiscount_Type_NameChanged();
    #endregion
		
		public Discount_Type()
		{
			this._Discounts = new EntitySet<Discount>(new Action<Discount>(this.attach_Discounts), new Action<Discount>(this.detach_Discounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Discount_Type_Id
		{
			get
			{
				return this._Discount_Type_Id;
			}
			set
			{
				if ((this._Discount_Type_Id != value))
				{
					this.OnDiscount_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Type_Id = value;
					this.SendPropertyChanged("Discount_Type_Id");
					this.OnDiscount_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Type_Name", DbType="VarChar(50)")]
		public string Discount_Type_Name
		{
			get
			{
				return this._Discount_Type_Name;
			}
			set
			{
				if ((this._Discount_Type_Name != value))
				{
					this.OnDiscount_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Discount_Type_Name = value;
					this.SendPropertyChanged("Discount_Type_Name");
					this.OnDiscount_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Type_Discount", Storage="_Discounts", ThisKey="Discount_Type_Id", OtherKey="Discount_Type_Id")]
		public EntitySet<Discount> Discounts
		{
			get
			{
				return this._Discounts;
			}
			set
			{
				this._Discounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Discount_Type = this;
		}
		
		private void detach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Discount_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Feedback_Id;
		
		private string _Feedback_Note;
		
		private System.Nullable<int> _Feedback_Rating;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private System.Nullable<int> _Feedback_For_User_Id;
		
		private System.Nullable<int> _Feedback_Giver_User_Id;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedback_IdChanging(int value);
    partial void OnFeedback_IdChanged();
    partial void OnFeedback_NoteChanging(string value);
    partial void OnFeedback_NoteChanged();
    partial void OnFeedback_RatingChanging(System.Nullable<int> value);
    partial void OnFeedback_RatingChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnFeedback_For_User_IdChanging(System.Nullable<int> value);
    partial void OnFeedback_For_User_IdChanged();
    partial void OnFeedback_Giver_User_IdChanging(System.Nullable<int> value);
    partial void OnFeedback_Giver_User_IdChanged();
    #endregion
		
		public Feedback()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Feedback_Id
		{
			get
			{
				return this._Feedback_Id;
			}
			set
			{
				if ((this._Feedback_Id != value))
				{
					this.OnFeedback_IdChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Id = value;
					this.SendPropertyChanged("Feedback_Id");
					this.OnFeedback_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Note", DbType="VarChar(MAX)")]
		public string Feedback_Note
		{
			get
			{
				return this._Feedback_Note;
			}
			set
			{
				if ((this._Feedback_Note != value))
				{
					this.OnFeedback_NoteChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Note = value;
					this.SendPropertyChanged("Feedback_Note");
					this.OnFeedback_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Rating", DbType="Int")]
		public System.Nullable<int> Feedback_Rating
		{
			get
			{
				return this._Feedback_Rating;
			}
			set
			{
				if ((this._Feedback_Rating != value))
				{
					this.OnFeedback_RatingChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Rating = value;
					this.SendPropertyChanged("Feedback_Rating");
					this.OnFeedback_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_For_User_Id", DbType="Int")]
		public System.Nullable<int> Feedback_For_User_Id
		{
			get
			{
				return this._Feedback_For_User_Id;
			}
			set
			{
				if ((this._Feedback_For_User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeedback_For_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Feedback_For_User_Id = value;
					this.SendPropertyChanged("Feedback_For_User_Id");
					this.OnFeedback_For_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Giver_User_Id", DbType="Int")]
		public System.Nullable<int> Feedback_Giver_User_Id
		{
			get
			{
				return this._Feedback_Giver_User_Id;
			}
			set
			{
				if ((this._Feedback_Giver_User_Id != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeedback_Giver_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Giver_User_Id = value;
					this.SendPropertyChanged("Feedback_Giver_User_Id");
					this.OnFeedback_Giver_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Feedback", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback", Storage="_User", ThisKey="Feedback_For_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._Feedback_For_User_Id = value.User_Id;
					}
					else
					{
						this._Feedback_For_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback1", Storage="_User1", ThisKey="Feedback_Giver_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Feedbacks1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Feedbacks1.Add(this);
						this._Feedback_Giver_User_Id = value.User_Id;
					}
					else
					{
						this._Feedback_Giver_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.File_Master")]
	public partial class File_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _File_Id;
		
		private string _File_Name;
		
		private string _File_Url;
		
		private System.Nullable<int> _File_Type_Id;
		
		private string _File_Size;
		
		private System.Nullable<int> _File_Upload_Type_Id;
		
		private EntitySet<Instruction_To_File_Mapping> _Instruction_To_File_Mappings;
		
		private EntitySet<Order_Detail_To_File_Mapping> _Order_Detail_To_File_Mappings;
		
		private EntitySet<Order_Type_To_File_Mapping> _Order_Type_To_File_Mappings;
		
		private EntitySet<Payment_To_File_Mapping> _Payment_To_File_Mappings;
		
		private EntitySet<Revision_To_File_Mapping> _Revision_To_File_Mappings;
		
		private EntitySet<Tag> _Tags;
		
		private EntityRef<File_Type> _File_Type;
		
		private EntityRef<File_Upload_Type> _File_Upload_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFile_IdChanging(int value);
    partial void OnFile_IdChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnFile_UrlChanging(string value);
    partial void OnFile_UrlChanged();
    partial void OnFile_Type_IdChanging(System.Nullable<int> value);
    partial void OnFile_Type_IdChanged();
    partial void OnFile_SizeChanging(string value);
    partial void OnFile_SizeChanged();
    partial void OnFile_Upload_Type_IdChanging(System.Nullable<int> value);
    partial void OnFile_Upload_Type_IdChanged();
    #endregion
		
		public File_Master()
		{
			this._Instruction_To_File_Mappings = new EntitySet<Instruction_To_File_Mapping>(new Action<Instruction_To_File_Mapping>(this.attach_Instruction_To_File_Mappings), new Action<Instruction_To_File_Mapping>(this.detach_Instruction_To_File_Mappings));
			this._Order_Detail_To_File_Mappings = new EntitySet<Order_Detail_To_File_Mapping>(new Action<Order_Detail_To_File_Mapping>(this.attach_Order_Detail_To_File_Mappings), new Action<Order_Detail_To_File_Mapping>(this.detach_Order_Detail_To_File_Mappings));
			this._Order_Type_To_File_Mappings = new EntitySet<Order_Type_To_File_Mapping>(new Action<Order_Type_To_File_Mapping>(this.attach_Order_Type_To_File_Mappings), new Action<Order_Type_To_File_Mapping>(this.detach_Order_Type_To_File_Mappings));
			this._Payment_To_File_Mappings = new EntitySet<Payment_To_File_Mapping>(new Action<Payment_To_File_Mapping>(this.attach_Payment_To_File_Mappings), new Action<Payment_To_File_Mapping>(this.detach_Payment_To_File_Mappings));
			this._Revision_To_File_Mappings = new EntitySet<Revision_To_File_Mapping>(new Action<Revision_To_File_Mapping>(this.attach_Revision_To_File_Mappings), new Action<Revision_To_File_Mapping>(this.detach_Revision_To_File_Mappings));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._File_Type = default(EntityRef<File_Type>);
			this._File_Upload_Type = default(EntityRef<File_Upload_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="VarChar(50)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Url", DbType="VarChar(MAX)")]
		public string File_Url
		{
			get
			{
				return this._File_Url;
			}
			set
			{
				if ((this._File_Url != value))
				{
					this.OnFile_UrlChanging(value);
					this.SendPropertyChanging();
					this._File_Url = value;
					this.SendPropertyChanged("File_Url");
					this.OnFile_UrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Type_Id", DbType="Int")]
		public System.Nullable<int> File_Type_Id
		{
			get
			{
				return this._File_Type_Id;
			}
			set
			{
				if ((this._File_Type_Id != value))
				{
					if (this._File_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Type_Id = value;
					this.SendPropertyChanged("File_Type_Id");
					this.OnFile_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Size", DbType="VarChar(50)")]
		public string File_Size
		{
			get
			{
				return this._File_Size;
			}
			set
			{
				if ((this._File_Size != value))
				{
					this.OnFile_SizeChanging(value);
					this.SendPropertyChanging();
					this._File_Size = value;
					this.SendPropertyChanged("File_Size");
					this.OnFile_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Upload_Type_Id", DbType="Int")]
		public System.Nullable<int> File_Upload_Type_Id
		{
			get
			{
				return this._File_Upload_Type_Id;
			}
			set
			{
				if ((this._File_Upload_Type_Id != value))
				{
					if (this._File_Upload_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_Upload_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Upload_Type_Id = value;
					this.SendPropertyChanged("File_Upload_Type_Id");
					this.OnFile_Upload_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Instruction_To_File_Mapping", Storage="_Instruction_To_File_Mappings", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Instruction_To_File_Mapping> Instruction_To_File_Mappings
		{
			get
			{
				return this._Instruction_To_File_Mappings;
			}
			set
			{
				this._Instruction_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Order_Detail_To_File_Mapping", Storage="_Order_Detail_To_File_Mappings", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Order_Detail_To_File_Mapping> Order_Detail_To_File_Mappings
		{
			get
			{
				return this._Order_Detail_To_File_Mappings;
			}
			set
			{
				this._Order_Detail_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Order_Type_To_File_Mapping", Storage="_Order_Type_To_File_Mappings", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Order_Type_To_File_Mapping> Order_Type_To_File_Mappings
		{
			get
			{
				return this._Order_Type_To_File_Mappings;
			}
			set
			{
				this._Order_Type_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Payment_To_File_Mapping", Storage="_Payment_To_File_Mappings", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Payment_To_File_Mapping> Payment_To_File_Mappings
		{
			get
			{
				return this._Payment_To_File_Mappings;
			}
			set
			{
				this._Payment_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Revision_To_File_Mapping", Storage="_Revision_To_File_Mappings", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Revision_To_File_Mapping> Revision_To_File_Mappings
		{
			get
			{
				return this._Revision_To_File_Mappings;
			}
			set
			{
				this._Revision_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Tag", Storage="_Tags", ThisKey="File_Id", OtherKey="File_Id")]
		public EntitySet<Tag> Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Type_File_Master", Storage="_File_Type", ThisKey="File_Type_Id", OtherKey="File_Type_Id", IsForeignKey=true)]
		public File_Type File_Type
		{
			get
			{
				return this._File_Type.Entity;
			}
			set
			{
				File_Type previousValue = this._File_Type.Entity;
				if (((previousValue != value) 
							|| (this._File_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Type.Entity = null;
						previousValue.File_Masters.Remove(this);
					}
					this._File_Type.Entity = value;
					if ((value != null))
					{
						value.File_Masters.Add(this);
						this._File_Type_Id = value.File_Type_Id;
					}
					else
					{
						this._File_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Upload_Type_File_Master", Storage="_File_Upload_Type", ThisKey="File_Upload_Type_Id", OtherKey="File_Upload_Type_Id", IsForeignKey=true)]
		public File_Upload_Type File_Upload_Type
		{
			get
			{
				return this._File_Upload_Type.Entity;
			}
			set
			{
				File_Upload_Type previousValue = this._File_Upload_Type.Entity;
				if (((previousValue != value) 
							|| (this._File_Upload_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Upload_Type.Entity = null;
						previousValue.File_Masters.Remove(this);
					}
					this._File_Upload_Type.Entity = value;
					if ((value != null))
					{
						value.File_Masters.Add(this);
						this._File_Upload_Type_Id = value.File_Upload_Type_Id;
					}
					else
					{
						this._File_Upload_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Upload_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Instruction_To_File_Mappings(Instruction_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Instruction_To_File_Mappings(Instruction_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
		
		private void attach_Order_Detail_To_File_Mappings(Order_Detail_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Order_Detail_To_File_Mappings(Order_Detail_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
		
		private void attach_Order_Type_To_File_Mappings(Order_Type_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Order_Type_To_File_Mappings(Order_Type_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
		
		private void attach_Payment_To_File_Mappings(Payment_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Payment_To_File_Mappings(Payment_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
		
		private void attach_Revision_To_File_Mappings(Revision_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Revision_To_File_Mappings(Revision_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.File_Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.File_Type")]
	public partial class File_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _File_Type_Id;
		
		private string _File_Type_Name;
		
		private EntitySet<File_Master> _File_Masters;
		
		private EntitySet<User_FileType_Preference_Mapping> _User_FileType_Preference_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFile_Type_IdChanging(int value);
    partial void OnFile_Type_IdChanged();
    partial void OnFile_Type_NameChanging(string value);
    partial void OnFile_Type_NameChanged();
    #endregion
		
		public File_Type()
		{
			this._File_Masters = new EntitySet<File_Master>(new Action<File_Master>(this.attach_File_Masters), new Action<File_Master>(this.detach_File_Masters));
			this._User_FileType_Preference_Mappings = new EntitySet<User_FileType_Preference_Mapping>(new Action<User_FileType_Preference_Mapping>(this.attach_User_FileType_Preference_Mappings), new Action<User_FileType_Preference_Mapping>(this.detach_User_FileType_Preference_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int File_Type_Id
		{
			get
			{
				return this._File_Type_Id;
			}
			set
			{
				if ((this._File_Type_Id != value))
				{
					this.OnFile_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Type_Id = value;
					this.SendPropertyChanged("File_Type_Id");
					this.OnFile_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Type_Name", DbType="VarChar(50)")]
		public string File_Type_Name
		{
			get
			{
				return this._File_Type_Name;
			}
			set
			{
				if ((this._File_Type_Name != value))
				{
					this.OnFile_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Type_Name = value;
					this.SendPropertyChanged("File_Type_Name");
					this.OnFile_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Type_File_Master", Storage="_File_Masters", ThisKey="File_Type_Id", OtherKey="File_Type_Id")]
		public EntitySet<File_Master> File_Masters
		{
			get
			{
				return this._File_Masters;
			}
			set
			{
				this._File_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Type_User_FileType_Preference_Mapping", Storage="_User_FileType_Preference_Mappings", ThisKey="File_Type_Id", OtherKey="File_Type_Id")]
		public EntitySet<User_FileType_Preference_Mapping> User_FileType_Preference_Mappings
		{
			get
			{
				return this._User_FileType_Preference_Mappings;
			}
			set
			{
				this._User_FileType_Preference_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_File_Masters(File_Master entity)
		{
			this.SendPropertyChanging();
			entity.File_Type = this;
		}
		
		private void detach_File_Masters(File_Master entity)
		{
			this.SendPropertyChanging();
			entity.File_Type = null;
		}
		
		private void attach_User_FileType_Preference_Mappings(User_FileType_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Type = this;
		}
		
		private void detach_User_FileType_Preference_Mappings(User_FileType_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.File_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.File_Upload_Type")]
	public partial class File_Upload_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _File_Upload_Type_Id;
		
		private string _File_Upload_Type_Value;
		
		private EntitySet<File_Master> _File_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFile_Upload_Type_IdChanging(int value);
    partial void OnFile_Upload_Type_IdChanged();
    partial void OnFile_Upload_Type_ValueChanging(string value);
    partial void OnFile_Upload_Type_ValueChanged();
    #endregion
		
		public File_Upload_Type()
		{
			this._File_Masters = new EntitySet<File_Master>(new Action<File_Master>(this.attach_File_Masters), new Action<File_Master>(this.detach_File_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Upload_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int File_Upload_Type_Id
		{
			get
			{
				return this._File_Upload_Type_Id;
			}
			set
			{
				if ((this._File_Upload_Type_Id != value))
				{
					this.OnFile_Upload_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Upload_Type_Id = value;
					this.SendPropertyChanged("File_Upload_Type_Id");
					this.OnFile_Upload_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Upload_Type_Value", DbType="VarChar(50)")]
		public string File_Upload_Type_Value
		{
			get
			{
				return this._File_Upload_Type_Value;
			}
			set
			{
				if ((this._File_Upload_Type_Value != value))
				{
					this.OnFile_Upload_Type_ValueChanging(value);
					this.SendPropertyChanging();
					this._File_Upload_Type_Value = value;
					this.SendPropertyChanged("File_Upload_Type_Value");
					this.OnFile_Upload_Type_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Upload_Type_File_Master", Storage="_File_Masters", ThisKey="File_Upload_Type_Id", OtherKey="File_Upload_Type_Id")]
		public EntitySet<File_Master> File_Masters
		{
			get
			{
				return this._File_Masters;
			}
			set
			{
				this._File_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_File_Masters(File_Master entity)
		{
			this.SendPropertyChanging();
			entity.File_Upload_Type = this;
		}
		
		private void detach_File_Masters(File_Master entity)
		{
			this.SendPropertyChanging();
			entity.File_Upload_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Functionality")]
	public partial class Functionality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Functionality_Id;
		
		private string _Functionality_Name;
		
		private EntitySet<Role_To_Functionality_Mapping> _Role_To_Functionality_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFunctionality_IdChanging(int value);
    partial void OnFunctionality_IdChanged();
    partial void OnFunctionality_NameChanging(string value);
    partial void OnFunctionality_NameChanged();
    #endregion
		
		public Functionality()
		{
			this._Role_To_Functionality_Mappings = new EntitySet<Role_To_Functionality_Mapping>(new Action<Role_To_Functionality_Mapping>(this.attach_Role_To_Functionality_Mappings), new Action<Role_To_Functionality_Mapping>(this.detach_Role_To_Functionality_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Functionality_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Functionality_Id
		{
			get
			{
				return this._Functionality_Id;
			}
			set
			{
				if ((this._Functionality_Id != value))
				{
					this.OnFunctionality_IdChanging(value);
					this.SendPropertyChanging();
					this._Functionality_Id = value;
					this.SendPropertyChanged("Functionality_Id");
					this.OnFunctionality_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Functionality_Name", DbType="VarChar(50)")]
		public string Functionality_Name
		{
			get
			{
				return this._Functionality_Name;
			}
			set
			{
				if ((this._Functionality_Name != value))
				{
					this.OnFunctionality_NameChanging(value);
					this.SendPropertyChanging();
					this._Functionality_Name = value;
					this.SendPropertyChanged("Functionality_Name");
					this.OnFunctionality_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functionality_Role_To_Functionality_Mapping", Storage="_Role_To_Functionality_Mappings", ThisKey="Functionality_Id", OtherKey="Functionality_Id")]
		public EntitySet<Role_To_Functionality_Mapping> Role_To_Functionality_Mappings
		{
			get
			{
				return this._Role_To_Functionality_Mappings;
			}
			set
			{
				this._Role_To_Functionality_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Role_To_Functionality_Mappings(Role_To_Functionality_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Functionality = this;
		}
		
		private void detach_Role_To_Functionality_Mappings(Role_To_Functionality_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Functionality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idle_Master")]
	public partial class Idle_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Idle_Master_Id;
		
		private System.Nullable<int> _Login_Id;
		
		private System.Nullable<int> _Duration;
		
		private EntityRef<Login_Master> _Login_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdle_Master_IdChanging(int value);
    partial void OnIdle_Master_IdChanged();
    partial void OnLogin_IdChanging(System.Nullable<int> value);
    partial void OnLogin_IdChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    #endregion
		
		public Idle_Master()
		{
			this._Login_Master = default(EntityRef<Login_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idle_Master_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Idle_Master_Id
		{
			get
			{
				return this._Idle_Master_Id;
			}
			set
			{
				if ((this._Idle_Master_Id != value))
				{
					this.OnIdle_Master_IdChanging(value);
					this.SendPropertyChanging();
					this._Idle_Master_Id = value;
					this.SendPropertyChanged("Idle_Master_Id");
					this.OnIdle_Master_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", DbType="Int")]
		public System.Nullable<int> Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					if (this._Login_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_Idle_Master", Storage="_Login_Master", ThisKey="Login_Id", OtherKey="Login_Id", IsForeignKey=true)]
		public Login_Master Login_Master
		{
			get
			{
				return this._Login_Master.Entity;
			}
			set
			{
				Login_Master previousValue = this._Login_Master.Entity;
				if (((previousValue != value) 
							|| (this._Login_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login_Master.Entity = null;
						previousValue.Idle_Masters.Remove(this);
					}
					this._Login_Master.Entity = value;
					if ((value != null))
					{
						value.Idle_Masters.Add(this);
						this._Login_Id = value.Login_Id;
					}
					else
					{
						this._Login_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instruction")]
	public partial class Instruction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Instruction_Id;
		
		private string _Instruction_Value;
		
		private EntitySet<Instruction_To_File_Mapping> _Instruction_To_File_Mappings;
		
		private EntitySet<Order_To_Instruction_Mapping> _Order_To_Instruction_Mappings;
		
		private EntitySet<Revision_To_Instruction_Mapping> _Revision_To_Instruction_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstruction_IdChanging(int value);
    partial void OnInstruction_IdChanged();
    partial void OnInstruction_ValueChanging(string value);
    partial void OnInstruction_ValueChanged();
    #endregion
		
		public Instruction()
		{
			this._Instruction_To_File_Mappings = new EntitySet<Instruction_To_File_Mapping>(new Action<Instruction_To_File_Mapping>(this.attach_Instruction_To_File_Mappings), new Action<Instruction_To_File_Mapping>(this.detach_Instruction_To_File_Mappings));
			this._Order_To_Instruction_Mappings = new EntitySet<Order_To_Instruction_Mapping>(new Action<Order_To_Instruction_Mapping>(this.attach_Order_To_Instruction_Mappings), new Action<Order_To_Instruction_Mapping>(this.detach_Order_To_Instruction_Mappings));
			this._Revision_To_Instruction_Mappings = new EntitySet<Revision_To_Instruction_Mapping>(new Action<Revision_To_Instruction_Mapping>(this.attach_Revision_To_Instruction_Mappings), new Action<Revision_To_Instruction_Mapping>(this.detach_Revision_To_Instruction_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Instruction_Id
		{
			get
			{
				return this._Instruction_Id;
			}
			set
			{
				if ((this._Instruction_Id != value))
				{
					this.OnInstruction_IdChanging(value);
					this.SendPropertyChanging();
					this._Instruction_Id = value;
					this.SendPropertyChanged("Instruction_Id");
					this.OnInstruction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_Value", DbType="VarChar(MAX)")]
		public string Instruction_Value
		{
			get
			{
				return this._Instruction_Value;
			}
			set
			{
				if ((this._Instruction_Value != value))
				{
					this.OnInstruction_ValueChanging(value);
					this.SendPropertyChanging();
					this._Instruction_Value = value;
					this.SendPropertyChanged("Instruction_Value");
					this.OnInstruction_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Instruction_To_File_Mapping", Storage="_Instruction_To_File_Mappings", ThisKey="Instruction_Id", OtherKey="Instruction_Id")]
		public EntitySet<Instruction_To_File_Mapping> Instruction_To_File_Mappings
		{
			get
			{
				return this._Instruction_To_File_Mappings;
			}
			set
			{
				this._Instruction_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Order_To_Instruction_Mapping", Storage="_Order_To_Instruction_Mappings", ThisKey="Instruction_Id", OtherKey="Instruction_Id")]
		public EntitySet<Order_To_Instruction_Mapping> Order_To_Instruction_Mappings
		{
			get
			{
				return this._Order_To_Instruction_Mappings;
			}
			set
			{
				this._Order_To_Instruction_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Revision_To_Instruction_Mapping", Storage="_Revision_To_Instruction_Mappings", ThisKey="Instruction_Id", OtherKey="Instruction_Id")]
		public EntitySet<Revision_To_Instruction_Mapping> Revision_To_Instruction_Mappings
		{
			get
			{
				return this._Revision_To_Instruction_Mappings;
			}
			set
			{
				this._Revision_To_Instruction_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Instruction_To_File_Mappings(Instruction_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = this;
		}
		
		private void detach_Instruction_To_File_Mappings(Instruction_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = null;
		}
		
		private void attach_Order_To_Instruction_Mappings(Order_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = this;
		}
		
		private void detach_Order_To_Instruction_Mappings(Order_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = null;
		}
		
		private void attach_Revision_To_Instruction_Mappings(Revision_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = this;
		}
		
		private void detach_Revision_To_Instruction_Mappings(Revision_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Instruction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instruction_To_File_Mapping")]
	public partial class Instruction_To_File_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Instruction_To_File_Mapping_Id;
		
		private System.Nullable<int> _Instruction_Id;
		
		private System.Nullable<int> _File_Id;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Instruction> _Instruction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstruction_To_File_Mapping_IdChanging(int value);
    partial void OnInstruction_To_File_Mapping_IdChanged();
    partial void OnInstruction_IdChanging(System.Nullable<int> value);
    partial void OnInstruction_IdChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    #endregion
		
		public Instruction_To_File_Mapping()
		{
			this._File_Master = default(EntityRef<File_Master>);
			this._Instruction = default(EntityRef<Instruction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_To_File_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Instruction_To_File_Mapping_Id
		{
			get
			{
				return this._Instruction_To_File_Mapping_Id;
			}
			set
			{
				if ((this._Instruction_To_File_Mapping_Id != value))
				{
					this.OnInstruction_To_File_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Instruction_To_File_Mapping_Id = value;
					this.SendPropertyChanged("Instruction_To_File_Mapping_Id");
					this.OnInstruction_To_File_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_Id", DbType="Int")]
		public System.Nullable<int> Instruction_Id
		{
			get
			{
				return this._Instruction_Id;
			}
			set
			{
				if ((this._Instruction_Id != value))
				{
					if (this._Instruction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstruction_IdChanging(value);
					this.SendPropertyChanging();
					this._Instruction_Id = value;
					this.SendPropertyChanged("Instruction_Id");
					this.OnInstruction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Instruction_To_File_Mapping", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Instruction_To_File_Mappings.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Instruction_To_File_Mappings.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Instruction_To_File_Mapping", Storage="_Instruction", ThisKey="Instruction_Id", OtherKey="Instruction_Id", IsForeignKey=true)]
		public Instruction Instruction
		{
			get
			{
				return this._Instruction.Entity;
			}
			set
			{
				Instruction previousValue = this._Instruction.Entity;
				if (((previousValue != value) 
							|| (this._Instruction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instruction.Entity = null;
						previousValue.Instruction_To_File_Mappings.Remove(this);
					}
					this._Instruction.Entity = value;
					if ((value != null))
					{
						value.Instruction_To_File_Mappings.Add(this);
						this._Instruction_Id = value.Instruction_Id;
					}
					else
					{
						this._Instruction_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Instruction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private System.Nullable<decimal> _Original_Order_Amount;
		
		private System.Nullable<int> _Discount_Id;
		
		private System.Nullable<decimal> _Final_Amount;
		
		private System.Nullable<int> _Invoice_Status;
		
		private System.Nullable<int> _TimeStamp_Id;
		
		private EntitySet<Payment_To_Invoice_Mapping> _Payment_To_Invoice_Mappings;
		
		private EntityRef<Discount> _Discount;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnOriginal_Order_AmountChanging(System.Nullable<decimal> value);
    partial void OnOriginal_Order_AmountChanged();
    partial void OnDiscount_IdChanging(System.Nullable<int> value);
    partial void OnDiscount_IdChanged();
    partial void OnFinal_AmountChanging(System.Nullable<decimal> value);
    partial void OnFinal_AmountChanged();
    partial void OnInvoice_StatusChanging(System.Nullable<int> value);
    partial void OnInvoice_StatusChanged();
    partial void OnTimeStamp_IdChanging(System.Nullable<int> value);
    partial void OnTimeStamp_IdChanged();
    #endregion
		
		public Invoice()
		{
			this._Payment_To_Invoice_Mappings = new EntitySet<Payment_To_Invoice_Mapping>(new Action<Payment_To_Invoice_Mapping>(this.attach_Payment_To_Invoice_Mappings), new Action<Payment_To_Invoice_Mapping>(this.detach_Payment_To_Invoice_Mappings));
			this._Discount = default(EntityRef<Discount>);
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original_Order_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Original_Order_Amount
		{
			get
			{
				return this._Original_Order_Amount;
			}
			set
			{
				if ((this._Original_Order_Amount != value))
				{
					this.OnOriginal_Order_AmountChanging(value);
					this.SendPropertyChanging();
					this._Original_Order_Amount = value;
					this.SendPropertyChanged("Original_Order_Amount");
					this.OnOriginal_Order_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Id", DbType="Int")]
		public System.Nullable<int> Discount_Id
		{
			get
			{
				return this._Discount_Id;
			}
			set
			{
				if ((this._Discount_Id != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Id = value;
					this.SendPropertyChanged("Discount_Id");
					this.OnDiscount_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Final_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Final_Amount
		{
			get
			{
				return this._Final_Amount;
			}
			set
			{
				if ((this._Final_Amount != value))
				{
					this.OnFinal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Final_Amount = value;
					this.SendPropertyChanged("Final_Amount");
					this.OnFinal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Status", DbType="Int")]
		public System.Nullable<int> Invoice_Status
		{
			get
			{
				return this._Invoice_Status;
			}
			set
			{
				if ((this._Invoice_Status != value))
				{
					this.OnInvoice_StatusChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Status = value;
					this.SendPropertyChanged("Invoice_Status");
					this.OnInvoice_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp_Id", DbType="Int")]
		public System.Nullable<int> TimeStamp_Id
		{
			get
			{
				return this._TimeStamp_Id;
			}
			set
			{
				if ((this._TimeStamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeStamp_IdChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp_Id = value;
					this.SendPropertyChanged("TimeStamp_Id");
					this.OnTimeStamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Payment_To_Invoice_Mapping", Storage="_Payment_To_Invoice_Mappings", ThisKey="Invoice_Id", OtherKey="Invoice_Id")]
		public EntitySet<Payment_To_Invoice_Mapping> Payment_To_Invoice_Mappings
		{
			get
			{
				return this._Payment_To_Invoice_Mappings;
			}
			set
			{
				this._Payment_To_Invoice_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Invoice", Storage="_Discount", ThisKey="Discount_Id", OtherKey="Discount_Id", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._Discount_Id = value.Discount_Id;
					}
					else
					{
						this._Discount_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Invoice", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Invoice", Storage="_Time_Stamp", ThisKey="TimeStamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._TimeStamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._TimeStamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_To_Invoice_Mappings(Payment_To_Invoice_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Payment_To_Invoice_Mappings(Payment_To_Invoice_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Level]")]
	public partial class Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Level_Id;
		
		private string _Level_Name;
		
		private EntitySet<Level_To_Skill_Mapping> _Level_To_Skill_Mappings;
		
		private EntitySet<Order_Type> _Order_Types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevel_IdChanging(int value);
    partial void OnLevel_IdChanged();
    partial void OnLevel_NameChanging(string value);
    partial void OnLevel_NameChanged();
    #endregion
		
		public Level()
		{
			this._Level_To_Skill_Mappings = new EntitySet<Level_To_Skill_Mapping>(new Action<Level_To_Skill_Mapping>(this.attach_Level_To_Skill_Mappings), new Action<Level_To_Skill_Mapping>(this.detach_Level_To_Skill_Mappings));
			this._Order_Types = new EntitySet<Order_Type>(new Action<Order_Type>(this.attach_Order_Types), new Action<Order_Type>(this.detach_Order_Types));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Level_Id
		{
			get
			{
				return this._Level_Id;
			}
			set
			{
				if ((this._Level_Id != value))
				{
					this.OnLevel_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_Id = value;
					this.SendPropertyChanged("Level_Id");
					this.OnLevel_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_Name", DbType="VarChar(50)")]
		public string Level_Name
		{
			get
			{
				return this._Level_Name;
			}
			set
			{
				if ((this._Level_Name != value))
				{
					this.OnLevel_NameChanging(value);
					this.SendPropertyChanging();
					this._Level_Name = value;
					this.SendPropertyChanged("Level_Name");
					this.OnLevel_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Level_To_Skill_Mapping", Storage="_Level_To_Skill_Mappings", ThisKey="Level_Id", OtherKey="Level_Id")]
		public EntitySet<Level_To_Skill_Mapping> Level_To_Skill_Mappings
		{
			get
			{
				return this._Level_To_Skill_Mappings;
			}
			set
			{
				this._Level_To_Skill_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Order_Type", Storage="_Order_Types", ThisKey="Level_Id", OtherKey="Level_Id")]
		public EntitySet<Order_Type> Order_Types
		{
			get
			{
				return this._Order_Types;
			}
			set
			{
				this._Order_Types.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Level_To_Skill_Mappings(Level_To_Skill_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_Level_To_Skill_Mappings(Level_To_Skill_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
		
		private void attach_Order_Types(Order_Type entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_Order_Types(Order_Type entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Level_To_Skill_Mapping")]
	public partial class Level_To_Skill_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Level_To_Skill_Mapping_Id;
		
		private System.Nullable<int> _Level_Id;
		
		private System.Nullable<int> _Skill_Id;
		
		private EntitySet<User_To_Level_Mapping> _User_To_Level_Mappings;
		
		private EntityRef<Level> _Level;
		
		private EntityRef<Skill> _Skill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevel_To_Skill_Mapping_IdChanging(int value);
    partial void OnLevel_To_Skill_Mapping_IdChanged();
    partial void OnLevel_IdChanging(System.Nullable<int> value);
    partial void OnLevel_IdChanged();
    partial void OnSkill_IdChanging(System.Nullable<int> value);
    partial void OnSkill_IdChanged();
    #endregion
		
		public Level_To_Skill_Mapping()
		{
			this._User_To_Level_Mappings = new EntitySet<User_To_Level_Mapping>(new Action<User_To_Level_Mapping>(this.attach_User_To_Level_Mappings), new Action<User_To_Level_Mapping>(this.detach_User_To_Level_Mappings));
			this._Level = default(EntityRef<Level>);
			this._Skill = default(EntityRef<Skill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_To_Skill_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Level_To_Skill_Mapping_Id
		{
			get
			{
				return this._Level_To_Skill_Mapping_Id;
			}
			set
			{
				if ((this._Level_To_Skill_Mapping_Id != value))
				{
					this.OnLevel_To_Skill_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_To_Skill_Mapping_Id = value;
					this.SendPropertyChanged("Level_To_Skill_Mapping_Id");
					this.OnLevel_To_Skill_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_Id", DbType="Int")]
		public System.Nullable<int> Level_Id
		{
			get
			{
				return this._Level_Id;
			}
			set
			{
				if ((this._Level_Id != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevel_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_Id = value;
					this.SendPropertyChanged("Level_Id");
					this.OnLevel_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_Id", DbType="Int")]
		public System.Nullable<int> Skill_Id
		{
			get
			{
				return this._Skill_Id;
			}
			set
			{
				if ((this._Skill_Id != value))
				{
					if (this._Skill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkill_IdChanging(value);
					this.SendPropertyChanging();
					this._Skill_Id = value;
					this.SendPropertyChanged("Skill_Id");
					this.OnSkill_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_To_Skill_Mapping_User_To_Level_Mapping", Storage="_User_To_Level_Mappings", ThisKey="Level_To_Skill_Mapping_Id", OtherKey="Level_To_Skill_Id")]
		public EntitySet<User_To_Level_Mapping> User_To_Level_Mappings
		{
			get
			{
				return this._User_To_Level_Mappings;
			}
			set
			{
				this._User_To_Level_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Level_To_Skill_Mapping", Storage="_Level", ThisKey="Level_Id", OtherKey="Level_Id", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.Level_To_Skill_Mappings.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.Level_To_Skill_Mappings.Add(this);
						this._Level_Id = value.Level_Id;
					}
					else
					{
						this._Level_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skill_Level_To_Skill_Mapping", Storage="_Skill", ThisKey="Skill_Id", OtherKey="Skill_Id", IsForeignKey=true)]
		public Skill Skill
		{
			get
			{
				return this._Skill.Entity;
			}
			set
			{
				Skill previousValue = this._Skill.Entity;
				if (((previousValue != value) 
							|| (this._Skill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skill.Entity = null;
						previousValue.Level_To_Skill_Mappings.Remove(this);
					}
					this._Skill.Entity = value;
					if ((value != null))
					{
						value.Level_To_Skill_Mappings.Add(this);
						this._Skill_Id = value.Skill_Id;
					}
					else
					{
						this._Skill_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Skill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_To_Level_Mappings(User_To_Level_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Level_To_Skill_Mapping = this;
		}
		
		private void detach_User_To_Level_Mappings(User_To_Level_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Level_To_Skill_Mapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login_Master")]
	public partial class Login_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Login_Id;
		
		private System.Nullable<int> _User_To_Shift_Mapping_Id;
		
		private System.Nullable<int> _Current_Status;
		
		private EntitySet<Comp_Off_Master> _Comp_Off_Masters;
		
		private EntitySet<Idle_Master> _Idle_Masters;
		
		private EntitySet<User_Daily_ToTimeStamp_Mapping> _User_Daily_ToTimeStamp_Mappings;
		
		private EntityRef<User_To_Shift_Mapping> _User_To_Shift_Mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_IdChanging(int value);
    partial void OnLogin_IdChanged();
    partial void OnUser_To_Shift_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Shift_Mapping_IdChanged();
    partial void OnCurrent_StatusChanging(System.Nullable<int> value);
    partial void OnCurrent_StatusChanged();
    #endregion
		
		public Login_Master()
		{
			this._Comp_Off_Masters = new EntitySet<Comp_Off_Master>(new Action<Comp_Off_Master>(this.attach_Comp_Off_Masters), new Action<Comp_Off_Master>(this.detach_Comp_Off_Masters));
			this._Idle_Masters = new EntitySet<Idle_Master>(new Action<Idle_Master>(this.attach_Idle_Masters), new Action<Idle_Master>(this.detach_Idle_Masters));
			this._User_Daily_ToTimeStamp_Mappings = new EntitySet<User_Daily_ToTimeStamp_Mapping>(new Action<User_Daily_ToTimeStamp_Mapping>(this.attach_User_Daily_ToTimeStamp_Mappings), new Action<User_Daily_ToTimeStamp_Mapping>(this.detach_User_Daily_ToTimeStamp_Mappings));
			this._User_To_Shift_Mapping = default(EntityRef<User_To_Shift_Mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Shift_Mapping_Id", DbType="Int")]
		public System.Nullable<int> User_To_Shift_Mapping_Id
		{
			get
			{
				return this._User_To_Shift_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Shift_Mapping_Id != value))
				{
					if (this._User_To_Shift_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Shift_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Shift_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Shift_Mapping_Id");
					this.OnUser_To_Shift_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Status", DbType="Int")]
		public System.Nullable<int> Current_Status
		{
			get
			{
				return this._Current_Status;
			}
			set
			{
				if ((this._Current_Status != value))
				{
					this.OnCurrent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Current_Status = value;
					this.SendPropertyChanged("Current_Status");
					this.OnCurrent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_Comp_Off_Master", Storage="_Comp_Off_Masters", ThisKey="Login_Id", OtherKey="Login_Id")]
		public EntitySet<Comp_Off_Master> Comp_Off_Masters
		{
			get
			{
				return this._Comp_Off_Masters;
			}
			set
			{
				this._Comp_Off_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_Idle_Master", Storage="_Idle_Masters", ThisKey="Login_Id", OtherKey="Login_Id")]
		public EntitySet<Idle_Master> Idle_Masters
		{
			get
			{
				return this._Idle_Masters;
			}
			set
			{
				this._Idle_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_User_Daily_ToTimeStamp_Mapping", Storage="_User_Daily_ToTimeStamp_Mappings", ThisKey="Login_Id", OtherKey="Login_Id")]
		public EntitySet<User_Daily_ToTimeStamp_Mapping> User_Daily_ToTimeStamp_Mappings
		{
			get
			{
				return this._User_Daily_ToTimeStamp_Mappings;
			}
			set
			{
				this._User_Daily_ToTimeStamp_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Shift_Mapping_Login_Master", Storage="_User_To_Shift_Mapping", ThisKey="User_To_Shift_Mapping_Id", OtherKey="User_To_Shift_Mapping_Id", IsForeignKey=true)]
		public User_To_Shift_Mapping User_To_Shift_Mapping
		{
			get
			{
				return this._User_To_Shift_Mapping.Entity;
			}
			set
			{
				User_To_Shift_Mapping previousValue = this._User_To_Shift_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Shift_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Shift_Mapping.Entity = null;
						previousValue.Login_Masters.Remove(this);
					}
					this._User_To_Shift_Mapping.Entity = value;
					if ((value != null))
					{
						value.Login_Masters.Add(this);
						this._User_To_Shift_Mapping_Id = value.User_To_Shift_Mapping_Id;
					}
					else
					{
						this._User_To_Shift_Mapping_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Shift_Mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comp_Off_Masters(Comp_Off_Master entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = this;
		}
		
		private void detach_Comp_Off_Masters(Comp_Off_Master entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = null;
		}
		
		private void attach_Idle_Masters(Idle_Master entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = this;
		}
		
		private void detach_Idle_Masters(Idle_Master entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = null;
		}
		
		private void attach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = this;
		}
		
		private void detach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Login_Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Options_Master")]
	public partial class Options_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Options_Id;
		
		private string _Option_Value;
		
		private System.Nullable<int> _Questionnaire_Id;
		
		private EntitySet<User_Input_To_Option_Mapping> _User_Input_To_Option_Mappings;
		
		private EntityRef<Questionnaire_Master> _Questionnaire_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptions_IdChanging(int value);
    partial void OnOptions_IdChanged();
    partial void OnOption_ValueChanging(string value);
    partial void OnOption_ValueChanged();
    partial void OnQuestionnaire_IdChanging(System.Nullable<int> value);
    partial void OnQuestionnaire_IdChanged();
    #endregion
		
		public Options_Master()
		{
			this._User_Input_To_Option_Mappings = new EntitySet<User_Input_To_Option_Mapping>(new Action<User_Input_To_Option_Mapping>(this.attach_User_Input_To_Option_Mappings), new Action<User_Input_To_Option_Mapping>(this.detach_User_Input_To_Option_Mappings));
			this._Questionnaire_Master = default(EntityRef<Questionnaire_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Options_Id
		{
			get
			{
				return this._Options_Id;
			}
			set
			{
				if ((this._Options_Id != value))
				{
					this.OnOptions_IdChanging(value);
					this.SendPropertyChanging();
					this._Options_Id = value;
					this.SendPropertyChanged("Options_Id");
					this.OnOptions_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option_Value", DbType="VarChar(50)")]
		public string Option_Value
		{
			get
			{
				return this._Option_Value;
			}
			set
			{
				if ((this._Option_Value != value))
				{
					this.OnOption_ValueChanging(value);
					this.SendPropertyChanging();
					this._Option_Value = value;
					this.SendPropertyChanged("Option_Value");
					this.OnOption_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_Id", DbType="Int")]
		public System.Nullable<int> Questionnaire_Id
		{
			get
			{
				return this._Questionnaire_Id;
			}
			set
			{
				if ((this._Questionnaire_Id != value))
				{
					if (this._Questionnaire_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaire_IdChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_Id = value;
					this.SendPropertyChanged("Questionnaire_Id");
					this.OnQuestionnaire_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Options_Master_User_Input_To_Option_Mapping", Storage="_User_Input_To_Option_Mappings", ThisKey="Options_Id", OtherKey="Options_Id")]
		public EntitySet<User_Input_To_Option_Mapping> User_Input_To_Option_Mappings
		{
			get
			{
				return this._User_Input_To_Option_Mappings;
			}
			set
			{
				this._User_Input_To_Option_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_Options_Master", Storage="_Questionnaire_Master", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id", IsForeignKey=true)]
		public Questionnaire_Master Questionnaire_Master
		{
			get
			{
				return this._Questionnaire_Master.Entity;
			}
			set
			{
				Questionnaire_Master previousValue = this._Questionnaire_Master.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire_Master.Entity = null;
						previousValue.Options_Masters.Remove(this);
					}
					this._Questionnaire_Master.Entity = value;
					if ((value != null))
					{
						value.Options_Masters.Add(this);
						this._Questionnaire_Id = value.Questionnaire_Id;
					}
					else
					{
						this._Questionnaire_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Questionnaire_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Input_To_Option_Mappings(User_Input_To_Option_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Options_Master = this;
		}
		
		private void detach_User_Input_To_Option_Mappings(User_Input_To_Option_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Options_Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Detail")]
	public partial class Order_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Detail_Id;
		
		private string _Order_Name;
		
		private System.Nullable<int> _Client_User_Id;
		
		private System.Nullable<int> _Order_Type_Id;
		
		private string _Priority;
		
		private System.Nullable<bool> _Order_Budget;
		
		private System.Nullable<int> _PO_Number_Needed;
		
		private System.Nullable<int> _IsNewOrder;
		
		private System.Nullable<int> _IsRevised;
		
		private System.Nullable<int> _Order_Status_Id;
		
		private System.Nullable<bool> _IsDiscountApplied;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Order_To_Discount_Mapping> _Order_To_Discount_Mappings;
		
		private EntitySet<Order_To_Order> _Order_To_Orders;
		
		private EntitySet<Order_To_Order> _Order_To_Orders1;
		
		private EntitySet<Order_To_Reminder_Mapping> _Order_To_Reminder_Mappings;
		
		private EntitySet<Order_To_User_Mapping> _Order_To_User_Mappings;
		
		private EntitySet<PO_To_Order_Mapping> _PO_To_Order_Mappings;
		
		private EntitySet<Tag_To_Order_Mapping> _Tag_To_Order_Mappings;
		
		private EntitySet<User_Input_to_Order_mapping> _User_Input_to_Order_mappings;
		
		private EntityRef<Order_Status> _Order_Status;
		
		private EntityRef<Order_Type> _Order_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Detail_IdChanging(int value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnOrder_NameChanging(string value);
    partial void OnOrder_NameChanged();
    partial void OnClient_User_IdChanging(System.Nullable<int> value);
    partial void OnClient_User_IdChanged();
    partial void OnOrder_Type_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Type_IdChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnOrder_BudgetChanging(System.Nullable<bool> value);
    partial void OnOrder_BudgetChanged();
    partial void OnPO_Number_NeededChanging(System.Nullable<int> value);
    partial void OnPO_Number_NeededChanged();
    partial void OnIsNewOrderChanging(System.Nullable<int> value);
    partial void OnIsNewOrderChanged();
    partial void OnIsRevisedChanging(System.Nullable<int> value);
    partial void OnIsRevisedChanged();
    partial void OnOrder_Status_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Status_IdChanged();
    partial void OnIsDiscountAppliedChanging(System.Nullable<bool> value);
    partial void OnIsDiscountAppliedChanged();
    #endregion
		
		public Order_Detail()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Order_To_Discount_Mappings = new EntitySet<Order_To_Discount_Mapping>(new Action<Order_To_Discount_Mapping>(this.attach_Order_To_Discount_Mappings), new Action<Order_To_Discount_Mapping>(this.detach_Order_To_Discount_Mappings));
			this._Order_To_Orders = new EntitySet<Order_To_Order>(new Action<Order_To_Order>(this.attach_Order_To_Orders), new Action<Order_To_Order>(this.detach_Order_To_Orders));
			this._Order_To_Orders1 = new EntitySet<Order_To_Order>(new Action<Order_To_Order>(this.attach_Order_To_Orders1), new Action<Order_To_Order>(this.detach_Order_To_Orders1));
			this._Order_To_Reminder_Mappings = new EntitySet<Order_To_Reminder_Mapping>(new Action<Order_To_Reminder_Mapping>(this.attach_Order_To_Reminder_Mappings), new Action<Order_To_Reminder_Mapping>(this.detach_Order_To_Reminder_Mappings));
			this._Order_To_User_Mappings = new EntitySet<Order_To_User_Mapping>(new Action<Order_To_User_Mapping>(this.attach_Order_To_User_Mappings), new Action<Order_To_User_Mapping>(this.detach_Order_To_User_Mappings));
			this._PO_To_Order_Mappings = new EntitySet<PO_To_Order_Mapping>(new Action<PO_To_Order_Mapping>(this.attach_PO_To_Order_Mappings), new Action<PO_To_Order_Mapping>(this.detach_PO_To_Order_Mappings));
			this._Tag_To_Order_Mappings = new EntitySet<Tag_To_Order_Mapping>(new Action<Tag_To_Order_Mapping>(this.attach_Tag_To_Order_Mappings), new Action<Tag_To_Order_Mapping>(this.detach_Tag_To_Order_Mappings));
			this._User_Input_to_Order_mappings = new EntitySet<User_Input_to_Order_mapping>(new Action<User_Input_to_Order_mapping>(this.attach_User_Input_to_Order_mappings), new Action<User_Input_to_Order_mapping>(this.detach_User_Input_to_Order_mappings));
			this._Order_Status = default(EntityRef<Order_Status>);
			this._Order_Type = default(EntityRef<Order_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Name", DbType="VarChar(50)")]
		public string Order_Name
		{
			get
			{
				return this._Order_Name;
			}
			set
			{
				if ((this._Order_Name != value))
				{
					this.OnOrder_NameChanging(value);
					this.SendPropertyChanging();
					this._Order_Name = value;
					this.SendPropertyChanged("Order_Name");
					this.OnOrder_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_User_Id", DbType="Int")]
		public System.Nullable<int> Client_User_Id
		{
			get
			{
				return this._Client_User_Id;
			}
			set
			{
				if ((this._Client_User_Id != value))
				{
					this.OnClient_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Client_User_Id = value;
					this.SendPropertyChanged("Client_User_Id");
					this.OnClient_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type_Id", DbType="Int")]
		public System.Nullable<int> Order_Type_Id
		{
			get
			{
				return this._Order_Type_Id;
			}
			set
			{
				if ((this._Order_Type_Id != value))
				{
					if (this._Order_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Type_Id = value;
					this.SendPropertyChanged("Order_Type_Id");
					this.OnOrder_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="VarChar(50)")]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Budget", DbType="Bit")]
		public System.Nullable<bool> Order_Budget
		{
			get
			{
				return this._Order_Budget;
			}
			set
			{
				if ((this._Order_Budget != value))
				{
					this.OnOrder_BudgetChanging(value);
					this.SendPropertyChanging();
					this._Order_Budget = value;
					this.SendPropertyChanged("Order_Budget");
					this.OnOrder_BudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PO_Number_Needed", DbType="Int")]
		public System.Nullable<int> PO_Number_Needed
		{
			get
			{
				return this._PO_Number_Needed;
			}
			set
			{
				if ((this._PO_Number_Needed != value))
				{
					this.OnPO_Number_NeededChanging(value);
					this.SendPropertyChanging();
					this._PO_Number_Needed = value;
					this.SendPropertyChanged("PO_Number_Needed");
					this.OnPO_Number_NeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewOrder", DbType="Int")]
		public System.Nullable<int> IsNewOrder
		{
			get
			{
				return this._IsNewOrder;
			}
			set
			{
				if ((this._IsNewOrder != value))
				{
					this.OnIsNewOrderChanging(value);
					this.SendPropertyChanging();
					this._IsNewOrder = value;
					this.SendPropertyChanged("IsNewOrder");
					this.OnIsNewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRevised", DbType="Int")]
		public System.Nullable<int> IsRevised
		{
			get
			{
				return this._IsRevised;
			}
			set
			{
				if ((this._IsRevised != value))
				{
					this.OnIsRevisedChanging(value);
					this.SendPropertyChanging();
					this._IsRevised = value;
					this.SendPropertyChanged("IsRevised");
					this.OnIsRevisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Id", DbType="Int")]
		public System.Nullable<int> Order_Status_Id
		{
			get
			{
				return this._Order_Status_Id;
			}
			set
			{
				if ((this._Order_Status_Id != value))
				{
					if (this._Order_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Id = value;
					this.SendPropertyChanged("Order_Status_Id");
					this.OnOrder_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscountApplied", DbType="Bit")]
		public System.Nullable<bool> IsDiscountApplied
		{
			get
			{
				return this._IsDiscountApplied;
			}
			set
			{
				if ((this._IsDiscountApplied != value))
				{
					this.OnIsDiscountAppliedChanging(value);
					this.SendPropertyChanging();
					this._IsDiscountApplied = value;
					this.SendPropertyChanged("IsDiscountApplied");
					this.OnIsDiscountAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Feedback", Storage="_Feedbacks", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Invoice", Storage="_Invoices", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Discount_Mapping", Storage="_Order_To_Discount_Mappings", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Order_To_Discount_Mapping> Order_To_Discount_Mappings
		{
			get
			{
				return this._Order_To_Discount_Mappings;
			}
			set
			{
				this._Order_To_Discount_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Order", Storage="_Order_To_Orders", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Order_To_Order> Order_To_Orders
		{
			get
			{
				return this._Order_To_Orders;
			}
			set
			{
				this._Order_To_Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Order1", Storage="_Order_To_Orders1", ThisKey="Order_Detail_Id", OtherKey="Parent_Order_Detail_Id")]
		public EntitySet<Order_To_Order> Order_To_Orders1
		{
			get
			{
				return this._Order_To_Orders1;
			}
			set
			{
				this._Order_To_Orders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Reminder_Mapping", Storage="_Order_To_Reminder_Mappings", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Order_To_Reminder_Mapping> Order_To_Reminder_Mappings
		{
			get
			{
				return this._Order_To_Reminder_Mappings;
			}
			set
			{
				this._Order_To_Reminder_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_User_Mapping", Storage="_Order_To_User_Mappings", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Order_To_User_Mapping> Order_To_User_Mappings
		{
			get
			{
				return this._Order_To_User_Mappings;
			}
			set
			{
				this._Order_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_PO_To_Order_Mapping", Storage="_PO_To_Order_Mappings", ThisKey="Order_Detail_Id", OtherKey="order_detail_id")]
		public EntitySet<PO_To_Order_Mapping> PO_To_Order_Mappings
		{
			get
			{
				return this._PO_To_Order_Mappings;
			}
			set
			{
				this._PO_To_Order_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Tag_To_Order_Mapping", Storage="_Tag_To_Order_Mappings", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id")]
		public EntitySet<Tag_To_Order_Mapping> Tag_To_Order_Mappings
		{
			get
			{
				return this._Tag_To_Order_Mappings;
			}
			set
			{
				this._Tag_To_Order_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_User_Input_to_Order_mapping", Storage="_User_Input_to_Order_mappings", ThisKey="Order_Detail_Id", OtherKey="order_detail_id")]
		public EntitySet<User_Input_to_Order_mapping> User_Input_to_Order_mappings
		{
			get
			{
				return this._User_Input_to_Order_mappings;
			}
			set
			{
				this._User_Input_to_Order_mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_Detail", Storage="_Order_Status", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id", IsForeignKey=true)]
		public Order_Status Order_Status
		{
			get
			{
				return this._Order_Status.Entity;
			}
			set
			{
				Order_Status previousValue = this._Order_Status.Entity;
				if (((previousValue != value) 
							|| (this._Order_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Status.Entity = null;
						previousValue.Order_Details.Remove(this);
					}
					this._Order_Status.Entity = value;
					if ((value != null))
					{
						value.Order_Details.Add(this);
						this._Order_Status_Id = value.Order_Status_Id;
					}
					else
					{
						this._Order_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Type_Order_Detail", Storage="_Order_Type", ThisKey="Order_Type_Id", OtherKey="Order_Type_Id", IsForeignKey=true)]
		public Order_Type Order_Type
		{
			get
			{
				return this._Order_Type.Entity;
			}
			set
			{
				Order_Type previousValue = this._Order_Type.Entity;
				if (((previousValue != value) 
							|| (this._Order_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Type.Entity = null;
						previousValue.Order_Details.Remove(this);
					}
					this._Order_Type.Entity = value;
					if ((value != null))
					{
						value.Order_Details.Add(this);
						this._Order_Type_Id = value.Order_Type_Id;
					}
					else
					{
						this._Order_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Order_To_Discount_Mappings(Order_To_Discount_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Order_To_Discount_Mappings(Order_To_Discount_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Order_To_Orders(Order_To_Order entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Order_To_Orders(Order_To_Order entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Order_To_Orders1(Order_To_Order entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail1 = this;
		}
		
		private void detach_Order_To_Orders1(Order_To_Order entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail1 = null;
		}
		
		private void attach_Order_To_Reminder_Mappings(Order_To_Reminder_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Order_To_Reminder_Mappings(Order_To_Reminder_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_PO_To_Order_Mappings(PO_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_PO_To_Order_Mappings(PO_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_Tag_To_Order_Mappings(Tag_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_Tag_To_Order_Mappings(Tag_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
		
		private void attach_User_Input_to_Order_mappings(User_Input_to_Order_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = this;
		}
		
		private void detach_User_Input_to_Order_mappings(User_Input_to_Order_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Detail_To_File_Mapping")]
	public partial class Order_Detail_To_File_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Detail_To_File_Mapping_Id;
		
		private System.Nullable<int> _Order_To_User_Mapping_Id;
		
		private System.Nullable<int> _File_Id;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Order_To_User_Mapping> _Order_To_User_Mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Detail_To_File_Mapping_IdChanging(int value);
    partial void OnOrder_Detail_To_File_Mapping_IdChanged();
    partial void OnOrder_To_User_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnOrder_To_User_Mapping_IdChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    #endregion
		
		public Order_Detail_To_File_Mapping()
		{
			this._File_Master = default(EntityRef<File_Master>);
			this._Order_To_User_Mapping = default(EntityRef<Order_To_User_Mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_To_File_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Detail_To_File_Mapping_Id
		{
			get
			{
				return this._Order_Detail_To_File_Mapping_Id;
			}
			set
			{
				if ((this._Order_Detail_To_File_Mapping_Id != value))
				{
					this.OnOrder_Detail_To_File_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_To_File_Mapping_Id = value;
					this.SendPropertyChanged("Order_Detail_To_File_Mapping_Id");
					this.OnOrder_Detail_To_File_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_User_Mapping_Id", DbType="Int")]
		public System.Nullable<int> Order_To_User_Mapping_Id
		{
			get
			{
				return this._Order_To_User_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_User_Mapping_Id != value))
				{
					if (this._Order_To_User_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_User_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_User_Mapping_Id");
					this.OnOrder_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Order_Detail_To_File_Mapping", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Order_Detail_To_File_Mappings.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Order_Detail_To_File_Mappings.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_Detail_To_File_Mapping", Storage="_Order_To_User_Mapping", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id", IsForeignKey=true)]
		public Order_To_User_Mapping Order_To_User_Mapping
		{
			get
			{
				return this._Order_To_User_Mapping.Entity;
			}
			set
			{
				Order_To_User_Mapping previousValue = this._Order_To_User_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._Order_To_User_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_To_User_Mapping.Entity = null;
						previousValue.Order_Detail_To_File_Mappings.Remove(this);
					}
					this._Order_To_User_Mapping.Entity = value;
					if ((value != null))
					{
						value.Order_Detail_To_File_Mappings.Add(this);
						this._Order_To_User_Mapping_Id = value.Order_To_User_Mapping_Id;
					}
					else
					{
						this._Order_To_User_Mapping_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_To_User_Mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Quote_Master")]
	public partial class Order_Quote_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Quote_Master_Id;
		
		private System.Nullable<int> _Order_To_User_Mapping_Id;
		
		private System.Nullable<decimal> _Original_Order_Amount;
		
		private System.Nullable<decimal> _Additional_Amount;
		
		private EntityRef<Order_To_User_Mapping> _Order_To_User_Mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Quote_Master_IdChanging(int value);
    partial void OnOrder_Quote_Master_IdChanged();
    partial void OnOrder_To_User_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnOrder_To_User_Mapping_IdChanged();
    partial void OnOriginal_Order_AmountChanging(System.Nullable<decimal> value);
    partial void OnOriginal_Order_AmountChanged();
    partial void OnAdditional_AmountChanging(System.Nullable<decimal> value);
    partial void OnAdditional_AmountChanged();
    #endregion
		
		public Order_Quote_Master()
		{
			this._Order_To_User_Mapping = default(EntityRef<Order_To_User_Mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Quote_Master_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Quote_Master_Id
		{
			get
			{
				return this._Order_Quote_Master_Id;
			}
			set
			{
				if ((this._Order_Quote_Master_Id != value))
				{
					this.OnOrder_Quote_Master_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Quote_Master_Id = value;
					this.SendPropertyChanged("Order_Quote_Master_Id");
					this.OnOrder_Quote_Master_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_User_Mapping_Id", DbType="Int")]
		public System.Nullable<int> Order_To_User_Mapping_Id
		{
			get
			{
				return this._Order_To_User_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_User_Mapping_Id != value))
				{
					if (this._Order_To_User_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_User_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_User_Mapping_Id");
					this.OnOrder_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original_Order_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Original_Order_Amount
		{
			get
			{
				return this._Original_Order_Amount;
			}
			set
			{
				if ((this._Original_Order_Amount != value))
				{
					this.OnOriginal_Order_AmountChanging(value);
					this.SendPropertyChanging();
					this._Original_Order_Amount = value;
					this.SendPropertyChanged("Original_Order_Amount");
					this.OnOriginal_Order_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additional_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Additional_Amount
		{
			get
			{
				return this._Additional_Amount;
			}
			set
			{
				if ((this._Additional_Amount != value))
				{
					this.OnAdditional_AmountChanging(value);
					this.SendPropertyChanging();
					this._Additional_Amount = value;
					this.SendPropertyChanged("Additional_Amount");
					this.OnAdditional_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_Quote_Master", Storage="_Order_To_User_Mapping", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id", IsForeignKey=true)]
		public Order_To_User_Mapping Order_To_User_Mapping
		{
			get
			{
				return this._Order_To_User_Mapping.Entity;
			}
			set
			{
				Order_To_User_Mapping previousValue = this._Order_To_User_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._Order_To_User_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_To_User_Mapping.Entity = null;
						previousValue.Order_Quote_Masters.Remove(this);
					}
					this._Order_To_User_Mapping.Entity = value;
					if ((value != null))
					{
						value.Order_Quote_Masters.Add(this);
						this._Order_To_User_Mapping_Id = value.Order_To_User_Mapping_Id;
					}
					else
					{
						this._Order_To_User_Mapping_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_To_User_Mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Status")]
	public partial class Order_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Status_Id;
		
		private string _Order_Status_Name;
		
		private EntitySet<Order_Detail> _Order_Details;
		
		private EntitySet<Order_Status_Questionnaire_Mapping> _Order_Status_Questionnaire_Mappings;
		
		private EntitySet<Order_To_User_Mapping> _Order_To_User_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Status_IdChanging(int value);
    partial void OnOrder_Status_IdChanged();
    partial void OnOrder_Status_NameChanging(string value);
    partial void OnOrder_Status_NameChanged();
    #endregion
		
		public Order_Status()
		{
			this._Order_Details = new EntitySet<Order_Detail>(new Action<Order_Detail>(this.attach_Order_Details), new Action<Order_Detail>(this.detach_Order_Details));
			this._Order_Status_Questionnaire_Mappings = new EntitySet<Order_Status_Questionnaire_Mapping>(new Action<Order_Status_Questionnaire_Mapping>(this.attach_Order_Status_Questionnaire_Mappings), new Action<Order_Status_Questionnaire_Mapping>(this.detach_Order_Status_Questionnaire_Mappings));
			this._Order_To_User_Mappings = new EntitySet<Order_To_User_Mapping>(new Action<Order_To_User_Mapping>(this.attach_Order_To_User_Mappings), new Action<Order_To_User_Mapping>(this.detach_Order_To_User_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Status_Id
		{
			get
			{
				return this._Order_Status_Id;
			}
			set
			{
				if ((this._Order_Status_Id != value))
				{
					this.OnOrder_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Id = value;
					this.SendPropertyChanged("Order_Status_Id");
					this.OnOrder_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Name", DbType="VarChar(50)")]
		public string Order_Status_Name
		{
			get
			{
				return this._Order_Status_Name;
			}
			set
			{
				if ((this._Order_Status_Name != value))
				{
					this.OnOrder_Status_NameChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Name = value;
					this.SendPropertyChanged("Order_Status_Name");
					this.OnOrder_Status_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_Detail", Storage="_Order_Details", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id")]
		public EntitySet<Order_Detail> Order_Details
		{
			get
			{
				return this._Order_Details;
			}
			set
			{
				this._Order_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_Status_Questionnaire_Mapping", Storage="_Order_Status_Questionnaire_Mappings", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id")]
		public EntitySet<Order_Status_Questionnaire_Mapping> Order_Status_Questionnaire_Mappings
		{
			get
			{
				return this._Order_Status_Questionnaire_Mappings;
			}
			set
			{
				this._Order_Status_Questionnaire_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_To_User_Mapping", Storage="_Order_To_User_Mappings", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id")]
		public EntitySet<Order_To_User_Mapping> Order_To_User_Mappings
		{
			get
			{
				return this._Order_To_User_Mappings;
			}
			set
			{
				this._Order_To_User_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Details(Order_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = this;
		}
		
		private void detach_Order_Details(Order_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = null;
		}
		
		private void attach_Order_Status_Questionnaire_Mappings(Order_Status_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = this;
		}
		
		private void detach_Order_Status_Questionnaire_Mappings(Order_Status_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = null;
		}
		
		private void attach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = this;
		}
		
		private void detach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Status_Questionnaire_Mapping")]
	public partial class Order_Status_Questionnaire_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Status_Questionnaire_Mapping_Id;
		
		private System.Nullable<int> _Order_Status_Id;
		
		private System.Nullable<int> _Questionnaire_Id;
		
		private EntityRef<Order_Status> _Order_Status;
		
		private EntityRef<Questionnaire_Master> _Questionnaire_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Status_Questionnaire_Mapping_IdChanging(int value);
    partial void OnOrder_Status_Questionnaire_Mapping_IdChanged();
    partial void OnOrder_Status_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Status_IdChanged();
    partial void OnQuestionnaire_IdChanging(System.Nullable<int> value);
    partial void OnQuestionnaire_IdChanged();
    #endregion
		
		public Order_Status_Questionnaire_Mapping()
		{
			this._Order_Status = default(EntityRef<Order_Status>);
			this._Questionnaire_Master = default(EntityRef<Questionnaire_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Questionnaire_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Status_Questionnaire_Mapping_Id
		{
			get
			{
				return this._Order_Status_Questionnaire_Mapping_Id;
			}
			set
			{
				if ((this._Order_Status_Questionnaire_Mapping_Id != value))
				{
					this.OnOrder_Status_Questionnaire_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Questionnaire_Mapping_Id = value;
					this.SendPropertyChanged("Order_Status_Questionnaire_Mapping_Id");
					this.OnOrder_Status_Questionnaire_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Id", DbType="Int")]
		public System.Nullable<int> Order_Status_Id
		{
			get
			{
				return this._Order_Status_Id;
			}
			set
			{
				if ((this._Order_Status_Id != value))
				{
					if (this._Order_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Id = value;
					this.SendPropertyChanged("Order_Status_Id");
					this.OnOrder_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_Id", DbType="Int")]
		public System.Nullable<int> Questionnaire_Id
		{
			get
			{
				return this._Questionnaire_Id;
			}
			set
			{
				if ((this._Questionnaire_Id != value))
				{
					if (this._Questionnaire_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaire_IdChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_Id = value;
					this.SendPropertyChanged("Questionnaire_Id");
					this.OnQuestionnaire_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_Status_Questionnaire_Mapping", Storage="_Order_Status", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id", IsForeignKey=true)]
		public Order_Status Order_Status
		{
			get
			{
				return this._Order_Status.Entity;
			}
			set
			{
				Order_Status previousValue = this._Order_Status.Entity;
				if (((previousValue != value) 
							|| (this._Order_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Status.Entity = null;
						previousValue.Order_Status_Questionnaire_Mappings.Remove(this);
					}
					this._Order_Status.Entity = value;
					if ((value != null))
					{
						value.Order_Status_Questionnaire_Mappings.Add(this);
						this._Order_Status_Id = value.Order_Status_Id;
					}
					else
					{
						this._Order_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_Order_Status_Questionnaire_Mapping", Storage="_Questionnaire_Master", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id", IsForeignKey=true)]
		public Questionnaire_Master Questionnaire_Master
		{
			get
			{
				return this._Questionnaire_Master.Entity;
			}
			set
			{
				Questionnaire_Master previousValue = this._Questionnaire_Master.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire_Master.Entity = null;
						previousValue.Order_Status_Questionnaire_Mappings.Remove(this);
					}
					this._Questionnaire_Master.Entity = value;
					if ((value != null))
					{
						value.Order_Status_Questionnaire_Mappings.Add(this);
						this._Questionnaire_Id = value.Questionnaire_Id;
					}
					else
					{
						this._Questionnaire_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Questionnaire_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Discount_Mapping")]
	public partial class Order_To_Discount_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_To_Discount_Mapping_Id;
		
		private System.Nullable<int> _Discount_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private EntityRef<Discount> _Discount;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_To_Discount_Mapping_IdChanging(int value);
    partial void OnOrder_To_Discount_Mapping_IdChanged();
    partial void OnDiscount_IdChanging(System.Nullable<int> value);
    partial void OnDiscount_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    #endregion
		
		public Order_To_Discount_Mapping()
		{
			this._Discount = default(EntityRef<Discount>);
			this._Order_Detail = default(EntityRef<Order_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_Discount_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_To_Discount_Mapping_Id
		{
			get
			{
				return this._Order_To_Discount_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_Discount_Mapping_Id != value))
				{
					this.OnOrder_To_Discount_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_Discount_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_Discount_Mapping_Id");
					this.OnOrder_To_Discount_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Id", DbType="Int")]
		public System.Nullable<int> Discount_Id
		{
			get
			{
				return this._Discount_Id;
			}
			set
			{
				if ((this._Discount_Id != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Id = value;
					this.SendPropertyChanged("Discount_Id");
					this.OnDiscount_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Order_To_Discount_Mapping", Storage="_Discount", ThisKey="Discount_Id", OtherKey="Discount_Id", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.Order_To_Discount_Mappings.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.Order_To_Discount_Mappings.Add(this);
						this._Discount_Id = value.Discount_Id;
					}
					else
					{
						this._Discount_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Discount_Mapping", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Order_To_Discount_Mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Order_To_Discount_Mappings.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Instruction_Mapping")]
	public partial class Order_To_Instruction_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_To_Instruction_Mapping_Id;
		
		private System.Nullable<int> _Order_To_User_Mapping_Id;
		
		private System.Nullable<int> _Instruction_Id;
		
		private EntityRef<Instruction> _Instruction;
		
		private EntityRef<Order_To_User_Mapping> _Order_To_User_Mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_To_Instruction_Mapping_IdChanging(int value);
    partial void OnOrder_To_Instruction_Mapping_IdChanged();
    partial void OnOrder_To_User_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnOrder_To_User_Mapping_IdChanged();
    partial void OnInstruction_IdChanging(System.Nullable<int> value);
    partial void OnInstruction_IdChanged();
    #endregion
		
		public Order_To_Instruction_Mapping()
		{
			this._Instruction = default(EntityRef<Instruction>);
			this._Order_To_User_Mapping = default(EntityRef<Order_To_User_Mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_Instruction_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_To_Instruction_Mapping_Id
		{
			get
			{
				return this._Order_To_Instruction_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_Instruction_Mapping_Id != value))
				{
					this.OnOrder_To_Instruction_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_Instruction_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_Instruction_Mapping_Id");
					this.OnOrder_To_Instruction_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_User_Mapping_Id", DbType="Int")]
		public System.Nullable<int> Order_To_User_Mapping_Id
		{
			get
			{
				return this._Order_To_User_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_User_Mapping_Id != value))
				{
					if (this._Order_To_User_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_User_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_User_Mapping_Id");
					this.OnOrder_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_Id", DbType="Int")]
		public System.Nullable<int> Instruction_Id
		{
			get
			{
				return this._Instruction_Id;
			}
			set
			{
				if ((this._Instruction_Id != value))
				{
					if (this._Instruction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstruction_IdChanging(value);
					this.SendPropertyChanging();
					this._Instruction_Id = value;
					this.SendPropertyChanged("Instruction_Id");
					this.OnInstruction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Order_To_Instruction_Mapping", Storage="_Instruction", ThisKey="Instruction_Id", OtherKey="Instruction_Id", IsForeignKey=true)]
		public Instruction Instruction
		{
			get
			{
				return this._Instruction.Entity;
			}
			set
			{
				Instruction previousValue = this._Instruction.Entity;
				if (((previousValue != value) 
							|| (this._Instruction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instruction.Entity = null;
						previousValue.Order_To_Instruction_Mappings.Remove(this);
					}
					this._Instruction.Entity = value;
					if ((value != null))
					{
						value.Order_To_Instruction_Mappings.Add(this);
						this._Instruction_Id = value.Instruction_Id;
					}
					else
					{
						this._Instruction_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Instruction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_To_Instruction_Mapping", Storage="_Order_To_User_Mapping", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id", IsForeignKey=true)]
		public Order_To_User_Mapping Order_To_User_Mapping
		{
			get
			{
				return this._Order_To_User_Mapping.Entity;
			}
			set
			{
				Order_To_User_Mapping previousValue = this._Order_To_User_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._Order_To_User_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_To_User_Mapping.Entity = null;
						previousValue.Order_To_Instruction_Mappings.Remove(this);
					}
					this._Order_To_User_Mapping.Entity = value;
					if ((value != null))
					{
						value.Order_To_Instruction_Mappings.Add(this);
						this._Order_To_User_Mapping_Id = value.Order_To_User_Mapping_Id;
					}
					else
					{
						this._Order_To_User_Mapping_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_To_User_Mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Order")]
	public partial class Order_To_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_To_Order_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private System.Nullable<int> _Parent_Order_Detail_Id;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<Order_Detail> _Order_Detail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_To_Order_IdChanging(int value);
    partial void OnOrder_To_Order_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnParent_Order_Detail_IdChanging(System.Nullable<int> value);
    partial void OnParent_Order_Detail_IdChanged();
    #endregion
		
		public Order_To_Order()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._Order_Detail1 = default(EntityRef<Order_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_Order_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_To_Order_Id
		{
			get
			{
				return this._Order_To_Order_Id;
			}
			set
			{
				if ((this._Order_To_Order_Id != value))
				{
					this.OnOrder_To_Order_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_Order_Id = value;
					this.SendPropertyChanged("Order_To_Order_Id");
					this.OnOrder_To_Order_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Parent_Order_Detail_Id
		{
			get
			{
				return this._Parent_Order_Detail_Id;
			}
			set
			{
				if ((this._Parent_Order_Detail_Id != value))
				{
					if (this._Order_Detail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_Order_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_Order_Detail_Id = value;
					this.SendPropertyChanged("Parent_Order_Detail_Id");
					this.OnParent_Order_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Order", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Order_To_Orders.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Order_To_Orders.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Order1", Storage="_Order_Detail1", ThisKey="Parent_Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail1
		{
			get
			{
				return this._Order_Detail1.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail1.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail1.Entity = null;
						previousValue.Order_To_Orders1.Remove(this);
					}
					this._Order_Detail1.Entity = value;
					if ((value != null))
					{
						value.Order_To_Orders1.Add(this);
						this._Parent_Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Parent_Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Reminder_Mapping")]
	public partial class Order_To_Reminder_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_To_Reminder_Mapping_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private System.Nullable<int> _Reminder_Id;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<Reminder> _Reminder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_To_Reminder_Mapping_IdChanging(int value);
    partial void OnOrder_To_Reminder_Mapping_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnReminder_IdChanging(System.Nullable<int> value);
    partial void OnReminder_IdChanged();
    #endregion
		
		public Order_To_Reminder_Mapping()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._Reminder = default(EntityRef<Reminder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_Reminder_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_To_Reminder_Mapping_Id
		{
			get
			{
				return this._Order_To_Reminder_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_Reminder_Mapping_Id != value))
				{
					this.OnOrder_To_Reminder_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_Reminder_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_Reminder_Mapping_Id");
					this.OnOrder_To_Reminder_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Id", DbType="Int")]
		public System.Nullable<int> Reminder_Id
		{
			get
			{
				return this._Reminder_Id;
			}
			set
			{
				if ((this._Reminder_Id != value))
				{
					if (this._Reminder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReminder_IdChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Id = value;
					this.SendPropertyChanged("Reminder_Id");
					this.OnReminder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_Reminder_Mapping", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Order_To_Reminder_Mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Order_To_Reminder_Mappings.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_Order_To_Reminder_Mapping", Storage="_Reminder", ThisKey="Reminder_Id", OtherKey="Reminder_Id", IsForeignKey=true)]
		public Reminder Reminder
		{
			get
			{
				return this._Reminder.Entity;
			}
			set
			{
				Reminder previousValue = this._Reminder.Entity;
				if (((previousValue != value) 
							|| (this._Reminder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reminder.Entity = null;
						previousValue.Order_To_Reminder_Mappings.Remove(this);
					}
					this._Reminder.Entity = value;
					if ((value != null))
					{
						value.Order_To_Reminder_Mappings.Add(this);
						this._Reminder_Id = value.Reminder_Id;
					}
					else
					{
						this._Reminder_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reminder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_User_Mapping")]
	public partial class Order_To_User_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_To_User_Mapping_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Order_Status_Id;
		
		private System.Nullable<int> _Time_Stamp_Id;
		
		private EntitySet<Order_Detail_To_File_Mapping> _Order_Detail_To_File_Mappings;
		
		private EntitySet<Order_Quote_Master> _Order_Quote_Masters;
		
		private EntitySet<Order_To_Instruction_Mapping> _Order_To_Instruction_Mappings;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<Order_Status> _Order_Status;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_To_User_Mapping_IdChanging(int value);
    partial void OnOrder_To_User_Mapping_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnOrder_Status_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Status_IdChanged();
    partial void OnTime_Stamp_IdChanging(System.Nullable<int> value);
    partial void OnTime_Stamp_IdChanged();
    #endregion
		
		public Order_To_User_Mapping()
		{
			this._Order_Detail_To_File_Mappings = new EntitySet<Order_Detail_To_File_Mapping>(new Action<Order_Detail_To_File_Mapping>(this.attach_Order_Detail_To_File_Mappings), new Action<Order_Detail_To_File_Mapping>(this.detach_Order_Detail_To_File_Mappings));
			this._Order_Quote_Masters = new EntitySet<Order_Quote_Master>(new Action<Order_Quote_Master>(this.attach_Order_Quote_Masters), new Action<Order_Quote_Master>(this.detach_Order_Quote_Masters));
			this._Order_To_Instruction_Mappings = new EntitySet<Order_To_Instruction_Mapping>(new Action<Order_To_Instruction_Mapping>(this.attach_Order_To_Instruction_Mappings), new Action<Order_To_Instruction_Mapping>(this.detach_Order_To_Instruction_Mappings));
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._Order_Status = default(EntityRef<Order_Status>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_User_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_To_User_Mapping_Id
		{
			get
			{
				return this._Order_To_User_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_User_Mapping_Id != value))
				{
					this.OnOrder_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_User_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_User_Mapping_Id");
					this.OnOrder_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status_Id", DbType="Int")]
		public System.Nullable<int> Order_Status_Id
		{
			get
			{
				return this._Order_Status_Id;
			}
			set
			{
				if ((this._Order_Status_Id != value))
				{
					if (this._Order_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Status_Id = value;
					this.SendPropertyChanged("Order_Status_Id");
					this.OnOrder_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", DbType="Int")]
		public System.Nullable<int> Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_Detail_To_File_Mapping", Storage="_Order_Detail_To_File_Mappings", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id")]
		public EntitySet<Order_Detail_To_File_Mapping> Order_Detail_To_File_Mappings
		{
			get
			{
				return this._Order_Detail_To_File_Mappings;
			}
			set
			{
				this._Order_Detail_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_Quote_Master", Storage="_Order_Quote_Masters", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id")]
		public EntitySet<Order_Quote_Master> Order_Quote_Masters
		{
			get
			{
				return this._Order_Quote_Masters;
			}
			set
			{
				this._Order_Quote_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_User_Mapping_Order_To_Instruction_Mapping", Storage="_Order_To_Instruction_Mappings", ThisKey="Order_To_User_Mapping_Id", OtherKey="Order_To_User_Mapping_Id")]
		public EntitySet<Order_To_Instruction_Mapping> Order_To_Instruction_Mappings
		{
			get
			{
				return this._Order_To_Instruction_Mappings;
			}
			set
			{
				this._Order_To_Instruction_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order_To_User_Mapping", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Order_To_User_Mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Order_To_User_Mappings.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_Order_To_User_Mapping", Storage="_Order_Status", ThisKey="Order_Status_Id", OtherKey="Order_Status_Id", IsForeignKey=true)]
		public Order_Status Order_Status
		{
			get
			{
				return this._Order_Status.Entity;
			}
			set
			{
				Order_Status previousValue = this._Order_Status.Entity;
				if (((previousValue != value) 
							|| (this._Order_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Status.Entity = null;
						previousValue.Order_To_User_Mappings.Remove(this);
					}
					this._Order_Status.Entity = value;
					if ((value != null))
					{
						value.Order_To_User_Mappings.Add(this);
						this._Order_Status_Id = value.Order_Status_Id;
					}
					else
					{
						this._Order_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Order_To_User_Mapping", Storage="_Time_Stamp", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.Order_To_User_Mappings.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.Order_To_User_Mappings.Add(this);
						this._Time_Stamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._Time_Stamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order_To_User_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Order_To_User_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Order_To_User_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Detail_To_File_Mappings(Order_Detail_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = this;
		}
		
		private void detach_Order_Detail_To_File_Mappings(Order_Detail_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = null;
		}
		
		private void attach_Order_Quote_Masters(Order_Quote_Master entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = this;
		}
		
		private void detach_Order_Quote_Masters(Order_Quote_Master entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = null;
		}
		
		private void attach_Order_To_Instruction_Mappings(Order_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = this;
		}
		
		private void detach_Order_To_Instruction_Mappings(Order_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_To_User_Mapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Type")]
	public partial class Order_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Type_Id;
		
		private string _Order_Type_Name;
		
		private System.Nullable<int> _Level_Id;
		
		private EntitySet<Order_Detail> _Order_Details;
		
		private EntitySet<Order_Type_To_File_Mapping> _Order_Type_To_File_Mappings;
		
		private EntityRef<Level> _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Type_IdChanging(int value);
    partial void OnOrder_Type_IdChanged();
    partial void OnOrder_Type_NameChanging(string value);
    partial void OnOrder_Type_NameChanged();
    partial void OnLevel_IdChanging(System.Nullable<int> value);
    partial void OnLevel_IdChanged();
    #endregion
		
		public Order_Type()
		{
			this._Order_Details = new EntitySet<Order_Detail>(new Action<Order_Detail>(this.attach_Order_Details), new Action<Order_Detail>(this.detach_Order_Details));
			this._Order_Type_To_File_Mappings = new EntitySet<Order_Type_To_File_Mapping>(new Action<Order_Type_To_File_Mapping>(this.attach_Order_Type_To_File_Mappings), new Action<Order_Type_To_File_Mapping>(this.detach_Order_Type_To_File_Mappings));
			this._Level = default(EntityRef<Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Type_Id
		{
			get
			{
				return this._Order_Type_Id;
			}
			set
			{
				if ((this._Order_Type_Id != value))
				{
					this.OnOrder_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Type_Id = value;
					this.SendPropertyChanged("Order_Type_Id");
					this.OnOrder_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type_Name", DbType="VarChar(50)")]
		public string Order_Type_Name
		{
			get
			{
				return this._Order_Type_Name;
			}
			set
			{
				if ((this._Order_Type_Name != value))
				{
					this.OnOrder_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Order_Type_Name = value;
					this.SendPropertyChanged("Order_Type_Name");
					this.OnOrder_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_Id", DbType="Int")]
		public System.Nullable<int> Level_Id
		{
			get
			{
				return this._Level_Id;
			}
			set
			{
				if ((this._Level_Id != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevel_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_Id = value;
					this.SendPropertyChanged("Level_Id");
					this.OnLevel_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Type_Order_Detail", Storage="_Order_Details", ThisKey="Order_Type_Id", OtherKey="Order_Type_Id")]
		public EntitySet<Order_Detail> Order_Details
		{
			get
			{
				return this._Order_Details;
			}
			set
			{
				this._Order_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Type_Order_Type_To_File_Mapping", Storage="_Order_Type_To_File_Mappings", ThisKey="Order_Type_Id", OtherKey="Order_Type_Id")]
		public EntitySet<Order_Type_To_File_Mapping> Order_Type_To_File_Mappings
		{
			get
			{
				return this._Order_Type_To_File_Mappings;
			}
			set
			{
				this._Order_Type_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Order_Type", Storage="_Level", ThisKey="Level_Id", OtherKey="Level_Id", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.Order_Types.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.Order_Types.Add(this);
						this._Level_Id = value.Level_Id;
					}
					else
					{
						this._Level_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Details(Order_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Type = this;
		}
		
		private void detach_Order_Details(Order_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Order_Type = null;
		}
		
		private void attach_Order_Type_To_File_Mappings(Order_Type_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Type = this;
		}
		
		private void detach_Order_Type_To_File_Mappings(Order_Type_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Order_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Type_To_File_Mapping")]
	public partial class Order_Type_To_File_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Type_To_File_Mapping_Id;
		
		private System.Nullable<int> _Order_Type_Id;
		
		private System.Nullable<int> _File_Id;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Order_Type> _Order_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Type_To_File_Mapping_IdChanging(int value);
    partial void OnOrder_Type_To_File_Mapping_IdChanged();
    partial void OnOrder_Type_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Type_IdChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    #endregion
		
		public Order_Type_To_File_Mapping()
		{
			this._File_Master = default(EntityRef<File_Master>);
			this._Order_Type = default(EntityRef<Order_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type_To_File_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Type_To_File_Mapping_Id
		{
			get
			{
				return this._Order_Type_To_File_Mapping_Id;
			}
			set
			{
				if ((this._Order_Type_To_File_Mapping_Id != value))
				{
					this.OnOrder_Type_To_File_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Type_To_File_Mapping_Id = value;
					this.SendPropertyChanged("Order_Type_To_File_Mapping_Id");
					this.OnOrder_Type_To_File_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Type_Id", DbType="Int")]
		public System.Nullable<int> Order_Type_Id
		{
			get
			{
				return this._Order_Type_Id;
			}
			set
			{
				if ((this._Order_Type_Id != value))
				{
					if (this._Order_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Type_Id = value;
					this.SendPropertyChanged("Order_Type_Id");
					this.OnOrder_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Order_Type_To_File_Mapping", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Order_Type_To_File_Mappings.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Order_Type_To_File_Mappings.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Type_Order_Type_To_File_Mapping", Storage="_Order_Type", ThisKey="Order_Type_Id", OtherKey="Order_Type_Id", IsForeignKey=true)]
		public Order_Type Order_Type
		{
			get
			{
				return this._Order_Type.Entity;
			}
			set
			{
				Order_Type previousValue = this._Order_Type.Entity;
				if (((previousValue != value) 
							|| (this._Order_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Type.Entity = null;
						previousValue.Order_Type_To_File_Mappings.Remove(this);
					}
					this._Order_Type.Entity = value;
					if ((value != null))
					{
						value.Order_Type_To_File_Mappings.Add(this);
						this._Order_Type_Id = value.Order_Type_Id;
					}
					else
					{
						this._Order_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_Id;
		
		private System.Nullable<int> _Payment_Mode_Id;
		
		private System.Nullable<int> _Payment_Type_Id;
		
		private System.Nullable<int> _Payer_User_Id;
		
		private System.Nullable<int> _Receiver_User_Id;
		
		private EntitySet<Payment_To_File_Mapping> _Payment_To_File_Mappings;
		
		private EntitySet<Payment_To_Invoice_Mapping> _Payment_To_Invoice_Mappings;
		
		private EntityRef<Payment_Mode> _Payment_Mode;
		
		private EntityRef<Payment_Type> _Payment_Type;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_IdChanging(int value);
    partial void OnPayment_IdChanged();
    partial void OnPayment_Mode_IdChanging(System.Nullable<int> value);
    partial void OnPayment_Mode_IdChanged();
    partial void OnPayment_Type_IdChanging(System.Nullable<int> value);
    partial void OnPayment_Type_IdChanged();
    partial void OnPayer_User_IdChanging(System.Nullable<int> value);
    partial void OnPayer_User_IdChanged();
    partial void OnReceiver_User_IdChanging(System.Nullable<int> value);
    partial void OnReceiver_User_IdChanged();
    #endregion
		
		public Payment()
		{
			this._Payment_To_File_Mappings = new EntitySet<Payment_To_File_Mapping>(new Action<Payment_To_File_Mapping>(this.attach_Payment_To_File_Mappings), new Action<Payment_To_File_Mapping>(this.detach_Payment_To_File_Mappings));
			this._Payment_To_Invoice_Mappings = new EntitySet<Payment_To_Invoice_Mapping>(new Action<Payment_To_Invoice_Mapping>(this.attach_Payment_To_Invoice_Mappings), new Action<Payment_To_Invoice_Mapping>(this.detach_Payment_To_Invoice_Mappings));
			this._Payment_Mode = default(EntityRef<Payment_Mode>);
			this._Payment_Type = default(EntityRef<Payment_Type>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_Id
		{
			get
			{
				return this._Payment_Id;
			}
			set
			{
				if ((this._Payment_Id != value))
				{
					this.OnPayment_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Id = value;
					this.SendPropertyChanged("Payment_Id");
					this.OnPayment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Mode_Id", DbType="Int")]
		public System.Nullable<int> Payment_Mode_Id
		{
			get
			{
				return this._Payment_Mode_Id;
			}
			set
			{
				if ((this._Payment_Mode_Id != value))
				{
					if (this._Payment_Mode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayment_Mode_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Mode_Id = value;
					this.SendPropertyChanged("Payment_Mode_Id");
					this.OnPayment_Mode_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Type_Id", DbType="Int")]
		public System.Nullable<int> Payment_Type_Id
		{
			get
			{
				return this._Payment_Type_Id;
			}
			set
			{
				if ((this._Payment_Type_Id != value))
				{
					if (this._Payment_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayment_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Type_Id = value;
					this.SendPropertyChanged("Payment_Type_Id");
					this.OnPayment_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payer_User_Id", DbType="Int")]
		public System.Nullable<int> Payer_User_Id
		{
			get
			{
				return this._Payer_User_Id;
			}
			set
			{
				if ((this._Payer_User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayer_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Payer_User_Id = value;
					this.SendPropertyChanged("Payer_User_Id");
					this.OnPayer_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver_User_Id", DbType="Int")]
		public System.Nullable<int> Receiver_User_Id
		{
			get
			{
				return this._Receiver_User_Id;
			}
			set
			{
				if ((this._Receiver_User_Id != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiver_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Receiver_User_Id = value;
					this.SendPropertyChanged("Receiver_User_Id");
					this.OnReceiver_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment_To_File_Mapping", Storage="_Payment_To_File_Mappings", ThisKey="Payment_Id", OtherKey="Payment_Id")]
		public EntitySet<Payment_To_File_Mapping> Payment_To_File_Mappings
		{
			get
			{
				return this._Payment_To_File_Mappings;
			}
			set
			{
				this._Payment_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment_To_Invoice_Mapping", Storage="_Payment_To_Invoice_Mappings", ThisKey="Payment_Id", OtherKey="Payment_Id")]
		public EntitySet<Payment_To_Invoice_Mapping> Payment_To_Invoice_Mappings
		{
			get
			{
				return this._Payment_To_Invoice_Mappings;
			}
			set
			{
				this._Payment_To_Invoice_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Mode_Payment", Storage="_Payment_Mode", ThisKey="Payment_Mode_Id", OtherKey="Payment_Mode_Id", IsForeignKey=true)]
		public Payment_Mode Payment_Mode
		{
			get
			{
				return this._Payment_Mode.Entity;
			}
			set
			{
				Payment_Mode previousValue = this._Payment_Mode.Entity;
				if (((previousValue != value) 
							|| (this._Payment_Mode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment_Mode.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Payment_Mode.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Payment_Mode_Id = value.Payment_Mode_Id;
					}
					else
					{
						this._Payment_Mode_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment_Mode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Type_Payment", Storage="_Payment_Type", ThisKey="Payment_Type_Id", OtherKey="Payment_Type_Id", IsForeignKey=true)]
		public Payment_Type Payment_Type
		{
			get
			{
				return this._Payment_Type.Entity;
			}
			set
			{
				Payment_Type previousValue = this._Payment_Type.Entity;
				if (((previousValue != value) 
							|| (this._Payment_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment_Type.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Payment_Type.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Payment_Type_Id = value.Payment_Type_Id;
					}
					else
					{
						this._Payment_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_User", ThisKey="Payer_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Payer_User_Id = value.User_Id;
					}
					else
					{
						this._Payer_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment1", Storage="_User1", ThisKey="Receiver_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Payments1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Payments1.Add(this);
						this._Receiver_User_Id = value.User_Id;
					}
					else
					{
						this._Receiver_User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_To_File_Mappings(Payment_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_Payment_To_File_Mappings(Payment_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
		
		private void attach_Payment_To_Invoice_Mappings(Payment_To_Invoice_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_Payment_To_Invoice_Mappings(Payment_To_Invoice_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_Mode")]
	public partial class Payment_Mode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_Mode_Id;
		
		private string _Payment_Mode_Name;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<User_Payment_Preference_Mapping> _User_Payment_Preference_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_Mode_IdChanging(int value);
    partial void OnPayment_Mode_IdChanged();
    partial void OnPayment_Mode_NameChanging(string value);
    partial void OnPayment_Mode_NameChanged();
    #endregion
		
		public Payment_Mode()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._User_Payment_Preference_Mappings = new EntitySet<User_Payment_Preference_Mapping>(new Action<User_Payment_Preference_Mapping>(this.attach_User_Payment_Preference_Mappings), new Action<User_Payment_Preference_Mapping>(this.detach_User_Payment_Preference_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Mode_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_Mode_Id
		{
			get
			{
				return this._Payment_Mode_Id;
			}
			set
			{
				if ((this._Payment_Mode_Id != value))
				{
					this.OnPayment_Mode_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Mode_Id = value;
					this.SendPropertyChanged("Payment_Mode_Id");
					this.OnPayment_Mode_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Mode_Name", DbType="VarChar(50)")]
		public string Payment_Mode_Name
		{
			get
			{
				return this._Payment_Mode_Name;
			}
			set
			{
				if ((this._Payment_Mode_Name != value))
				{
					this.OnPayment_Mode_NameChanging(value);
					this.SendPropertyChanging();
					this._Payment_Mode_Name = value;
					this.SendPropertyChanged("Payment_Mode_Name");
					this.OnPayment_Mode_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Mode_Payment", Storage="_Payments", ThisKey="Payment_Mode_Id", OtherKey="Payment_Mode_Id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Mode_User_Payment_Preference_Mapping", Storage="_User_Payment_Preference_Mappings", ThisKey="Payment_Mode_Id", OtherKey="Payment_Mode_Id")]
		public EntitySet<User_Payment_Preference_Mapping> User_Payment_Preference_Mappings
		{
			get
			{
				return this._User_Payment_Preference_Mappings;
			}
			set
			{
				this._User_Payment_Preference_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Mode = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Mode = null;
		}
		
		private void attach_User_Payment_Preference_Mappings(User_Payment_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Mode = this;
		}
		
		private void detach_User_Payment_Preference_Mappings(User_Payment_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Mode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_To_File_Mapping")]
	public partial class Payment_To_File_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_To_File_Mapping_Id;
		
		private System.Nullable<int> _Payment_Id;
		
		private System.Nullable<int> _File_Id;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_To_File_Mapping_IdChanging(int value);
    partial void OnPayment_To_File_Mapping_IdChanged();
    partial void OnPayment_IdChanging(System.Nullable<int> value);
    partial void OnPayment_IdChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    #endregion
		
		public Payment_To_File_Mapping()
		{
			this._File_Master = default(EntityRef<File_Master>);
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_To_File_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_To_File_Mapping_Id
		{
			get
			{
				return this._Payment_To_File_Mapping_Id;
			}
			set
			{
				if ((this._Payment_To_File_Mapping_Id != value))
				{
					this.OnPayment_To_File_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_To_File_Mapping_Id = value;
					this.SendPropertyChanged("Payment_To_File_Mapping_Id");
					this.OnPayment_To_File_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Id", DbType="Int")]
		public System.Nullable<int> Payment_Id
		{
			get
			{
				return this._Payment_Id;
			}
			set
			{
				if ((this._Payment_Id != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayment_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Id = value;
					this.SendPropertyChanged("Payment_Id");
					this.OnPayment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Payment_To_File_Mapping", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Payment_To_File_Mappings.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Payment_To_File_Mappings.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment_To_File_Mapping", Storage="_Payment", ThisKey="Payment_Id", OtherKey="Payment_Id", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.Payment_To_File_Mappings.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.Payment_To_File_Mappings.Add(this);
						this._Payment_Id = value.Payment_Id;
					}
					else
					{
						this._Payment_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_To_Invoice_Mapping")]
	public partial class Payment_To_Invoice_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_To_Invoice_Mapping_Id;
		
		private System.Nullable<int> _Payment_Id;
		
		private System.Nullable<int> _Invoice_Id;
		
		private System.Nullable<decimal> _Pending_Amount;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_To_Invoice_Mapping_IdChanging(int value);
    partial void OnPayment_To_Invoice_Mapping_IdChanged();
    partial void OnPayment_IdChanging(System.Nullable<int> value);
    partial void OnPayment_IdChanged();
    partial void OnInvoice_IdChanging(System.Nullable<int> value);
    partial void OnInvoice_IdChanged();
    partial void OnPending_AmountChanging(System.Nullable<decimal> value);
    partial void OnPending_AmountChanged();
    #endregion
		
		public Payment_To_Invoice_Mapping()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_To_Invoice_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_To_Invoice_Mapping_Id
		{
			get
			{
				return this._Payment_To_Invoice_Mapping_Id;
			}
			set
			{
				if ((this._Payment_To_Invoice_Mapping_Id != value))
				{
					this.OnPayment_To_Invoice_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_To_Invoice_Mapping_Id = value;
					this.SendPropertyChanged("Payment_To_Invoice_Mapping_Id");
					this.OnPayment_To_Invoice_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Id", DbType="Int")]
		public System.Nullable<int> Payment_Id
		{
			get
			{
				return this._Payment_Id;
			}
			set
			{
				if ((this._Payment_Id != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayment_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Id = value;
					this.SendPropertyChanged("Payment_Id");
					this.OnPayment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", DbType="Int")]
		public System.Nullable<int> Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pending_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Pending_Amount
		{
			get
			{
				return this._Pending_Amount;
			}
			set
			{
				if ((this._Pending_Amount != value))
				{
					this.OnPending_AmountChanging(value);
					this.SendPropertyChanging();
					this._Pending_Amount = value;
					this.SendPropertyChanged("Pending_Amount");
					this.OnPending_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Payment_To_Invoice_Mapping", Storage="_Invoice", ThisKey="Invoice_Id", OtherKey="Invoice_Id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Payment_To_Invoice_Mappings.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Payment_To_Invoice_Mappings.Add(this);
						this._Invoice_Id = value.Invoice_Id;
					}
					else
					{
						this._Invoice_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment_To_Invoice_Mapping", Storage="_Payment", ThisKey="Payment_Id", OtherKey="Payment_Id", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.Payment_To_Invoice_Mappings.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.Payment_To_Invoice_Mappings.Add(this);
						this._Payment_Id = value.Payment_Id;
					}
					else
					{
						this._Payment_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_Type")]
	public partial class Payment_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_Type_Id;
		
		private string _Payment_Type_Value;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_Type_IdChanging(int value);
    partial void OnPayment_Type_IdChanged();
    partial void OnPayment_Type_ValueChanging(string value);
    partial void OnPayment_Type_ValueChanged();
    #endregion
		
		public Payment_Type()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_Type_Id
		{
			get
			{
				return this._Payment_Type_Id;
			}
			set
			{
				if ((this._Payment_Type_Id != value))
				{
					this.OnPayment_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Type_Id = value;
					this.SendPropertyChanged("Payment_Type_Id");
					this.OnPayment_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Type_Value", DbType="VarChar(50)")]
		public string Payment_Type_Value
		{
			get
			{
				return this._Payment_Type_Value;
			}
			set
			{
				if ((this._Payment_Type_Value != value))
				{
					this.OnPayment_Type_ValueChanging(value);
					this.SendPropertyChanging();
					this._Payment_Type_Value = value;
					this.SendPropertyChanged("Payment_Type_Value");
					this.OnPayment_Type_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Type_Payment", Storage="_Payments", ThisKey="Payment_Type_Id", OtherKey="Payment_Type_Id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Type = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phone_Number_Master")]
	public partial class Phone_Number_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Phone_Id;
		
		private string _Phone_Number;
		
		private string _Country_Code;
		
		private string _Phone_Ext;
		
		private string _Phone_Type;
		
		private EntitySet<User_To_Phone_Mapping> _User_To_Phone_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhone_IdChanging(int value);
    partial void OnPhone_IdChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnCountry_CodeChanging(string value);
    partial void OnCountry_CodeChanged();
    partial void OnPhone_ExtChanging(string value);
    partial void OnPhone_ExtChanged();
    partial void OnPhone_TypeChanging(string value);
    partial void OnPhone_TypeChanged();
    #endregion
		
		public Phone_Number_Master()
		{
			this._User_To_Phone_Mappings = new EntitySet<User_To_Phone_Mapping>(new Action<User_To_Phone_Mapping>(this.attach_User_To_Phone_Mappings), new Action<User_To_Phone_Mapping>(this.detach_User_To_Phone_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Phone_Id
		{
			get
			{
				return this._Phone_Id;
			}
			set
			{
				if ((this._Phone_Id != value))
				{
					this.OnPhone_IdChanging(value);
					this.SendPropertyChanging();
					this._Phone_Id = value;
					this.SendPropertyChanged("Phone_Id");
					this.OnPhone_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="VarChar(50)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Code", DbType="VarChar(50)")]
		public string Country_Code
		{
			get
			{
				return this._Country_Code;
			}
			set
			{
				if ((this._Country_Code != value))
				{
					this.OnCountry_CodeChanging(value);
					this.SendPropertyChanging();
					this._Country_Code = value;
					this.SendPropertyChanged("Country_Code");
					this.OnCountry_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Ext", DbType="VarChar(50)")]
		public string Phone_Ext
		{
			get
			{
				return this._Phone_Ext;
			}
			set
			{
				if ((this._Phone_Ext != value))
				{
					this.OnPhone_ExtChanging(value);
					this.SendPropertyChanging();
					this._Phone_Ext = value;
					this.SendPropertyChanged("Phone_Ext");
					this.OnPhone_ExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Type", DbType="VarChar(50)")]
		public string Phone_Type
		{
			get
			{
				return this._Phone_Type;
			}
			set
			{
				if ((this._Phone_Type != value))
				{
					this.OnPhone_TypeChanging(value);
					this.SendPropertyChanging();
					this._Phone_Type = value;
					this.SendPropertyChanged("Phone_Type");
					this.OnPhone_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_Number_Master_User_To_Phone_Mapping", Storage="_User_To_Phone_Mappings", ThisKey="Phone_Id", OtherKey="Phone_Id")]
		public EntitySet<User_To_Phone_Mapping> User_To_Phone_Mappings
		{
			get
			{
				return this._User_To_Phone_Mappings;
			}
			set
			{
				this._User_To_Phone_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_To_Phone_Mappings(User_To_Phone_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Phone_Number_Master = this;
		}
		
		private void detach_User_To_Phone_Mappings(User_To_Phone_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Phone_Number_Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PO_To_Order_Mapping")]
	public partial class PO_To_Order_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PO_to_order_mapping_id;
		
		private System.Nullable<int> _order_detail_id;
		
		private string _po_number;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPO_to_order_mapping_idChanging(int value);
    partial void OnPO_to_order_mapping_idChanged();
    partial void Onorder_detail_idChanging(System.Nullable<int> value);
    partial void Onorder_detail_idChanged();
    partial void Onpo_numberChanging(string value);
    partial void Onpo_numberChanged();
    #endregion
		
		public PO_To_Order_Mapping()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PO_to_order_mapping_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PO_to_order_mapping_id
		{
			get
			{
				return this._PO_to_order_mapping_id;
			}
			set
			{
				if ((this._PO_to_order_mapping_id != value))
				{
					this.OnPO_to_order_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._PO_to_order_mapping_id = value;
					this.SendPropertyChanged("PO_to_order_mapping_id");
					this.OnPO_to_order_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_detail_id", DbType="Int")]
		public System.Nullable<int> order_detail_id
		{
			get
			{
				return this._order_detail_id;
			}
			set
			{
				if ((this._order_detail_id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_detail_idChanging(value);
					this.SendPropertyChanging();
					this._order_detail_id = value;
					this.SendPropertyChanged("order_detail_id");
					this.Onorder_detail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_po_number", DbType="VarChar(50)")]
		public string po_number
		{
			get
			{
				return this._po_number;
			}
			set
			{
				if ((this._po_number != value))
				{
					this.Onpo_numberChanging(value);
					this.SendPropertyChanging();
					this._po_number = value;
					this.SendPropertyChanged("po_number");
					this.Onpo_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_PO_To_Order_Mapping", Storage="_Order_Detail", ThisKey="order_detail_id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.PO_To_Order_Mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.PO_To_Order_Mappings.Add(this);
						this._order_detail_id = value.Order_Detail_Id;
					}
					else
					{
						this._order_detail_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preference")]
	public partial class Preference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Preference_Id;
		
		private string _Preference_Name;
		
		private EntitySet<User_To_Preference> _User_To_Preferences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreference_IdChanging(int value);
    partial void OnPreference_IdChanged();
    partial void OnPreference_NameChanging(string value);
    partial void OnPreference_NameChanged();
    #endregion
		
		public Preference()
		{
			this._User_To_Preferences = new EntitySet<User_To_Preference>(new Action<User_To_Preference>(this.attach_User_To_Preferences), new Action<User_To_Preference>(this.detach_User_To_Preferences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preference_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Preference_Id
		{
			get
			{
				return this._Preference_Id;
			}
			set
			{
				if ((this._Preference_Id != value))
				{
					this.OnPreference_IdChanging(value);
					this.SendPropertyChanging();
					this._Preference_Id = value;
					this.SendPropertyChanged("Preference_Id");
					this.OnPreference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preference_Name", DbType="VarChar(50)")]
		public string Preference_Name
		{
			get
			{
				return this._Preference_Name;
			}
			set
			{
				if ((this._Preference_Name != value))
				{
					this.OnPreference_NameChanging(value);
					this.SendPropertyChanging();
					this._Preference_Name = value;
					this.SendPropertyChanged("Preference_Name");
					this.OnPreference_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preference_User_To_Preference", Storage="_User_To_Preferences", ThisKey="Preference_Id", OtherKey="Preference_Id")]
		public EntitySet<User_To_Preference> User_To_Preferences
		{
			get
			{
				return this._User_To_Preferences;
			}
			set
			{
				this._User_To_Preferences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_To_Preferences(User_To_Preference entity)
		{
			this.SendPropertyChanging();
			entity.Preference = this;
		}
		
		private void detach_User_To_Preferences(User_To_Preference entity)
		{
			this.SendPropertyChanging();
			entity.Preference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questionnaire_Master")]
	public partial class Questionnaire_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Questionnaire_Id;
		
		private string _Questionnaire_Value;
		
		private EntitySet<Options_Master> _Options_Masters;
		
		private EntitySet<Order_Status_Questionnaire_Mapping> _Order_Status_Questionnaire_Mappings;
		
		private EntitySet<User_Status_To_Questionnaire_Mapping> _User_Status_To_Questionnaire_Mappings;
		
		private EntitySet<User_To_Input_mapping> _User_To_Input_mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionnaire_IdChanging(int value);
    partial void OnQuestionnaire_IdChanged();
    partial void OnQuestionnaire_ValueChanging(string value);
    partial void OnQuestionnaire_ValueChanged();
    #endregion
		
		public Questionnaire_Master()
		{
			this._Options_Masters = new EntitySet<Options_Master>(new Action<Options_Master>(this.attach_Options_Masters), new Action<Options_Master>(this.detach_Options_Masters));
			this._Order_Status_Questionnaire_Mappings = new EntitySet<Order_Status_Questionnaire_Mapping>(new Action<Order_Status_Questionnaire_Mapping>(this.attach_Order_Status_Questionnaire_Mappings), new Action<Order_Status_Questionnaire_Mapping>(this.detach_Order_Status_Questionnaire_Mappings));
			this._User_Status_To_Questionnaire_Mappings = new EntitySet<User_Status_To_Questionnaire_Mapping>(new Action<User_Status_To_Questionnaire_Mapping>(this.attach_User_Status_To_Questionnaire_Mappings), new Action<User_Status_To_Questionnaire_Mapping>(this.detach_User_Status_To_Questionnaire_Mappings));
			this._User_To_Input_mappings = new EntitySet<User_To_Input_mapping>(new Action<User_To_Input_mapping>(this.attach_User_To_Input_mappings), new Action<User_To_Input_mapping>(this.detach_User_To_Input_mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Questionnaire_Id
		{
			get
			{
				return this._Questionnaire_Id;
			}
			set
			{
				if ((this._Questionnaire_Id != value))
				{
					this.OnQuestionnaire_IdChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_Id = value;
					this.SendPropertyChanged("Questionnaire_Id");
					this.OnQuestionnaire_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_Value", DbType="VarChar(50)")]
		public string Questionnaire_Value
		{
			get
			{
				return this._Questionnaire_Value;
			}
			set
			{
				if ((this._Questionnaire_Value != value))
				{
					this.OnQuestionnaire_ValueChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_Value = value;
					this.SendPropertyChanged("Questionnaire_Value");
					this.OnQuestionnaire_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_Options_Master", Storage="_Options_Masters", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id")]
		public EntitySet<Options_Master> Options_Masters
		{
			get
			{
				return this._Options_Masters;
			}
			set
			{
				this._Options_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_Order_Status_Questionnaire_Mapping", Storage="_Order_Status_Questionnaire_Mappings", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id")]
		public EntitySet<Order_Status_Questionnaire_Mapping> Order_Status_Questionnaire_Mappings
		{
			get
			{
				return this._Order_Status_Questionnaire_Mappings;
			}
			set
			{
				this._Order_Status_Questionnaire_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_User_Status_To_Questionnaire_Mapping", Storage="_User_Status_To_Questionnaire_Mappings", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id")]
		public EntitySet<User_Status_To_Questionnaire_Mapping> User_Status_To_Questionnaire_Mappings
		{
			get
			{
				return this._User_Status_To_Questionnaire_Mappings;
			}
			set
			{
				this._User_Status_To_Questionnaire_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_User_To_Input_mapping", Storage="_User_To_Input_mappings", ThisKey="Questionnaire_Id", OtherKey="questionnaire_id")]
		public EntitySet<User_To_Input_mapping> User_To_Input_mappings
		{
			get
			{
				return this._User_To_Input_mappings;
			}
			set
			{
				this._User_To_Input_mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Options_Masters(Options_Master entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = this;
		}
		
		private void detach_Options_Masters(Options_Master entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = null;
		}
		
		private void attach_Order_Status_Questionnaire_Mappings(Order_Status_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = this;
		}
		
		private void detach_Order_Status_Questionnaire_Mappings(Order_Status_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = null;
		}
		
		private void attach_User_Status_To_Questionnaire_Mappings(User_Status_To_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = this;
		}
		
		private void detach_User_Status_To_Questionnaire_Mappings(User_Status_To_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = null;
		}
		
		private void attach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = this;
		}
		
		private void detach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire_Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reminder")]
	public partial class Reminder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Reminder_Id;
		
		private System.Nullable<int> _Time_Stamp_Id;
		
		private System.Nullable<int> _Reminder_Type_Id;
		
		private EntitySet<Order_To_Reminder_Mapping> _Order_To_Reminder_Mappings;
		
		private EntitySet<User_To_Reminder> _User_To_Reminders;
		
		private EntityRef<Reminder_Type> _Reminder_Type;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReminder_IdChanging(int value);
    partial void OnReminder_IdChanged();
    partial void OnTime_Stamp_IdChanging(System.Nullable<int> value);
    partial void OnTime_Stamp_IdChanged();
    partial void OnReminder_Type_IdChanging(System.Nullable<int> value);
    partial void OnReminder_Type_IdChanged();
    #endregion
		
		public Reminder()
		{
			this._Order_To_Reminder_Mappings = new EntitySet<Order_To_Reminder_Mapping>(new Action<Order_To_Reminder_Mapping>(this.attach_Order_To_Reminder_Mappings), new Action<Order_To_Reminder_Mapping>(this.detach_Order_To_Reminder_Mappings));
			this._User_To_Reminders = new EntitySet<User_To_Reminder>(new Action<User_To_Reminder>(this.attach_User_To_Reminders), new Action<User_To_Reminder>(this.detach_User_To_Reminders));
			this._Reminder_Type = default(EntityRef<Reminder_Type>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Reminder_Id
		{
			get
			{
				return this._Reminder_Id;
			}
			set
			{
				if ((this._Reminder_Id != value))
				{
					this.OnReminder_IdChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Id = value;
					this.SendPropertyChanged("Reminder_Id");
					this.OnReminder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", DbType="Int")]
		public System.Nullable<int> Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Type_Id", DbType="Int")]
		public System.Nullable<int> Reminder_Type_Id
		{
			get
			{
				return this._Reminder_Type_Id;
			}
			set
			{
				if ((this._Reminder_Type_Id != value))
				{
					if (this._Reminder_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReminder_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Type_Id = value;
					this.SendPropertyChanged("Reminder_Type_Id");
					this.OnReminder_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_Order_To_Reminder_Mapping", Storage="_Order_To_Reminder_Mappings", ThisKey="Reminder_Id", OtherKey="Reminder_Id")]
		public EntitySet<Order_To_Reminder_Mapping> Order_To_Reminder_Mappings
		{
			get
			{
				return this._Order_To_Reminder_Mappings;
			}
			set
			{
				this._Order_To_Reminder_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_User_To_Reminder", Storage="_User_To_Reminders", ThisKey="Reminder_Id", OtherKey="Reminder_Id")]
		public EntitySet<User_To_Reminder> User_To_Reminders
		{
			get
			{
				return this._User_To_Reminders;
			}
			set
			{
				this._User_To_Reminders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_Type_Reminder", Storage="_Reminder_Type", ThisKey="Reminder_Type_Id", OtherKey="Reminder_Type_Id", IsForeignKey=true)]
		public Reminder_Type Reminder_Type
		{
			get
			{
				return this._Reminder_Type.Entity;
			}
			set
			{
				Reminder_Type previousValue = this._Reminder_Type.Entity;
				if (((previousValue != value) 
							|| (this._Reminder_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reminder_Type.Entity = null;
						previousValue.Reminders.Remove(this);
					}
					this._Reminder_Type.Entity = value;
					if ((value != null))
					{
						value.Reminders.Add(this);
						this._Reminder_Type_Id = value.Reminder_Type_Id;
					}
					else
					{
						this._Reminder_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reminder_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Reminder", Storage="_Time_Stamp", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.Reminders.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.Reminders.Add(this);
						this._Time_Stamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._Time_Stamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_To_Reminder_Mappings(Order_To_Reminder_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Reminder = this;
		}
		
		private void detach_Order_To_Reminder_Mappings(Order_To_Reminder_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Reminder = null;
		}
		
		private void attach_User_To_Reminders(User_To_Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Reminder = this;
		}
		
		private void detach_User_To_Reminders(User_To_Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Reminder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reminder_Type")]
	public partial class Reminder_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Reminder_Type_Id;
		
		private string _RType;
		
		private string _Reminder_Message;
		
		private EntitySet<Reminder> _Reminders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReminder_Type_IdChanging(int value);
    partial void OnReminder_Type_IdChanged();
    partial void OnRTypeChanging(string value);
    partial void OnRTypeChanged();
    partial void OnReminder_MessageChanging(string value);
    partial void OnReminder_MessageChanged();
    #endregion
		
		public Reminder_Type()
		{
			this._Reminders = new EntitySet<Reminder>(new Action<Reminder>(this.attach_Reminders), new Action<Reminder>(this.detach_Reminders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Reminder_Type_Id
		{
			get
			{
				return this._Reminder_Type_Id;
			}
			set
			{
				if ((this._Reminder_Type_Id != value))
				{
					this.OnReminder_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Type_Id = value;
					this.SendPropertyChanged("Reminder_Type_Id");
					this.OnReminder_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RType", DbType="VarChar(50)")]
		public string RType
		{
			get
			{
				return this._RType;
			}
			set
			{
				if ((this._RType != value))
				{
					this.OnRTypeChanging(value);
					this.SendPropertyChanging();
					this._RType = value;
					this.SendPropertyChanged("RType");
					this.OnRTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Message", DbType="VarChar(50)")]
		public string Reminder_Message
		{
			get
			{
				return this._Reminder_Message;
			}
			set
			{
				if ((this._Reminder_Message != value))
				{
					this.OnReminder_MessageChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Message = value;
					this.SendPropertyChanged("Reminder_Message");
					this.OnReminder_MessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_Type_Reminder", Storage="_Reminders", ThisKey="Reminder_Type_Id", OtherKey="Reminder_Type_Id")]
		public EntitySet<Reminder> Reminders
		{
			get
			{
				return this._Reminders;
			}
			set
			{
				this._Reminders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Reminder_Type = this;
		}
		
		private void detach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Reminder_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revision")]
	public partial class Revision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Revision_Id;
		
		private System.Nullable<int> _Order_To_User_Mapping_Id;
		
		private EntitySet<Revision_To_File_Mapping> _Revision_To_File_Mappings;
		
		private EntitySet<Revision_To_Instruction_Mapping> _Revision_To_Instruction_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevision_IdChanging(int value);
    partial void OnRevision_IdChanged();
    partial void OnOrder_To_User_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnOrder_To_User_Mapping_IdChanged();
    #endregion
		
		public Revision()
		{
			this._Revision_To_File_Mappings = new EntitySet<Revision_To_File_Mapping>(new Action<Revision_To_File_Mapping>(this.attach_Revision_To_File_Mappings), new Action<Revision_To_File_Mapping>(this.detach_Revision_To_File_Mappings));
			this._Revision_To_Instruction_Mappings = new EntitySet<Revision_To_Instruction_Mapping>(new Action<Revision_To_Instruction_Mapping>(this.attach_Revision_To_Instruction_Mappings), new Action<Revision_To_Instruction_Mapping>(this.detach_Revision_To_Instruction_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Revision_Id
		{
			get
			{
				return this._Revision_Id;
			}
			set
			{
				if ((this._Revision_Id != value))
				{
					this.OnRevision_IdChanging(value);
					this.SendPropertyChanging();
					this._Revision_Id = value;
					this.SendPropertyChanged("Revision_Id");
					this.OnRevision_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_To_User_Mapping_Id", DbType="Int")]
		public System.Nullable<int> Order_To_User_Mapping_Id
		{
			get
			{
				return this._Order_To_User_Mapping_Id;
			}
			set
			{
				if ((this._Order_To_User_Mapping_Id != value))
				{
					this.OnOrder_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_To_User_Mapping_Id = value;
					this.SendPropertyChanged("Order_To_User_Mapping_Id");
					this.OnOrder_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revision_Revision_To_File_Mapping", Storage="_Revision_To_File_Mappings", ThisKey="Revision_Id", OtherKey="Revision_Id")]
		public EntitySet<Revision_To_File_Mapping> Revision_To_File_Mappings
		{
			get
			{
				return this._Revision_To_File_Mappings;
			}
			set
			{
				this._Revision_To_File_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revision_Revision_To_Instruction_Mapping", Storage="_Revision_To_Instruction_Mappings", ThisKey="Revision_Id", OtherKey="Revision_Id")]
		public EntitySet<Revision_To_Instruction_Mapping> Revision_To_Instruction_Mappings
		{
			get
			{
				return this._Revision_To_Instruction_Mappings;
			}
			set
			{
				this._Revision_To_Instruction_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Revision_To_File_Mappings(Revision_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Revision = this;
		}
		
		private void detach_Revision_To_File_Mappings(Revision_To_File_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Revision = null;
		}
		
		private void attach_Revision_To_Instruction_Mappings(Revision_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Revision = this;
		}
		
		private void detach_Revision_To_Instruction_Mappings(Revision_To_Instruction_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Revision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revision_To_File_Mapping")]
	public partial class Revision_To_File_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Revision_To_File_Mapping_Id;
		
		private System.Nullable<int> _Revision_Id;
		
		private System.Nullable<int> _File_Id;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Revision> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevision_To_File_Mapping_IdChanging(int value);
    partial void OnRevision_To_File_Mapping_IdChanged();
    partial void OnRevision_IdChanging(System.Nullable<int> value);
    partial void OnRevision_IdChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    #endregion
		
		public Revision_To_File_Mapping()
		{
			this._File_Master = default(EntityRef<File_Master>);
			this._Revision = default(EntityRef<Revision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision_To_File_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Revision_To_File_Mapping_Id
		{
			get
			{
				return this._Revision_To_File_Mapping_Id;
			}
			set
			{
				if ((this._Revision_To_File_Mapping_Id != value))
				{
					this.OnRevision_To_File_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Revision_To_File_Mapping_Id = value;
					this.SendPropertyChanged("Revision_To_File_Mapping_Id");
					this.OnRevision_To_File_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision_Id", DbType="Int")]
		public System.Nullable<int> Revision_Id
		{
			get
			{
				return this._Revision_Id;
			}
			set
			{
				if ((this._Revision_Id != value))
				{
					if (this._Revision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevision_IdChanging(value);
					this.SendPropertyChanging();
					this._Revision_Id = value;
					this.SendPropertyChanged("Revision_Id");
					this.OnRevision_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Revision_To_File_Mapping", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Revision_To_File_Mappings.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Revision_To_File_Mappings.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revision_Revision_To_File_Mapping", Storage="_Revision", ThisKey="Revision_Id", OtherKey="Revision_Id", IsForeignKey=true)]
		public Revision Revision
		{
			get
			{
				return this._Revision.Entity;
			}
			set
			{
				Revision previousValue = this._Revision.Entity;
				if (((previousValue != value) 
							|| (this._Revision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Revision.Entity = null;
						previousValue.Revision_To_File_Mappings.Remove(this);
					}
					this._Revision.Entity = value;
					if ((value != null))
					{
						value.Revision_To_File_Mappings.Add(this);
						this._Revision_Id = value.Revision_Id;
					}
					else
					{
						this._Revision_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Revision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revision_To_Instruction_Mapping")]
	public partial class Revision_To_Instruction_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Revision_To_Instruction_Mapping_Id;
		
		private System.Nullable<int> _Revision_Id;
		
		private System.Nullable<int> _Instruction_Id;
		
		private EntityRef<Instruction> _Instruction;
		
		private EntityRef<Revision> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevision_To_Instruction_Mapping_IdChanging(int value);
    partial void OnRevision_To_Instruction_Mapping_IdChanged();
    partial void OnRevision_IdChanging(System.Nullable<int> value);
    partial void OnRevision_IdChanged();
    partial void OnInstruction_IdChanging(System.Nullable<int> value);
    partial void OnInstruction_IdChanged();
    #endregion
		
		public Revision_To_Instruction_Mapping()
		{
			this._Instruction = default(EntityRef<Instruction>);
			this._Revision = default(EntityRef<Revision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision_To_Instruction_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Revision_To_Instruction_Mapping_Id
		{
			get
			{
				return this._Revision_To_Instruction_Mapping_Id;
			}
			set
			{
				if ((this._Revision_To_Instruction_Mapping_Id != value))
				{
					this.OnRevision_To_Instruction_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Revision_To_Instruction_Mapping_Id = value;
					this.SendPropertyChanged("Revision_To_Instruction_Mapping_Id");
					this.OnRevision_To_Instruction_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision_Id", DbType="Int")]
		public System.Nullable<int> Revision_Id
		{
			get
			{
				return this._Revision_Id;
			}
			set
			{
				if ((this._Revision_Id != value))
				{
					if (this._Revision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevision_IdChanging(value);
					this.SendPropertyChanging();
					this._Revision_Id = value;
					this.SendPropertyChanged("Revision_Id");
					this.OnRevision_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction_Id", DbType="Int")]
		public System.Nullable<int> Instruction_Id
		{
			get
			{
				return this._Instruction_Id;
			}
			set
			{
				if ((this._Instruction_Id != value))
				{
					if (this._Instruction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstruction_IdChanging(value);
					this.SendPropertyChanging();
					this._Instruction_Id = value;
					this.SendPropertyChanged("Instruction_Id");
					this.OnInstruction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instruction_Revision_To_Instruction_Mapping", Storage="_Instruction", ThisKey="Instruction_Id", OtherKey="Instruction_Id", IsForeignKey=true)]
		public Instruction Instruction
		{
			get
			{
				return this._Instruction.Entity;
			}
			set
			{
				Instruction previousValue = this._Instruction.Entity;
				if (((previousValue != value) 
							|| (this._Instruction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instruction.Entity = null;
						previousValue.Revision_To_Instruction_Mappings.Remove(this);
					}
					this._Instruction.Entity = value;
					if ((value != null))
					{
						value.Revision_To_Instruction_Mappings.Add(this);
						this._Instruction_Id = value.Instruction_Id;
					}
					else
					{
						this._Instruction_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Instruction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revision_Revision_To_Instruction_Mapping", Storage="_Revision", ThisKey="Revision_Id", OtherKey="Revision_Id", IsForeignKey=true)]
		public Revision Revision
		{
			get
			{
				return this._Revision.Entity;
			}
			set
			{
				Revision previousValue = this._Revision.Entity;
				if (((previousValue != value) 
							|| (this._Revision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Revision.Entity = null;
						previousValue.Revision_To_Instruction_Mappings.Remove(this);
					}
					this._Revision.Entity = value;
					if ((value != null))
					{
						value.Revision_To_Instruction_Mappings.Add(this);
						this._Revision_Id = value.Revision_Id;
					}
					else
					{
						this._Revision_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Revision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_Id;
		
		private string _Role_Name;
		
		private EntitySet<Role_To_Functionality_Mapping> _Role_To_Functionality_Mappings;
		
		private EntitySet<User_To_Role_Mapping> _User_To_Role_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IdChanging(int value);
    partial void OnRole_IdChanged();
    partial void OnRole_NameChanging(string value);
    partial void OnRole_NameChanged();
    #endregion
		
		public Role()
		{
			this._Role_To_Functionality_Mappings = new EntitySet<Role_To_Functionality_Mapping>(new Action<Role_To_Functionality_Mapping>(this.attach_Role_To_Functionality_Mappings), new Action<Role_To_Functionality_Mapping>(this.detach_Role_To_Functionality_Mappings));
			this._User_To_Role_Mappings = new EntitySet<User_To_Role_Mapping>(new Action<User_To_Role_Mapping>(this.attach_User_To_Role_Mappings), new Action<User_To_Role_Mapping>(this.detach_User_To_Role_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					this.OnRole_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Id = value;
					this.SendPropertyChanged("Role_Id");
					this.OnRole_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Name", DbType="VarChar(50)")]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this.OnRole_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Name = value;
					this.SendPropertyChanged("Role_Name");
					this.OnRole_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_To_Functionality_Mapping", Storage="_Role_To_Functionality_Mappings", ThisKey="Role_Id", OtherKey="Role_Id")]
		public EntitySet<Role_To_Functionality_Mapping> Role_To_Functionality_Mappings
		{
			get
			{
				return this._Role_To_Functionality_Mappings;
			}
			set
			{
				this._Role_To_Functionality_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_To_Role_Mapping", Storage="_User_To_Role_Mappings", ThisKey="Role_Id", OtherKey="Role_Id")]
		public EntitySet<User_To_Role_Mapping> User_To_Role_Mappings
		{
			get
			{
				return this._User_To_Role_Mappings;
			}
			set
			{
				this._User_To_Role_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Role_To_Functionality_Mappings(Role_To_Functionality_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Role_To_Functionality_Mappings(Role_To_Functionality_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_User_To_Role_Mappings(User_To_Role_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_User_To_Role_Mappings(User_To_Role_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_To_Functionality_Mapping")]
	public partial class Role_To_Functionality_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_To_Functionality_Mapping_Id;
		
		private System.Nullable<int> _Role_Id;
		
		private System.Nullable<int> _Functionality_Id;
		
		private EntityRef<Functionality> _Functionality;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_To_Functionality_Mapping_IdChanging(int value);
    partial void OnRole_To_Functionality_Mapping_IdChanged();
    partial void OnRole_IdChanging(System.Nullable<int> value);
    partial void OnRole_IdChanged();
    partial void OnFunctionality_IdChanging(System.Nullable<int> value);
    partial void OnFunctionality_IdChanged();
    #endregion
		
		public Role_To_Functionality_Mapping()
		{
			this._Functionality = default(EntityRef<Functionality>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_To_Functionality_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Role_To_Functionality_Mapping_Id
		{
			get
			{
				return this._Role_To_Functionality_Mapping_Id;
			}
			set
			{
				if ((this._Role_To_Functionality_Mapping_Id != value))
				{
					this.OnRole_To_Functionality_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_To_Functionality_Mapping_Id = value;
					this.SendPropertyChanged("Role_To_Functionality_Mapping_Id");
					this.OnRole_To_Functionality_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", DbType="Int")]
		public System.Nullable<int> Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Id = value;
					this.SendPropertyChanged("Role_Id");
					this.OnRole_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Functionality_Id", DbType="Int")]
		public System.Nullable<int> Functionality_Id
		{
			get
			{
				return this._Functionality_Id;
			}
			set
			{
				if ((this._Functionality_Id != value))
				{
					if (this._Functionality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionality_IdChanging(value);
					this.SendPropertyChanging();
					this._Functionality_Id = value;
					this.SendPropertyChanged("Functionality_Id");
					this.OnFunctionality_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functionality_Role_To_Functionality_Mapping", Storage="_Functionality", ThisKey="Functionality_Id", OtherKey="Functionality_Id", IsForeignKey=true)]
		public Functionality Functionality
		{
			get
			{
				return this._Functionality.Entity;
			}
			set
			{
				Functionality previousValue = this._Functionality.Entity;
				if (((previousValue != value) 
							|| (this._Functionality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Functionality.Entity = null;
						previousValue.Role_To_Functionality_Mappings.Remove(this);
					}
					this._Functionality.Entity = value;
					if ((value != null))
					{
						value.Role_To_Functionality_Mappings.Add(this);
						this._Functionality_Id = value.Functionality_Id;
					}
					else
					{
						this._Functionality_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Functionality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_To_Functionality_Mapping", Storage="_Role", ThisKey="Role_Id", OtherKey="Role_Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Role_To_Functionality_Mappings.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Role_To_Functionality_Mappings.Add(this);
						this._Role_Id = value.Role_Id;
					}
					else
					{
						this._Role_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Shift_Id;
		
		private System.Nullable<int> _Shift_Time_Hr;
		
		private System.Nullable<int> _Shift_Time_Min;
		
		private EntitySet<User_To_Shift_Mapping> _User_To_Shift_Mappings;
		
		private EntitySet<User_To_Shift_Mapping> _User_To_Shift_Mappings1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShift_IdChanging(int value);
    partial void OnShift_IdChanged();
    partial void OnShift_Time_HrChanging(System.Nullable<int> value);
    partial void OnShift_Time_HrChanged();
    partial void OnShift_Time_MinChanging(System.Nullable<int> value);
    partial void OnShift_Time_MinChanged();
    #endregion
		
		public Shift()
		{
			this._User_To_Shift_Mappings = new EntitySet<User_To_Shift_Mapping>(new Action<User_To_Shift_Mapping>(this.attach_User_To_Shift_Mappings), new Action<User_To_Shift_Mapping>(this.detach_User_To_Shift_Mappings));
			this._User_To_Shift_Mappings1 = new EntitySet<User_To_Shift_Mapping>(new Action<User_To_Shift_Mapping>(this.attach_User_To_Shift_Mappings1), new Action<User_To_Shift_Mapping>(this.detach_User_To_Shift_Mappings1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Shift_Id
		{
			get
			{
				return this._Shift_Id;
			}
			set
			{
				if ((this._Shift_Id != value))
				{
					this.OnShift_IdChanging(value);
					this.SendPropertyChanging();
					this._Shift_Id = value;
					this.SendPropertyChanged("Shift_Id");
					this.OnShift_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Time_Hr", DbType="Int")]
		public System.Nullable<int> Shift_Time_Hr
		{
			get
			{
				return this._Shift_Time_Hr;
			}
			set
			{
				if ((this._Shift_Time_Hr != value))
				{
					this.OnShift_Time_HrChanging(value);
					this.SendPropertyChanging();
					this._Shift_Time_Hr = value;
					this.SendPropertyChanged("Shift_Time_Hr");
					this.OnShift_Time_HrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Time_Min", DbType="Int")]
		public System.Nullable<int> Shift_Time_Min
		{
			get
			{
				return this._Shift_Time_Min;
			}
			set
			{
				if ((this._Shift_Time_Min != value))
				{
					this.OnShift_Time_MinChanging(value);
					this.SendPropertyChanging();
					this._Shift_Time_Min = value;
					this.SendPropertyChanged("Shift_Time_Min");
					this.OnShift_Time_MinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_User_To_Shift_Mapping", Storage="_User_To_Shift_Mappings", ThisKey="Shift_Id", OtherKey="Shift_Start_Time")]
		public EntitySet<User_To_Shift_Mapping> User_To_Shift_Mappings
		{
			get
			{
				return this._User_To_Shift_Mappings;
			}
			set
			{
				this._User_To_Shift_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_User_To_Shift_Mapping1", Storage="_User_To_Shift_Mappings1", ThisKey="Shift_Id", OtherKey="Shift_End_Time")]
		public EntitySet<User_To_Shift_Mapping> User_To_Shift_Mappings1
		{
			get
			{
				return this._User_To_Shift_Mappings1;
			}
			set
			{
				this._User_To_Shift_Mappings1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_To_Shift_Mappings(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Shift = this;
		}
		
		private void detach_User_To_Shift_Mappings(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Shift = null;
		}
		
		private void attach_User_To_Shift_Mappings1(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = this;
		}
		
		private void detach_User_To_Shift_Mappings1(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift_Log")]
	public partial class Shift_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Shift_Log_Id;
		
		private System.Nullable<int> _User_To_Shift_Mapping_Id;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private EntityRef<User_To_Shift_Mapping> _User_To_Shift_Mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShift_Log_IdChanging(int value);
    partial void OnShift_Log_IdChanged();
    partial void OnUser_To_Shift_Mapping_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Shift_Mapping_IdChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    #endregion
		
		public Shift_Log()
		{
			this._User_To_Shift_Mapping = default(EntityRef<User_To_Shift_Mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Log_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Shift_Log_Id
		{
			get
			{
				return this._Shift_Log_Id;
			}
			set
			{
				if ((this._Shift_Log_Id != value))
				{
					this.OnShift_Log_IdChanging(value);
					this.SendPropertyChanging();
					this._Shift_Log_Id = value;
					this.SendPropertyChanged("Shift_Log_Id");
					this.OnShift_Log_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Shift_Mapping_Id", DbType="Int")]
		public System.Nullable<int> User_To_Shift_Mapping_Id
		{
			get
			{
				return this._User_To_Shift_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Shift_Mapping_Id != value))
				{
					if (this._User_To_Shift_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Shift_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Shift_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Shift_Mapping_Id");
					this.OnUser_To_Shift_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Shift_Mapping_Shift_Log", Storage="_User_To_Shift_Mapping", ThisKey="User_To_Shift_Mapping_Id", OtherKey="User_To_Shift_Mapping_Id", IsForeignKey=true)]
		public User_To_Shift_Mapping User_To_Shift_Mapping
		{
			get
			{
				return this._User_To_Shift_Mapping.Entity;
			}
			set
			{
				User_To_Shift_Mapping previousValue = this._User_To_Shift_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Shift_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Shift_Mapping.Entity = null;
						previousValue.Shift_Logs.Remove(this);
					}
					this._User_To_Shift_Mapping.Entity = value;
					if ((value != null))
					{
						value.Shift_Logs.Add(this);
						this._User_To_Shift_Mapping_Id = value.User_To_Shift_Mapping_Id;
					}
					else
					{
						this._User_To_Shift_Mapping_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Shift_Mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skill")]
	public partial class Skill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Skill_Id;
		
		private string _Skill_Name;
		
		private EntitySet<Level_To_Skill_Mapping> _Level_To_Skill_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkill_IdChanging(int value);
    partial void OnSkill_IdChanged();
    partial void OnSkill_NameChanging(string value);
    partial void OnSkill_NameChanged();
    #endregion
		
		public Skill()
		{
			this._Level_To_Skill_Mappings = new EntitySet<Level_To_Skill_Mapping>(new Action<Level_To_Skill_Mapping>(this.attach_Level_To_Skill_Mappings), new Action<Level_To_Skill_Mapping>(this.detach_Level_To_Skill_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Skill_Id
		{
			get
			{
				return this._Skill_Id;
			}
			set
			{
				if ((this._Skill_Id != value))
				{
					this.OnSkill_IdChanging(value);
					this.SendPropertyChanging();
					this._Skill_Id = value;
					this.SendPropertyChanged("Skill_Id");
					this.OnSkill_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_Name", DbType="VarChar(50)")]
		public string Skill_Name
		{
			get
			{
				return this._Skill_Name;
			}
			set
			{
				if ((this._Skill_Name != value))
				{
					this.OnSkill_NameChanging(value);
					this.SendPropertyChanging();
					this._Skill_Name = value;
					this.SendPropertyChanged("Skill_Name");
					this.OnSkill_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skill_Level_To_Skill_Mapping", Storage="_Level_To_Skill_Mappings", ThisKey="Skill_Id", OtherKey="Skill_Id")]
		public EntitySet<Level_To_Skill_Mapping> Level_To_Skill_Mappings
		{
			get
			{
				return this._Level_To_Skill_Mappings;
			}
			set
			{
				this._Level_To_Skill_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Level_To_Skill_Mappings(Level_To_Skill_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Skill = this;
		}
		
		private void detach_Level_To_Skill_Mappings(Level_To_Skill_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Skill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Special_Offer")]
	public partial class Special_Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Special_Offer_Id;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<System.DateTime> _Start_Date;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private System.Nullable<int> _Discount_Id;
		
		private EntitySet<Template_To_Special_Offer_Mapping> _Template_To_Special_Offer_Mappings;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecial_Offer_IdChanging(int value);
    partial void OnSpecial_Offer_IdChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnStart_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnDiscount_IdChanging(System.Nullable<int> value);
    partial void OnDiscount_IdChanged();
    #endregion
		
		public Special_Offer()
		{
			this._Template_To_Special_Offer_Mappings = new EntitySet<Template_To_Special_Offer_Mapping>(new Action<Template_To_Special_Offer_Mapping>(this.attach_Template_To_Special_Offer_Mappings), new Action<Template_To_Special_Offer_Mapping>(this.detach_Template_To_Special_Offer_Mappings));
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Offer_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Special_Offer_Id
		{
			get
			{
				return this._Special_Offer_Id;
			}
			set
			{
				if ((this._Special_Offer_Id != value))
				{
					this.OnSpecial_Offer_IdChanging(value);
					this.SendPropertyChanging();
					this._Special_Offer_Id = value;
					this.SendPropertyChanged("Special_Offer_Id");
					this.OnSpecial_Offer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Id", DbType="Int")]
		public System.Nullable<int> Discount_Id
		{
			get
			{
				return this._Discount_Id;
			}
			set
			{
				if ((this._Discount_Id != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IdChanging(value);
					this.SendPropertyChanging();
					this._Discount_Id = value;
					this.SendPropertyChanged("Discount_Id");
					this.OnDiscount_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Special_Offer_Template_To_Special_Offer_Mapping", Storage="_Template_To_Special_Offer_Mappings", ThisKey="Special_Offer_Id", OtherKey="Special_Offer_Id")]
		public EntitySet<Template_To_Special_Offer_Mapping> Template_To_Special_Offer_Mappings
		{
			get
			{
				return this._Template_To_Special_Offer_Mappings;
			}
			set
			{
				this._Template_To_Special_Offer_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Special_Offer", Storage="_Discount", ThisKey="Discount_Id", OtherKey="Discount_Id", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.Special_Offers.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.Special_Offers.Add(this);
						this._Discount_Id = value.Discount_Id;
					}
					else
					{
						this._Discount_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Template_To_Special_Offer_Mappings(Template_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Special_Offer = this;
		}
		
		private void detach_Template_To_Special_Offer_Mappings(Template_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Special_Offer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _State_Id;
		
		private string _State_Name;
		
		private EntitySet<Address_Master> _Address_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnState_IdChanging(int value);
    partial void OnState_IdChanged();
    partial void OnState_NameChanging(string value);
    partial void OnState_NameChanged();
    #endregion
		
		public State()
		{
			this._Address_Masters = new EntitySet<Address_Master>(new Action<Address_Master>(this.attach_Address_Masters), new Action<Address_Master>(this.detach_Address_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Name", DbType="VarChar(50)")]
		public string State_Name
		{
			get
			{
				return this._State_Name;
			}
			set
			{
				if ((this._State_Name != value))
				{
					this.OnState_NameChanging(value);
					this.SendPropertyChanging();
					this._State_Name = value;
					this.SendPropertyChanged("State_Name");
					this.OnState_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address_Master", Storage="_Address_Masters", ThisKey="State_Id", OtherKey="State_Id")]
		public EntitySet<Address_Master> Address_Masters
		{
			get
			{
				return this._Address_Masters;
			}
			set
			{
				this._Address_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tags_Id;
		
		private string _Tag_Name;
		
		private System.Nullable<int> _File_Id;
		
		private System.Nullable<bool> _IsOrderConnected;
		
		private System.Nullable<int> _Time_Stamp_Id;
		
		private EntitySet<Tag_To_Order_Mapping> _Tag_To_Order_Mappings;
		
		private EntityRef<File_Master> _File_Master;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTags_IdChanging(int value);
    partial void OnTags_IdChanged();
    partial void OnTag_NameChanging(string value);
    partial void OnTag_NameChanged();
    partial void OnFile_IdChanging(System.Nullable<int> value);
    partial void OnFile_IdChanged();
    partial void OnIsOrderConnectedChanging(System.Nullable<bool> value);
    partial void OnIsOrderConnectedChanged();
    partial void OnTime_Stamp_IdChanging(System.Nullable<int> value);
    partial void OnTime_Stamp_IdChanged();
    #endregion
		
		public Tag()
		{
			this._Tag_To_Order_Mappings = new EntitySet<Tag_To_Order_Mapping>(new Action<Tag_To_Order_Mapping>(this.attach_Tag_To_Order_Mappings), new Action<Tag_To_Order_Mapping>(this.detach_Tag_To_Order_Mappings));
			this._File_Master = default(EntityRef<File_Master>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tags_Id
		{
			get
			{
				return this._Tags_Id;
			}
			set
			{
				if ((this._Tags_Id != value))
				{
					this.OnTags_IdChanging(value);
					this.SendPropertyChanging();
					this._Tags_Id = value;
					this.SendPropertyChanged("Tags_Id");
					this.OnTags_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_Name", DbType="VarChar(50)")]
		public string Tag_Name
		{
			get
			{
				return this._Tag_Name;
			}
			set
			{
				if ((this._Tag_Name != value))
				{
					this.OnTag_NameChanging(value);
					this.SendPropertyChanging();
					this._Tag_Name = value;
					this.SendPropertyChanged("Tag_Name");
					this.OnTag_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Id", DbType="Int")]
		public System.Nullable<int> File_Id
		{
			get
			{
				return this._File_Id;
			}
			set
			{
				if ((this._File_Id != value))
				{
					if (this._File_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Id = value;
					this.SendPropertyChanged("File_Id");
					this.OnFile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrderConnected", DbType="Bit")]
		public System.Nullable<bool> IsOrderConnected
		{
			get
			{
				return this._IsOrderConnected;
			}
			set
			{
				if ((this._IsOrderConnected != value))
				{
					this.OnIsOrderConnectedChanging(value);
					this.SendPropertyChanging();
					this._IsOrderConnected = value;
					this.SendPropertyChanged("IsOrderConnected");
					this.OnIsOrderConnectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", DbType="Int")]
		public System.Nullable<int> Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Tag_To_Order_Mapping", Storage="_Tag_To_Order_Mappings", ThisKey="Tags_Id", OtherKey="Tags_Id")]
		public EntitySet<Tag_To_Order_Mapping> Tag_To_Order_Mappings
		{
			get
			{
				return this._Tag_To_Order_Mappings;
			}
			set
			{
				this._Tag_To_Order_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Master_Tag", Storage="_File_Master", ThisKey="File_Id", OtherKey="File_Id", IsForeignKey=true)]
		public File_Master File_Master
		{
			get
			{
				return this._File_Master.Entity;
			}
			set
			{
				File_Master previousValue = this._File_Master.Entity;
				if (((previousValue != value) 
							|| (this._File_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Master.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._File_Master.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._File_Id = value.File_Id;
					}
					else
					{
						this._File_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Tag", Storage="_Time_Stamp", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._Time_Stamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._Time_Stamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tag_To_Order_Mappings(Tag_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Tag_To_Order_Mappings(Tag_To_Order_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag_To_Order_Mapping")]
	public partial class Tag_To_Order_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tag_To_Order_Mapping_Id;
		
		private System.Nullable<int> _Tags_Id;
		
		private System.Nullable<int> _Order_Detail_Id;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTag_To_Order_Mapping_IdChanging(int value);
    partial void OnTag_To_Order_Mapping_IdChanged();
    partial void OnTags_IdChanging(System.Nullable<int> value);
    partial void OnTags_IdChanged();
    partial void OnOrder_Detail_IdChanging(System.Nullable<int> value);
    partial void OnOrder_Detail_IdChanged();
    #endregion
		
		public Tag_To_Order_Mapping()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_To_Order_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tag_To_Order_Mapping_Id
		{
			get
			{
				return this._Tag_To_Order_Mapping_Id;
			}
			set
			{
				if ((this._Tag_To_Order_Mapping_Id != value))
				{
					this.OnTag_To_Order_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Tag_To_Order_Mapping_Id = value;
					this.SendPropertyChanged("Tag_To_Order_Mapping_Id");
					this.OnTag_To_Order_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags_Id", DbType="Int")]
		public System.Nullable<int> Tags_Id
		{
			get
			{
				return this._Tags_Id;
			}
			set
			{
				if ((this._Tags_Id != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTags_IdChanging(value);
					this.SendPropertyChanging();
					this._Tags_Id = value;
					this.SendPropertyChanged("Tags_Id");
					this.OnTags_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Detail_Id", DbType="Int")]
		public System.Nullable<int> Order_Detail_Id
		{
			get
			{
				return this._Order_Detail_Id;
			}
			set
			{
				if ((this._Order_Detail_Id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Detail_Id = value;
					this.SendPropertyChanged("Order_Detail_Id");
					this.OnOrder_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Tag_To_Order_Mapping", Storage="_Order_Detail", ThisKey="Order_Detail_Id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.Tag_To_Order_Mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.Tag_To_Order_Mappings.Add(this);
						this._Order_Detail_Id = value.Order_Detail_Id;
					}
					else
					{
						this._Order_Detail_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Tag_To_Order_Mapping", Storage="_Tag", ThisKey="Tags_Id", OtherKey="Tags_Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Tag_To_Order_Mappings.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Tag_To_Order_Mappings.Add(this);
						this._Tags_Id = value.Tags_Id;
					}
					else
					{
						this._Tags_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_Id;
		
		private string _Template_Name;
		
		private EntitySet<Template_To_Special_Offer_Mapping> _Template_To_Special_Offer_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_IdChanging(int value);
    partial void OnTemplate_IdChanged();
    partial void OnTemplate_NameChanging(string value);
    partial void OnTemplate_NameChanged();
    #endregion
		
		public Template()
		{
			this._Template_To_Special_Offer_Mappings = new EntitySet<Template_To_Special_Offer_Mapping>(new Action<Template_To_Special_Offer_Mapping>(this.attach_Template_To_Special_Offer_Mappings), new Action<Template_To_Special_Offer_Mapping>(this.detach_Template_To_Special_Offer_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Template_Id
		{
			get
			{
				return this._Template_Id;
			}
			set
			{
				if ((this._Template_Id != value))
				{
					this.OnTemplate_IdChanging(value);
					this.SendPropertyChanging();
					this._Template_Id = value;
					this.SendPropertyChanged("Template_Id");
					this.OnTemplate_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Name", DbType="VarChar(50)")]
		public string Template_Name
		{
			get
			{
				return this._Template_Name;
			}
			set
			{
				if ((this._Template_Name != value))
				{
					this.OnTemplate_NameChanging(value);
					this.SendPropertyChanging();
					this._Template_Name = value;
					this.SendPropertyChanged("Template_Name");
					this.OnTemplate_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Template_To_Special_Offer_Mapping", Storage="_Template_To_Special_Offer_Mappings", ThisKey="Template_Id", OtherKey="Template_Id")]
		public EntitySet<Template_To_Special_Offer_Mapping> Template_To_Special_Offer_Mappings
		{
			get
			{
				return this._Template_To_Special_Offer_Mappings;
			}
			set
			{
				this._Template_To_Special_Offer_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Template_To_Special_Offer_Mappings(Template_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Template = this;
		}
		
		private void detach_Template_To_Special_Offer_Mappings(Template_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Template = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template_To_Special_Offer_Mapping")]
	public partial class Template_To_Special_Offer_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_To_Special_Offer_Mapping_Id;
		
		private System.Nullable<int> _Template_Id;
		
		private System.Nullable<int> _Special_Offer_Id;
		
		private EntityRef<Special_Offer> _Special_Offer;
		
		private EntityRef<Template> _Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_To_Special_Offer_Mapping_IdChanging(int value);
    partial void OnTemplate_To_Special_Offer_Mapping_IdChanged();
    partial void OnTemplate_IdChanging(System.Nullable<int> value);
    partial void OnTemplate_IdChanged();
    partial void OnSpecial_Offer_IdChanging(System.Nullable<int> value);
    partial void OnSpecial_Offer_IdChanged();
    #endregion
		
		public Template_To_Special_Offer_Mapping()
		{
			this._Special_Offer = default(EntityRef<Special_Offer>);
			this._Template = default(EntityRef<Template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_To_Special_Offer_Mapping_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Template_To_Special_Offer_Mapping_Id
		{
			get
			{
				return this._Template_To_Special_Offer_Mapping_Id;
			}
			set
			{
				if ((this._Template_To_Special_Offer_Mapping_Id != value))
				{
					this.OnTemplate_To_Special_Offer_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._Template_To_Special_Offer_Mapping_Id = value;
					this.SendPropertyChanged("Template_To_Special_Offer_Mapping_Id");
					this.OnTemplate_To_Special_Offer_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Id", DbType="Int")]
		public System.Nullable<int> Template_Id
		{
			get
			{
				return this._Template_Id;
			}
			set
			{
				if ((this._Template_Id != value))
				{
					if (this._Template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplate_IdChanging(value);
					this.SendPropertyChanging();
					this._Template_Id = value;
					this.SendPropertyChanged("Template_Id");
					this.OnTemplate_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Offer_Id", DbType="Int")]
		public System.Nullable<int> Special_Offer_Id
		{
			get
			{
				return this._Special_Offer_Id;
			}
			set
			{
				if ((this._Special_Offer_Id != value))
				{
					if (this._Special_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecial_Offer_IdChanging(value);
					this.SendPropertyChanging();
					this._Special_Offer_Id = value;
					this.SendPropertyChanged("Special_Offer_Id");
					this.OnSpecial_Offer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Special_Offer_Template_To_Special_Offer_Mapping", Storage="_Special_Offer", ThisKey="Special_Offer_Id", OtherKey="Special_Offer_Id", IsForeignKey=true)]
		public Special_Offer Special_Offer
		{
			get
			{
				return this._Special_Offer.Entity;
			}
			set
			{
				Special_Offer previousValue = this._Special_Offer.Entity;
				if (((previousValue != value) 
							|| (this._Special_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Special_Offer.Entity = null;
						previousValue.Template_To_Special_Offer_Mappings.Remove(this);
					}
					this._Special_Offer.Entity = value;
					if ((value != null))
					{
						value.Template_To_Special_Offer_Mappings.Add(this);
						this._Special_Offer_Id = value.Special_Offer_Id;
					}
					else
					{
						this._Special_Offer_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Special_Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Template_To_Special_Offer_Mapping", Storage="_Template", ThisKey="Template_Id", OtherKey="Template_Id", IsForeignKey=true)]
		public Template Template
		{
			get
			{
				return this._Template.Entity;
			}
			set
			{
				Template previousValue = this._Template.Entity;
				if (((previousValue != value) 
							|| (this._Template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Template.Entity = null;
						previousValue.Template_To_Special_Offer_Mappings.Remove(this);
					}
					this._Template.Entity = value;
					if ((value != null))
					{
						value.Template_To_Special_Offer_Mappings.Add(this);
						this._Template_Id = value.Template_Id;
					}
					else
					{
						this._Template_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Time_Stamp")]
	public partial class Time_Stamp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Time_Stamp_Id;
		
		private System.Nullable<System.DateTime> _Time_Stamp_Value;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Order_To_User_Mapping> _Order_To_User_Mappings;
		
		private EntitySet<Reminder> _Reminders;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<User_Daily_ToTimeStamp_Mapping> _User_Daily_ToTimeStamp_Mappings;
		
		private EntitySet<User_Status_Time_Stamp_Mapping> _User_Status_Time_Stamp_Mappings;
		
		private EntitySet<User_To_Input_mapping> _User_To_Input_mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTime_Stamp_IdChanging(int value);
    partial void OnTime_Stamp_IdChanged();
    partial void OnTime_Stamp_ValueChanging(System.Nullable<System.DateTime> value);
    partial void OnTime_Stamp_ValueChanged();
    #endregion
		
		public Time_Stamp()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Order_To_User_Mappings = new EntitySet<Order_To_User_Mapping>(new Action<Order_To_User_Mapping>(this.attach_Order_To_User_Mappings), new Action<Order_To_User_Mapping>(this.detach_Order_To_User_Mappings));
			this._Reminders = new EntitySet<Reminder>(new Action<Reminder>(this.attach_Reminders), new Action<Reminder>(this.detach_Reminders));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._User_Daily_ToTimeStamp_Mappings = new EntitySet<User_Daily_ToTimeStamp_Mapping>(new Action<User_Daily_ToTimeStamp_Mapping>(this.attach_User_Daily_ToTimeStamp_Mappings), new Action<User_Daily_ToTimeStamp_Mapping>(this.detach_User_Daily_ToTimeStamp_Mappings));
			this._User_Status_Time_Stamp_Mappings = new EntitySet<User_Status_Time_Stamp_Mapping>(new Action<User_Status_Time_Stamp_Mapping>(this.attach_User_Status_Time_Stamp_Mappings), new Action<User_Status_Time_Stamp_Mapping>(this.detach_User_Status_Time_Stamp_Mappings));
			this._User_To_Input_mappings = new EntitySet<User_To_Input_mapping>(new Action<User_To_Input_mapping>(this.attach_User_To_Input_mappings), new Action<User_To_Input_mapping>(this.detach_User_To_Input_mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Value", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time_Stamp_Value
		{
			get
			{
				return this._Time_Stamp_Value;
			}
			set
			{
				if ((this._Time_Stamp_Value != value))
				{
					this.OnTime_Stamp_ValueChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Value = value;
					this.SendPropertyChanged("Time_Stamp_Value");
					this.OnTime_Stamp_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Invoice", Storage="_Invoices", ThisKey="Time_Stamp_Id", OtherKey="TimeStamp_Id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Order_To_User_Mapping", Storage="_Order_To_User_Mappings", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id")]
		public EntitySet<Order_To_User_Mapping> Order_To_User_Mappings
		{
			get
			{
				return this._Order_To_User_Mappings;
			}
			set
			{
				this._Order_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Reminder", Storage="_Reminders", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id")]
		public EntitySet<Reminder> Reminders
		{
			get
			{
				return this._Reminders;
			}
			set
			{
				this._Reminders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_Tag", Storage="_Tags", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id")]
		public EntitySet<Tag> Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_Daily_ToTimeStamp_Mapping", Storage="_User_Daily_ToTimeStamp_Mappings", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id")]
		public EntitySet<User_Daily_ToTimeStamp_Mapping> User_Daily_ToTimeStamp_Mappings
		{
			get
			{
				return this._User_Daily_ToTimeStamp_Mappings;
			}
			set
			{
				this._User_Daily_ToTimeStamp_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_Status_Time_Stamp_Mapping", Storage="_User_Status_Time_Stamp_Mappings", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id")]
		public EntitySet<User_Status_Time_Stamp_Mapping> User_Status_Time_Stamp_Mappings
		{
			get
			{
				return this._User_Status_Time_Stamp_Mappings;
			}
			set
			{
				this._User_Status_Time_Stamp_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_To_Input_mapping", Storage="_User_To_Input_mappings", ThisKey="Time_Stamp_Id", OtherKey="timestamp_id")]
		public EntitySet<User_To_Input_mapping> User_To_Input_mappings
		{
			get
			{
				return this._User_To_Input_mappings;
			}
			set
			{
				this._User_To_Input_mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_User_Daily_ToTimeStamp_Mappings(User_Daily_ToTimeStamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
		
		private void attach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = this;
		}
		
		private void detach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.Time_Stamp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Username;
		
		private string _Email_Address;
		
		private string _Password;
		
		private System.Nullable<int> _User_Status_Id;
		
		private EntitySet<Account_Master> _Account_Masters;
		
		private EntitySet<User_To_User_Mapping> _User_To_User_Mappings;
		
		private EntitySet<User_To_User_Mapping> _User_To_User_Mappings1;
		
		private EntitySet<Address_Master> _Address_Masters;
		
		private EntitySet<Company> _Companies;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Feedback> _Feedbacks1;
		
		private EntitySet<Order_To_User_Mapping> _Order_To_User_Mappings;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Payment> _Payments1;
		
		private EntitySet<User_Input_To_User_Mapping> _User_Input_To_User_Mappings;
		
		private EntitySet<User_Status_Time_Stamp_Mapping> _User_Status_Time_Stamp_Mappings;
		
		private EntitySet<User_Status_Time_Stamp_Mapping> _User_Status_Time_Stamp_Mappings1;
		
		private EntitySet<User_To_Input_mapping> _User_To_Input_mappings;
		
		private EntitySet<User_To_Level_Mapping> _User_To_Level_Mappings;
		
		private EntitySet<User_To_Phone_Mapping> _User_To_Phone_Mappings;
		
		private EntitySet<User_To_Preference> _User_To_Preferences;
		
		private EntitySet<User_To_Reminder> _User_To_Reminders;
		
		private EntitySet<User_To_Role_Mapping> _User_To_Role_Mappings;
		
		private EntitySet<User_To_Shift_Mapping> _User_To_Shift_Mappings;
		
		private EntitySet<User_To_Special_Offer_Mapping> _User_To_Special_Offer_Mappings;
		
		private EntityRef<User_Status> _User_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmail_AddressChanging(string value);
    partial void OnEmail_AddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUser_Status_IdChanging(System.Nullable<int> value);
    partial void OnUser_Status_IdChanged();
    #endregion
		
		public User()
		{
			this._Account_Masters = new EntitySet<Account_Master>(new Action<Account_Master>(this.attach_Account_Masters), new Action<Account_Master>(this.detach_Account_Masters));
			this._User_To_User_Mappings = new EntitySet<User_To_User_Mapping>(new Action<User_To_User_Mapping>(this.attach_User_To_User_Mappings), new Action<User_To_User_Mapping>(this.detach_User_To_User_Mappings));
			this._User_To_User_Mappings1 = new EntitySet<User_To_User_Mapping>(new Action<User_To_User_Mapping>(this.attach_User_To_User_Mappings1), new Action<User_To_User_Mapping>(this.detach_User_To_User_Mappings1));
			this._Address_Masters = new EntitySet<Address_Master>(new Action<Address_Master>(this.attach_Address_Masters), new Action<Address_Master>(this.detach_Address_Masters));
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Feedbacks1 = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks1), new Action<Feedback>(this.detach_Feedbacks1));
			this._Order_To_User_Mappings = new EntitySet<Order_To_User_Mapping>(new Action<Order_To_User_Mapping>(this.attach_Order_To_User_Mappings), new Action<Order_To_User_Mapping>(this.detach_Order_To_User_Mappings));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Payments1 = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments1), new Action<Payment>(this.detach_Payments1));
			this._User_Input_To_User_Mappings = new EntitySet<User_Input_To_User_Mapping>(new Action<User_Input_To_User_Mapping>(this.attach_User_Input_To_User_Mappings), new Action<User_Input_To_User_Mapping>(this.detach_User_Input_To_User_Mappings));
			this._User_Status_Time_Stamp_Mappings = new EntitySet<User_Status_Time_Stamp_Mapping>(new Action<User_Status_Time_Stamp_Mapping>(this.attach_User_Status_Time_Stamp_Mappings), new Action<User_Status_Time_Stamp_Mapping>(this.detach_User_Status_Time_Stamp_Mappings));
			this._User_Status_Time_Stamp_Mappings1 = new EntitySet<User_Status_Time_Stamp_Mapping>(new Action<User_Status_Time_Stamp_Mapping>(this.attach_User_Status_Time_Stamp_Mappings1), new Action<User_Status_Time_Stamp_Mapping>(this.detach_User_Status_Time_Stamp_Mappings1));
			this._User_To_Input_mappings = new EntitySet<User_To_Input_mapping>(new Action<User_To_Input_mapping>(this.attach_User_To_Input_mappings), new Action<User_To_Input_mapping>(this.detach_User_To_Input_mappings));
			this._User_To_Level_Mappings = new EntitySet<User_To_Level_Mapping>(new Action<User_To_Level_Mapping>(this.attach_User_To_Level_Mappings), new Action<User_To_Level_Mapping>(this.detach_User_To_Level_Mappings));
			this._User_To_Phone_Mappings = new EntitySet<User_To_Phone_Mapping>(new Action<User_To_Phone_Mapping>(this.attach_User_To_Phone_Mappings), new Action<User_To_Phone_Mapping>(this.detach_User_To_Phone_Mappings));
			this._User_To_Preferences = new EntitySet<User_To_Preference>(new Action<User_To_Preference>(this.attach_User_To_Preferences), new Action<User_To_Preference>(this.detach_User_To_Preferences));
			this._User_To_Reminders = new EntitySet<User_To_Reminder>(new Action<User_To_Reminder>(this.attach_User_To_Reminders), new Action<User_To_Reminder>(this.detach_User_To_Reminders));
			this._User_To_Role_Mappings = new EntitySet<User_To_Role_Mapping>(new Action<User_To_Role_Mapping>(this.attach_User_To_Role_Mappings), new Action<User_To_Role_Mapping>(this.detach_User_To_Role_Mappings));
			this._User_To_Shift_Mappings = new EntitySet<User_To_Shift_Mapping>(new Action<User_To_Shift_Mapping>(this.attach_User_To_Shift_Mappings), new Action<User_To_Shift_Mapping>(this.detach_User_To_Shift_Mappings));
			this._User_To_Special_Offer_Mappings = new EntitySet<User_To_Special_Offer_Mapping>(new Action<User_To_Special_Offer_Mapping>(this.attach_User_To_Special_Offer_Mappings), new Action<User_To_Special_Offer_Mapping>(this.detach_User_To_Special_Offer_Mappings));
			this._User_Status = default(EntityRef<User_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Address", DbType="VarChar(50)")]
		public string Email_Address
		{
			get
			{
				return this._Email_Address;
			}
			set
			{
				if ((this._Email_Address != value))
				{
					this.OnEmail_AddressChanging(value);
					this.SendPropertyChanging();
					this._Email_Address = value;
					this.SendPropertyChanged("Email_Address");
					this.OnEmail_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Id", DbType="Int")]
		public System.Nullable<int> User_Status_Id
		{
			get
			{
				return this._User_Status_Id;
			}
			set
			{
				if ((this._User_Status_Id != value))
				{
					if (this._User_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Id = value;
					this.SendPropertyChanged("User_Status_Id");
					this.OnUser_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account_Master", Storage="_Account_Masters", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Account_Master> Account_Masters
		{
			get
			{
				return this._Account_Masters;
			}
			set
			{
				this._Account_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_User_Mapping", Storage="_User_To_User_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_User_Mapping> User_To_User_Mappings
		{
			get
			{
				return this._User_To_User_Mappings;
			}
			set
			{
				this._User_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_User_Mapping1", Storage="_User_To_User_Mappings1", ThisKey="User_Id", OtherKey="Parent_User_Id")]
		public EntitySet<User_To_User_Mapping> User_To_User_Mappings1
		{
			get
			{
				return this._User_To_User_Mappings1;
			}
			set
			{
				this._User_To_User_Mappings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Address_Master", Storage="_Address_Masters", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Address_Master> Address_Masters
		{
			get
			{
				return this._Address_Masters;
			}
			set
			{
				this._Address_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Company", Storage="_Companies", ThisKey="User_Id", OtherKey="Internal_User_Id")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback", Storage="_Feedbacks", ThisKey="User_Id", OtherKey="Feedback_For_User_Id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback1", Storage="_Feedbacks1", ThisKey="User_Id", OtherKey="Feedback_Giver_User_Id")]
		public EntitySet<Feedback> Feedbacks1
		{
			get
			{
				return this._Feedbacks1;
			}
			set
			{
				this._Feedbacks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order_To_User_Mapping", Storage="_Order_To_User_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Order_To_User_Mapping> Order_To_User_Mappings
		{
			get
			{
				return this._Order_To_User_Mappings;
			}
			set
			{
				this._Order_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_Payments", ThisKey="User_Id", OtherKey="Payer_User_Id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment1", Storage="_Payments1", ThisKey="User_Id", OtherKey="Receiver_User_Id")]
		public EntitySet<Payment> Payments1
		{
			get
			{
				return this._Payments1;
			}
			set
			{
				this._Payments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Input_To_User_Mapping", Storage="_User_Input_To_User_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_Input_To_User_Mapping> User_Input_To_User_Mappings
		{
			get
			{
				return this._User_Input_To_User_Mappings;
			}
			set
			{
				this._User_Input_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status_Time_Stamp_Mapping", Storage="_User_Status_Time_Stamp_Mappings", ThisKey="User_Id", OtherKey="User_Id_By")]
		public EntitySet<User_Status_Time_Stamp_Mapping> User_Status_Time_Stamp_Mappings
		{
			get
			{
				return this._User_Status_Time_Stamp_Mappings;
			}
			set
			{
				this._User_Status_Time_Stamp_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status_Time_Stamp_Mapping1", Storage="_User_Status_Time_Stamp_Mappings1", ThisKey="User_Id", OtherKey="User_Id_Of")]
		public EntitySet<User_Status_Time_Stamp_Mapping> User_Status_Time_Stamp_Mappings1
		{
			get
			{
				return this._User_Status_Time_Stamp_Mappings1;
			}
			set
			{
				this._User_Status_Time_Stamp_Mappings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Input_mapping", Storage="_User_To_Input_mappings", ThisKey="User_Id", OtherKey="user_id")]
		public EntitySet<User_To_Input_mapping> User_To_Input_mappings
		{
			get
			{
				return this._User_To_Input_mappings;
			}
			set
			{
				this._User_To_Input_mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Level_Mapping", Storage="_User_To_Level_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Level_Mapping> User_To_Level_Mappings
		{
			get
			{
				return this._User_To_Level_Mappings;
			}
			set
			{
				this._User_To_Level_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Phone_Mapping", Storage="_User_To_Phone_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Phone_Mapping> User_To_Phone_Mappings
		{
			get
			{
				return this._User_To_Phone_Mappings;
			}
			set
			{
				this._User_To_Phone_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Preference", Storage="_User_To_Preferences", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Preference> User_To_Preferences
		{
			get
			{
				return this._User_To_Preferences;
			}
			set
			{
				this._User_To_Preferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Reminder", Storage="_User_To_Reminders", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Reminder> User_To_Reminders
		{
			get
			{
				return this._User_To_Reminders;
			}
			set
			{
				this._User_To_Reminders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Role_Mapping", Storage="_User_To_Role_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Role_Mapping> User_To_Role_Mappings
		{
			get
			{
				return this._User_To_Role_Mappings;
			}
			set
			{
				this._User_To_Role_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Shift_Mapping", Storage="_User_To_Shift_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Shift_Mapping> User_To_Shift_Mappings
		{
			get
			{
				return this._User_To_Shift_Mappings;
			}
			set
			{
				this._User_To_Shift_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Special_Offer_Mapping", Storage="_User_To_Special_Offer_Mappings", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<User_To_Special_Offer_Mapping> User_To_Special_Offer_Mappings
		{
			get
			{
				return this._User_To_Special_Offer_Mappings;
			}
			set
			{
				this._User_To_Special_Offer_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User", Storage="_User_Status", ThisKey="User_Status_Id", OtherKey="User_Status_Id", IsForeignKey=true)]
		public User_Status User_Status
		{
			get
			{
				return this._User_Status.Entity;
			}
			set
			{
				User_Status previousValue = this._User_Status.Entity;
				if (((previousValue != value) 
							|| (this._User_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Status.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._User_Status.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._User_Status_Id = value.User_Status_Id;
					}
					else
					{
						this._User_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Account_Masters(Account_Master entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Account_Masters(Account_Master entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_User_Mappings(User_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_User_Mappings(User_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_User_Mappings1(User_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_User_To_User_Mappings1(User_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Address_Masters(Address_Master entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Order_To_User_Mappings(Order_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Payments1(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Payments1(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_User_Input_To_User_Mappings(User_Input_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Input_To_User_Mappings(User_Input_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Status_Time_Stamp_Mappings1(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_User_Status_Time_Stamp_Mappings1(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Input_mappings(User_To_Input_mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Level_Mappings(User_To_Level_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Level_Mappings(User_To_Level_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Phone_Mappings(User_To_Phone_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Phone_Mappings(User_To_Phone_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Preferences(User_To_Preference entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Preferences(User_To_Preference entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Reminders(User_To_Reminder entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Reminders(User_To_Reminder entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Role_Mappings(User_To_Role_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Role_Mappings(User_To_Role_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Shift_Mappings(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Shift_Mappings(User_To_Shift_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_To_Special_Offer_Mappings(User_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_To_Special_Offer_Mappings(User_To_Special_Offer_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Billing_Preference_Mapping")]
	public partial class User_Billing_Preference_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Billing_Preference_Mapping_Id;
		
		private System.Nullable<int> _User_To_Preference_Id;
		
		private System.Nullable<int> _Billing_Cycle_Id;
		
		private EntityRef<Billing_Cycle> _Billing_Cycle;
		
		private EntityRef<User_To_Preference> _User_To_Preference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Billing_Preference_Mapping_IdChanging(int value);
    partial void OnUser_Billing_Preference_Mapping_IdChanged();
    partial void OnUser_To_Preference_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Preference_IdChanged();
    partial void OnBilling_Cycle_IdChanging(System.Nullable<int> value);
    partial void OnBilling_Cycle_IdChanged();
    #endregion
		
		public User_Billing_Preference_Mapping()
		{
			this._Billing_Cycle = default(EntityRef<Billing_Cycle>);
			this._User_To_Preference = default(EntityRef<User_To_Preference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Billing_Preference_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Billing_Preference_Mapping_Id
		{
			get
			{
				return this._User_Billing_Preference_Mapping_Id;
			}
			set
			{
				if ((this._User_Billing_Preference_Mapping_Id != value))
				{
					this.OnUser_Billing_Preference_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Billing_Preference_Mapping_Id = value;
					this.SendPropertyChanged("User_Billing_Preference_Mapping_Id");
					this.OnUser_Billing_Preference_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Preference_Id", DbType="Int")]
		public System.Nullable<int> User_To_Preference_Id
		{
			get
			{
				return this._User_To_Preference_Id;
			}
			set
			{
				if ((this._User_To_Preference_Id != value))
				{
					if (this._User_To_Preference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Preference_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Preference_Id = value;
					this.SendPropertyChanged("User_To_Preference_Id");
					this.OnUser_To_Preference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billing_Cycle_Id", DbType="Int")]
		public System.Nullable<int> Billing_Cycle_Id
		{
			get
			{
				return this._Billing_Cycle_Id;
			}
			set
			{
				if ((this._Billing_Cycle_Id != value))
				{
					if (this._Billing_Cycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBilling_Cycle_IdChanging(value);
					this.SendPropertyChanging();
					this._Billing_Cycle_Id = value;
					this.SendPropertyChanged("Billing_Cycle_Id");
					this.OnBilling_Cycle_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billing_Cycle_User_Billing_Preference_Mapping", Storage="_Billing_Cycle", ThisKey="Billing_Cycle_Id", OtherKey="Billing_Cycle_Id", IsForeignKey=true)]
		public Billing_Cycle Billing_Cycle
		{
			get
			{
				return this._Billing_Cycle.Entity;
			}
			set
			{
				Billing_Cycle previousValue = this._Billing_Cycle.Entity;
				if (((previousValue != value) 
							|| (this._Billing_Cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Billing_Cycle.Entity = null;
						previousValue.User_Billing_Preference_Mappings.Remove(this);
					}
					this._Billing_Cycle.Entity = value;
					if ((value != null))
					{
						value.User_Billing_Preference_Mappings.Add(this);
						this._Billing_Cycle_Id = value.Billing_Cycle_Id;
					}
					else
					{
						this._Billing_Cycle_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Billing_Cycle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Billing_Preference_Mapping", Storage="_User_To_Preference", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id", IsForeignKey=true)]
		public User_To_Preference User_To_Preference
		{
			get
			{
				return this._User_To_Preference.Entity;
			}
			set
			{
				User_To_Preference previousValue = this._User_To_Preference.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Preference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Preference.Entity = null;
						previousValue.User_Billing_Preference_Mappings.Remove(this);
					}
					this._User_To_Preference.Entity = value;
					if ((value != null))
					{
						value.User_Billing_Preference_Mappings.Add(this);
						this._User_To_Preference_Id = value.User_To_Preference_Id;
					}
					else
					{
						this._User_To_Preference_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Preference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Currency_Preferenc_Mapping")]
	public partial class User_Currency_Preferenc_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Currency_Preferenc_Mapping_Id;
		
		private System.Nullable<int> _User_To_Preference_Id;
		
		private System.Nullable<int> _Currency_Id;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<User_To_Preference> _User_To_Preference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Currency_Preferenc_Mapping_IdChanging(int value);
    partial void OnUser_Currency_Preferenc_Mapping_IdChanged();
    partial void OnUser_To_Preference_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Preference_IdChanged();
    partial void OnCurrency_IdChanging(System.Nullable<int> value);
    partial void OnCurrency_IdChanged();
    #endregion
		
		public User_Currency_Preferenc_Mapping()
		{
			this._Currency = default(EntityRef<Currency>);
			this._User_To_Preference = default(EntityRef<User_To_Preference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Currency_Preferenc_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Currency_Preferenc_Mapping_Id
		{
			get
			{
				return this._User_Currency_Preferenc_Mapping_Id;
			}
			set
			{
				if ((this._User_Currency_Preferenc_Mapping_Id != value))
				{
					this.OnUser_Currency_Preferenc_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Currency_Preferenc_Mapping_Id = value;
					this.SendPropertyChanged("User_Currency_Preferenc_Mapping_Id");
					this.OnUser_Currency_Preferenc_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Preference_Id", DbType="Int")]
		public System.Nullable<int> User_To_Preference_Id
		{
			get
			{
				return this._User_To_Preference_Id;
			}
			set
			{
				if ((this._User_To_Preference_Id != value))
				{
					if (this._User_To_Preference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Preference_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Preference_Id = value;
					this.SendPropertyChanged("User_To_Preference_Id");
					this.OnUser_To_Preference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency_Id", DbType="Int")]
		public System.Nullable<int> Currency_Id
		{
			get
			{
				return this._Currency_Id;
			}
			set
			{
				if ((this._Currency_Id != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrency_IdChanging(value);
					this.SendPropertyChanging();
					this._Currency_Id = value;
					this.SendPropertyChanged("Currency_Id");
					this.OnCurrency_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_User_Currency_Preferenc_Mapping", Storage="_Currency", ThisKey="Currency_Id", OtherKey="Currency_Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.User_Currency_Preferenc_Mappings.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.User_Currency_Preferenc_Mappings.Add(this);
						this._Currency_Id = value.Currency_Id;
					}
					else
					{
						this._Currency_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Currency_Preferenc_Mapping", Storage="_User_To_Preference", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id", IsForeignKey=true)]
		public User_To_Preference User_To_Preference
		{
			get
			{
				return this._User_To_Preference.Entity;
			}
			set
			{
				User_To_Preference previousValue = this._User_To_Preference.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Preference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Preference.Entity = null;
						previousValue.User_Currency_Preferenc_Mappings.Remove(this);
					}
					this._User_To_Preference.Entity = value;
					if ((value != null))
					{
						value.User_Currency_Preferenc_Mappings.Add(this);
						this._User_To_Preference_Id = value.User_To_Preference_Id;
					}
					else
					{
						this._User_To_Preference_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Preference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Daily_ToTimeStamp_Mapping")]
	public partial class User_Daily_ToTimeStamp_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Daily_ToTimeStamp_Mapping_Id;
		
		private System.Nullable<int> _Login_Id;
		
		private System.Nullable<int> _Time_Stamp_Id;
		
		private System.Nullable<int> _Daily_Log_Status_Id;
		
		private EntityRef<Daily_Log_Status> _Daily_Log_Status;
		
		private EntityRef<Login_Master> _Login_Master;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Daily_ToTimeStamp_Mapping_IdChanging(int value);
    partial void OnUser_Daily_ToTimeStamp_Mapping_IdChanged();
    partial void OnLogin_IdChanging(System.Nullable<int> value);
    partial void OnLogin_IdChanged();
    partial void OnTime_Stamp_IdChanging(System.Nullable<int> value);
    partial void OnTime_Stamp_IdChanged();
    partial void OnDaily_Log_Status_IdChanging(System.Nullable<int> value);
    partial void OnDaily_Log_Status_IdChanged();
    #endregion
		
		public User_Daily_ToTimeStamp_Mapping()
		{
			this._Daily_Log_Status = default(EntityRef<Daily_Log_Status>);
			this._Login_Master = default(EntityRef<Login_Master>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Daily_ToTimeStamp_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Daily_ToTimeStamp_Mapping_Id
		{
			get
			{
				return this._User_Daily_ToTimeStamp_Mapping_Id;
			}
			set
			{
				if ((this._User_Daily_ToTimeStamp_Mapping_Id != value))
				{
					this.OnUser_Daily_ToTimeStamp_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Daily_ToTimeStamp_Mapping_Id = value;
					this.SendPropertyChanged("User_Daily_ToTimeStamp_Mapping_Id");
					this.OnUser_Daily_ToTimeStamp_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", DbType="Int")]
		public System.Nullable<int> Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					if (this._Login_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", DbType="Int")]
		public System.Nullable<int> Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daily_Log_Status_Id", DbType="Int")]
		public System.Nullable<int> Daily_Log_Status_Id
		{
			get
			{
				return this._Daily_Log_Status_Id;
			}
			set
			{
				if ((this._Daily_Log_Status_Id != value))
				{
					if (this._Daily_Log_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDaily_Log_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._Daily_Log_Status_Id = value;
					this.SendPropertyChanged("Daily_Log_Status_Id");
					this.OnDaily_Log_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Log_Status_User_Daily_ToTimeStamp_Mapping", Storage="_Daily_Log_Status", ThisKey="Daily_Log_Status_Id", OtherKey="Daily_Log_Status_Id", IsForeignKey=true)]
		public Daily_Log_Status Daily_Log_Status
		{
			get
			{
				return this._Daily_Log_Status.Entity;
			}
			set
			{
				Daily_Log_Status previousValue = this._Daily_Log_Status.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Log_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Log_Status.Entity = null;
						previousValue.User_Daily_ToTimeStamp_Mappings.Remove(this);
					}
					this._Daily_Log_Status.Entity = value;
					if ((value != null))
					{
						value.User_Daily_ToTimeStamp_Mappings.Add(this);
						this._Daily_Log_Status_Id = value.Daily_Log_Status_Id;
					}
					else
					{
						this._Daily_Log_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Daily_Log_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Master_User_Daily_ToTimeStamp_Mapping", Storage="_Login_Master", ThisKey="Login_Id", OtherKey="Login_Id", IsForeignKey=true)]
		public Login_Master Login_Master
		{
			get
			{
				return this._Login_Master.Entity;
			}
			set
			{
				Login_Master previousValue = this._Login_Master.Entity;
				if (((previousValue != value) 
							|| (this._Login_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login_Master.Entity = null;
						previousValue.User_Daily_ToTimeStamp_Mappings.Remove(this);
					}
					this._Login_Master.Entity = value;
					if ((value != null))
					{
						value.User_Daily_ToTimeStamp_Mappings.Add(this);
						this._Login_Id = value.Login_Id;
					}
					else
					{
						this._Login_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_Daily_ToTimeStamp_Mapping", Storage="_Time_Stamp", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.User_Daily_ToTimeStamp_Mappings.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.User_Daily_ToTimeStamp_Mappings.Add(this);
						this._Time_Stamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._Time_Stamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_FileType_Preference_Mapping")]
	public partial class User_FileType_Preference_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_FileType_Preferenc_Mapping_Id;
		
		private System.Nullable<int> _User_To_Preference_Id;
		
		private System.Nullable<int> _File_Type_Id;
		
		private EntityRef<File_Type> _File_Type;
		
		private EntityRef<User_To_Preference> _User_To_Preference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_FileType_Preferenc_Mapping_IdChanging(int value);
    partial void OnUser_FileType_Preferenc_Mapping_IdChanged();
    partial void OnUser_To_Preference_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Preference_IdChanged();
    partial void OnFile_Type_IdChanging(System.Nullable<int> value);
    partial void OnFile_Type_IdChanged();
    #endregion
		
		public User_FileType_Preference_Mapping()
		{
			this._File_Type = default(EntityRef<File_Type>);
			this._User_To_Preference = default(EntityRef<User_To_Preference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_FileType_Preferenc_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_FileType_Preferenc_Mapping_Id
		{
			get
			{
				return this._User_FileType_Preferenc_Mapping_Id;
			}
			set
			{
				if ((this._User_FileType_Preferenc_Mapping_Id != value))
				{
					this.OnUser_FileType_Preferenc_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_FileType_Preferenc_Mapping_Id = value;
					this.SendPropertyChanged("User_FileType_Preferenc_Mapping_Id");
					this.OnUser_FileType_Preferenc_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Preference_Id", DbType="Int")]
		public System.Nullable<int> User_To_Preference_Id
		{
			get
			{
				return this._User_To_Preference_Id;
			}
			set
			{
				if ((this._User_To_Preference_Id != value))
				{
					if (this._User_To_Preference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Preference_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Preference_Id = value;
					this.SendPropertyChanged("User_To_Preference_Id");
					this.OnUser_To_Preference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Type_Id", DbType="Int")]
		public System.Nullable<int> File_Type_Id
		{
			get
			{
				return this._File_Type_Id;
			}
			set
			{
				if ((this._File_Type_Id != value))
				{
					if (this._File_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFile_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._File_Type_Id = value;
					this.SendPropertyChanged("File_Type_Id");
					this.OnFile_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Type_User_FileType_Preference_Mapping", Storage="_File_Type", ThisKey="File_Type_Id", OtherKey="File_Type_Id", IsForeignKey=true)]
		public File_Type File_Type
		{
			get
			{
				return this._File_Type.Entity;
			}
			set
			{
				File_Type previousValue = this._File_Type.Entity;
				if (((previousValue != value) 
							|| (this._File_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File_Type.Entity = null;
						previousValue.User_FileType_Preference_Mappings.Remove(this);
					}
					this._File_Type.Entity = value;
					if ((value != null))
					{
						value.User_FileType_Preference_Mappings.Add(this);
						this._File_Type_Id = value.File_Type_Id;
					}
					else
					{
						this._File_Type_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("File_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_FileType_Preference_Mapping", Storage="_User_To_Preference", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id", IsForeignKey=true)]
		public User_To_Preference User_To_Preference
		{
			get
			{
				return this._User_To_Preference.Entity;
			}
			set
			{
				User_To_Preference previousValue = this._User_To_Preference.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Preference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Preference.Entity = null;
						previousValue.User_FileType_Preference_Mappings.Remove(this);
					}
					this._User_To_Preference.Entity = value;
					if ((value != null))
					{
						value.User_FileType_Preference_Mappings.Add(this);
						this._User_To_Preference_Id = value.User_To_Preference_Id;
					}
					else
					{
						this._User_To_Preference_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Preference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Input_To_Option_Mapping")]
	public partial class User_Input_To_Option_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Input_To_Option_Mapping_Id;
		
		private System.Nullable<int> _user_to_input_mapping_id;
		
		private System.Nullable<int> _Options_Id;
		
		private EntityRef<Options_Master> _Options_Master;
		
		private EntityRef<User_To_Input_mapping> _User_To_Input_mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Input_To_Option_Mapping_IdChanging(int value);
    partial void OnUser_Input_To_Option_Mapping_IdChanged();
    partial void Onuser_to_input_mapping_idChanging(System.Nullable<int> value);
    partial void Onuser_to_input_mapping_idChanged();
    partial void OnOptions_IdChanging(System.Nullable<int> value);
    partial void OnOptions_IdChanged();
    #endregion
		
		public User_Input_To_Option_Mapping()
		{
			this._Options_Master = default(EntityRef<Options_Master>);
			this._User_To_Input_mapping = default(EntityRef<User_To_Input_mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Input_To_Option_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Input_To_Option_Mapping_Id
		{
			get
			{
				return this._User_Input_To_Option_Mapping_Id;
			}
			set
			{
				if ((this._User_Input_To_Option_Mapping_Id != value))
				{
					this.OnUser_Input_To_Option_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Input_To_Option_Mapping_Id = value;
					this.SendPropertyChanged("User_Input_To_Option_Mapping_Id");
					this.OnUser_Input_To_Option_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_to_input_mapping_id", DbType="Int")]
		public System.Nullable<int> user_to_input_mapping_id
		{
			get
			{
				return this._user_to_input_mapping_id;
			}
			set
			{
				if ((this._user_to_input_mapping_id != value))
				{
					if (this._User_To_Input_mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_to_input_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._user_to_input_mapping_id = value;
					this.SendPropertyChanged("user_to_input_mapping_id");
					this.Onuser_to_input_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options_Id", DbType="Int")]
		public System.Nullable<int> Options_Id
		{
			get
			{
				return this._Options_Id;
			}
			set
			{
				if ((this._Options_Id != value))
				{
					if (this._Options_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptions_IdChanging(value);
					this.SendPropertyChanging();
					this._Options_Id = value;
					this.SendPropertyChanged("Options_Id");
					this.OnOptions_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Options_Master_User_Input_To_Option_Mapping", Storage="_Options_Master", ThisKey="Options_Id", OtherKey="Options_Id", IsForeignKey=true)]
		public Options_Master Options_Master
		{
			get
			{
				return this._Options_Master.Entity;
			}
			set
			{
				Options_Master previousValue = this._Options_Master.Entity;
				if (((previousValue != value) 
							|| (this._Options_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Options_Master.Entity = null;
						previousValue.User_Input_To_Option_Mappings.Remove(this);
					}
					this._Options_Master.Entity = value;
					if ((value != null))
					{
						value.User_Input_To_Option_Mappings.Add(this);
						this._Options_Id = value.Options_Id;
					}
					else
					{
						this._Options_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Options_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_To_Option_Mapping", Storage="_User_To_Input_mapping", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id", IsForeignKey=true)]
		public User_To_Input_mapping User_To_Input_mapping
		{
			get
			{
				return this._User_To_Input_mapping.Entity;
			}
			set
			{
				User_To_Input_mapping previousValue = this._User_To_Input_mapping.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Input_mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Input_mapping.Entity = null;
						previousValue.User_Input_To_Option_Mappings.Remove(this);
					}
					this._User_To_Input_mapping.Entity = value;
					if ((value != null))
					{
						value.User_Input_To_Option_Mappings.Add(this);
						this._user_to_input_mapping_id = value.user_to_input_mapping_id;
					}
					else
					{
						this._user_to_input_mapping_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Input_mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Input_to_Order_mapping")]
	public partial class User_Input_to_Order_mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_input_to_order_mapping_id;
		
		private System.Nullable<int> _user_to_input_mapping_id;
		
		private System.Nullable<int> _order_detail_id;
		
		private EntityRef<Order_Detail> _Order_Detail;
		
		private EntityRef<User_To_Input_mapping> _User_To_Input_mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_input_to_order_mapping_idChanging(int value);
    partial void Onuser_input_to_order_mapping_idChanged();
    partial void Onuser_to_input_mapping_idChanging(System.Nullable<int> value);
    partial void Onuser_to_input_mapping_idChanged();
    partial void Onorder_detail_idChanging(System.Nullable<int> value);
    partial void Onorder_detail_idChanged();
    #endregion
		
		public User_Input_to_Order_mapping()
		{
			this._Order_Detail = default(EntityRef<Order_Detail>);
			this._User_To_Input_mapping = default(EntityRef<User_To_Input_mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_input_to_order_mapping_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_input_to_order_mapping_id
		{
			get
			{
				return this._user_input_to_order_mapping_id;
			}
			set
			{
				if ((this._user_input_to_order_mapping_id != value))
				{
					this.Onuser_input_to_order_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._user_input_to_order_mapping_id = value;
					this.SendPropertyChanged("user_input_to_order_mapping_id");
					this.Onuser_input_to_order_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_to_input_mapping_id", DbType="Int")]
		public System.Nullable<int> user_to_input_mapping_id
		{
			get
			{
				return this._user_to_input_mapping_id;
			}
			set
			{
				if ((this._user_to_input_mapping_id != value))
				{
					if (this._User_To_Input_mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_to_input_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._user_to_input_mapping_id = value;
					this.SendPropertyChanged("user_to_input_mapping_id");
					this.Onuser_to_input_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_detail_id", DbType="Int")]
		public System.Nullable<int> order_detail_id
		{
			get
			{
				return this._order_detail_id;
			}
			set
			{
				if ((this._order_detail_id != value))
				{
					if (this._Order_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_detail_idChanging(value);
					this.SendPropertyChanging();
					this._order_detail_id = value;
					this.SendPropertyChanged("order_detail_id");
					this.Onorder_detail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_User_Input_to_Order_mapping", Storage="_Order_Detail", ThisKey="order_detail_id", OtherKey="Order_Detail_Id", IsForeignKey=true)]
		public Order_Detail Order_Detail
		{
			get
			{
				return this._Order_Detail.Entity;
			}
			set
			{
				Order_Detail previousValue = this._Order_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Order_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Detail.Entity = null;
						previousValue.User_Input_to_Order_mappings.Remove(this);
					}
					this._Order_Detail.Entity = value;
					if ((value != null))
					{
						value.User_Input_to_Order_mappings.Add(this);
						this._order_detail_id = value.Order_Detail_Id;
					}
					else
					{
						this._order_detail_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_to_Order_mapping", Storage="_User_To_Input_mapping", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id", IsForeignKey=true)]
		public User_To_Input_mapping User_To_Input_mapping
		{
			get
			{
				return this._User_To_Input_mapping.Entity;
			}
			set
			{
				User_To_Input_mapping previousValue = this._User_To_Input_mapping.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Input_mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Input_mapping.Entity = null;
						previousValue.User_Input_to_Order_mappings.Remove(this);
					}
					this._User_To_Input_mapping.Entity = value;
					if ((value != null))
					{
						value.User_Input_to_Order_mappings.Add(this);
						this._user_to_input_mapping_id = value.user_to_input_mapping_id;
					}
					else
					{
						this._user_to_input_mapping_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Input_mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Input_To_User_Mapping")]
	public partial class User_Input_To_User_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Input_To_User_Mapping_Id;
		
		private System.Nullable<int> _user_to_input_mapping_id;
		
		private System.Nullable<int> _User_Id;
		
		private EntityRef<User> _User;
		
		private EntityRef<User_To_Input_mapping> _User_To_Input_mapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Input_To_User_Mapping_IdChanging(int value);
    partial void OnUser_Input_To_User_Mapping_IdChanged();
    partial void Onuser_to_input_mapping_idChanging(System.Nullable<int> value);
    partial void Onuser_to_input_mapping_idChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    #endregion
		
		public User_Input_To_User_Mapping()
		{
			this._User = default(EntityRef<User>);
			this._User_To_Input_mapping = default(EntityRef<User_To_Input_mapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Input_To_User_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Input_To_User_Mapping_Id
		{
			get
			{
				return this._User_Input_To_User_Mapping_Id;
			}
			set
			{
				if ((this._User_Input_To_User_Mapping_Id != value))
				{
					this.OnUser_Input_To_User_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Input_To_User_Mapping_Id = value;
					this.SendPropertyChanged("User_Input_To_User_Mapping_Id");
					this.OnUser_Input_To_User_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_to_input_mapping_id", DbType="Int")]
		public System.Nullable<int> user_to_input_mapping_id
		{
			get
			{
				return this._user_to_input_mapping_id;
			}
			set
			{
				if ((this._user_to_input_mapping_id != value))
				{
					if (this._User_To_Input_mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_to_input_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._user_to_input_mapping_id = value;
					this.SendPropertyChanged("user_to_input_mapping_id");
					this.Onuser_to_input_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Input_To_User_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Input_To_User_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Input_To_User_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_To_User_Mapping", Storage="_User_To_Input_mapping", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id", IsForeignKey=true)]
		public User_To_Input_mapping User_To_Input_mapping
		{
			get
			{
				return this._User_To_Input_mapping.Entity;
			}
			set
			{
				User_To_Input_mapping previousValue = this._User_To_Input_mapping.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Input_mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Input_mapping.Entity = null;
						previousValue.User_Input_To_User_Mappings.Remove(this);
					}
					this._User_To_Input_mapping.Entity = value;
					if ((value != null))
					{
						value.User_Input_To_User_Mappings.Add(this);
						this._user_to_input_mapping_id = value.user_to_input_mapping_id;
					}
					else
					{
						this._user_to_input_mapping_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Input_mapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Payment_Preference_Mapping")]
	public partial class User_Payment_Preference_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Payment_Preferenc_Mapping_Id;
		
		private System.Nullable<int> _User_To_Preference_Id;
		
		private System.Nullable<int> _Payment_Mode_Id;
		
		private EntityRef<Payment_Mode> _Payment_Mode;
		
		private EntityRef<User_To_Preference> _User_To_Preference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Payment_Preferenc_Mapping_IdChanging(int value);
    partial void OnUser_Payment_Preferenc_Mapping_IdChanged();
    partial void OnUser_To_Preference_IdChanging(System.Nullable<int> value);
    partial void OnUser_To_Preference_IdChanged();
    partial void OnPayment_Mode_IdChanging(System.Nullable<int> value);
    partial void OnPayment_Mode_IdChanged();
    #endregion
		
		public User_Payment_Preference_Mapping()
		{
			this._Payment_Mode = default(EntityRef<Payment_Mode>);
			this._User_To_Preference = default(EntityRef<User_To_Preference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Payment_Preferenc_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Payment_Preferenc_Mapping_Id
		{
			get
			{
				return this._User_Payment_Preferenc_Mapping_Id;
			}
			set
			{
				if ((this._User_Payment_Preferenc_Mapping_Id != value))
				{
					this.OnUser_Payment_Preferenc_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Payment_Preferenc_Mapping_Id = value;
					this.SendPropertyChanged("User_Payment_Preferenc_Mapping_Id");
					this.OnUser_Payment_Preferenc_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Preference_Id", DbType="Int")]
		public System.Nullable<int> User_To_Preference_Id
		{
			get
			{
				return this._User_To_Preference_Id;
			}
			set
			{
				if ((this._User_To_Preference_Id != value))
				{
					if (this._User_To_Preference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_To_Preference_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Preference_Id = value;
					this.SendPropertyChanged("User_To_Preference_Id");
					this.OnUser_To_Preference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Mode_Id", DbType="Int")]
		public System.Nullable<int> Payment_Mode_Id
		{
			get
			{
				return this._Payment_Mode_Id;
			}
			set
			{
				if ((this._Payment_Mode_Id != value))
				{
					if (this._Payment_Mode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayment_Mode_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Mode_Id = value;
					this.SendPropertyChanged("Payment_Mode_Id");
					this.OnPayment_Mode_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Mode_User_Payment_Preference_Mapping", Storage="_Payment_Mode", ThisKey="Payment_Mode_Id", OtherKey="Payment_Mode_Id", IsForeignKey=true)]
		public Payment_Mode Payment_Mode
		{
			get
			{
				return this._Payment_Mode.Entity;
			}
			set
			{
				Payment_Mode previousValue = this._Payment_Mode.Entity;
				if (((previousValue != value) 
							|| (this._Payment_Mode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment_Mode.Entity = null;
						previousValue.User_Payment_Preference_Mappings.Remove(this);
					}
					this._Payment_Mode.Entity = value;
					if ((value != null))
					{
						value.User_Payment_Preference_Mappings.Add(this);
						this._Payment_Mode_Id = value.Payment_Mode_Id;
					}
					else
					{
						this._Payment_Mode_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment_Mode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Payment_Preference_Mapping", Storage="_User_To_Preference", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id", IsForeignKey=true)]
		public User_To_Preference User_To_Preference
		{
			get
			{
				return this._User_To_Preference.Entity;
			}
			set
			{
				User_To_Preference previousValue = this._User_To_Preference.Entity;
				if (((previousValue != value) 
							|| (this._User_To_Preference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_To_Preference.Entity = null;
						previousValue.User_Payment_Preference_Mappings.Remove(this);
					}
					this._User_To_Preference.Entity = value;
					if ((value != null))
					{
						value.User_Payment_Preference_Mappings.Add(this);
						this._User_To_Preference_Id = value.User_To_Preference_Id;
					}
					else
					{
						this._User_To_Preference_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_To_Preference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Status")]
	public partial class User_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Status_Id;
		
		private string _User_Status_Name;
		
		private EntitySet<User> _Users;
		
		private EntitySet<User_Status_Time_Stamp_Mapping> _User_Status_Time_Stamp_Mappings;
		
		private EntitySet<User_Status_To_Questionnaire_Mapping> _User_Status_To_Questionnaire_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Status_IdChanging(int value);
    partial void OnUser_Status_IdChanged();
    partial void OnUser_Status_NameChanging(string value);
    partial void OnUser_Status_NameChanged();
    #endregion
		
		public User_Status()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._User_Status_Time_Stamp_Mappings = new EntitySet<User_Status_Time_Stamp_Mapping>(new Action<User_Status_Time_Stamp_Mapping>(this.attach_User_Status_Time_Stamp_Mappings), new Action<User_Status_Time_Stamp_Mapping>(this.detach_User_Status_Time_Stamp_Mappings));
			this._User_Status_To_Questionnaire_Mappings = new EntitySet<User_Status_To_Questionnaire_Mapping>(new Action<User_Status_To_Questionnaire_Mapping>(this.attach_User_Status_To_Questionnaire_Mappings), new Action<User_Status_To_Questionnaire_Mapping>(this.detach_User_Status_To_Questionnaire_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Status_Id
		{
			get
			{
				return this._User_Status_Id;
			}
			set
			{
				if ((this._User_Status_Id != value))
				{
					this.OnUser_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Id = value;
					this.SendPropertyChanged("User_Status_Id");
					this.OnUser_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Name", DbType="VarChar(50)")]
		public string User_Status_Name
		{
			get
			{
				return this._User_Status_Name;
			}
			set
			{
				if ((this._User_Status_Name != value))
				{
					this.OnUser_Status_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Name = value;
					this.SendPropertyChanged("User_Status_Name");
					this.OnUser_Status_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User", Storage="_Users", ThisKey="User_Status_Id", OtherKey="User_Status_Id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User_Status_Time_Stamp_Mapping", Storage="_User_Status_Time_Stamp_Mappings", ThisKey="User_Status_Id", OtherKey="User_Status_Id")]
		public EntitySet<User_Status_Time_Stamp_Mapping> User_Status_Time_Stamp_Mappings
		{
			get
			{
				return this._User_Status_Time_Stamp_Mappings;
			}
			set
			{
				this._User_Status_Time_Stamp_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User_Status_To_Questionnaire_Mapping", Storage="_User_Status_To_Questionnaire_Mappings", ThisKey="User_Status_Id", OtherKey="User_Status_Id")]
		public EntitySet<User_Status_To_Questionnaire_Mapping> User_Status_To_Questionnaire_Mappings
		{
			get
			{
				return this._User_Status_To_Questionnaire_Mappings;
			}
			set
			{
				this._User_Status_To_Questionnaire_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = null;
		}
		
		private void attach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = this;
		}
		
		private void detach_User_Status_Time_Stamp_Mappings(User_Status_Time_Stamp_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = null;
		}
		
		private void attach_User_Status_To_Questionnaire_Mappings(User_Status_To_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = this;
		}
		
		private void detach_User_Status_To_Questionnaire_Mappings(User_Status_To_Questionnaire_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Status_Time_Stamp_Mapping")]
	public partial class User_Status_Time_Stamp_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Status_Time_Stamp_Mapping_Id;
		
		private System.Nullable<int> _User_Id_By;
		
		private System.Nullable<int> _User_Id_Of;
		
		private System.Nullable<int> _User_Status_Id;
		
		private System.Nullable<int> _Time_Stamp_Id;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User_Status> _User_Status;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Status_Time_Stamp_Mapping_IdChanging(int value);
    partial void OnUser_Status_Time_Stamp_Mapping_IdChanged();
    partial void OnUser_Id_ByChanging(System.Nullable<int> value);
    partial void OnUser_Id_ByChanged();
    partial void OnUser_Id_OfChanging(System.Nullable<int> value);
    partial void OnUser_Id_OfChanged();
    partial void OnUser_Status_IdChanging(System.Nullable<int> value);
    partial void OnUser_Status_IdChanged();
    partial void OnTime_Stamp_IdChanging(System.Nullable<int> value);
    partial void OnTime_Stamp_IdChanged();
    #endregion
		
		public User_Status_Time_Stamp_Mapping()
		{
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			this._User = default(EntityRef<User>);
			this._User_Status = default(EntityRef<User_Status>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Time_Stamp_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Status_Time_Stamp_Mapping_Id
		{
			get
			{
				return this._User_Status_Time_Stamp_Mapping_Id;
			}
			set
			{
				if ((this._User_Status_Time_Stamp_Mapping_Id != value))
				{
					this.OnUser_Status_Time_Stamp_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Time_Stamp_Mapping_Id = value;
					this.SendPropertyChanged("User_Status_Time_Stamp_Mapping_Id");
					this.OnUser_Status_Time_Stamp_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id_By", DbType="Int")]
		public System.Nullable<int> User_Id_By
		{
			get
			{
				return this._User_Id_By;
			}
			set
			{
				if ((this._User_Id_By != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Id_ByChanging(value);
					this.SendPropertyChanging();
					this._User_Id_By = value;
					this.SendPropertyChanged("User_Id_By");
					this.OnUser_Id_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id_Of", DbType="Int")]
		public System.Nullable<int> User_Id_Of
		{
			get
			{
				return this._User_Id_Of;
			}
			set
			{
				if ((this._User_Id_Of != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Id_OfChanging(value);
					this.SendPropertyChanging();
					this._User_Id_Of = value;
					this.SendPropertyChanged("User_Id_Of");
					this.OnUser_Id_OfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Id", DbType="Int")]
		public System.Nullable<int> User_Status_Id
		{
			get
			{
				return this._User_Status_Id;
			}
			set
			{
				if ((this._User_Status_Id != value))
				{
					if (this._User_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Id = value;
					this.SendPropertyChanged("User_Status_Id");
					this.OnUser_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp_Id", DbType="Int")]
		public System.Nullable<int> Time_Stamp_Id
		{
			get
			{
				return this._Time_Stamp_Id;
			}
			set
			{
				if ((this._Time_Stamp_Id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTime_Stamp_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp_Id = value;
					this.SendPropertyChanged("Time_Stamp_Id");
					this.OnTime_Stamp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_Status_Time_Stamp_Mapping", Storage="_Time_Stamp", ThisKey="Time_Stamp_Id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.User_Status_Time_Stamp_Mappings.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.User_Status_Time_Stamp_Mappings.Add(this);
						this._Time_Stamp_Id = value.Time_Stamp_Id;
					}
					else
					{
						this._Time_Stamp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status_Time_Stamp_Mapping", Storage="_User", ThisKey="User_Id_By", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Status_Time_Stamp_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Status_Time_Stamp_Mappings.Add(this);
						this._User_Id_By = value.User_Id;
					}
					else
					{
						this._User_Id_By = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User_Status_Time_Stamp_Mapping", Storage="_User_Status", ThisKey="User_Status_Id", OtherKey="User_Status_Id", IsForeignKey=true)]
		public User_Status User_Status
		{
			get
			{
				return this._User_Status.Entity;
			}
			set
			{
				User_Status previousValue = this._User_Status.Entity;
				if (((previousValue != value) 
							|| (this._User_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Status.Entity = null;
						previousValue.User_Status_Time_Stamp_Mappings.Remove(this);
					}
					this._User_Status.Entity = value;
					if ((value != null))
					{
						value.User_Status_Time_Stamp_Mappings.Add(this);
						this._User_Status_Id = value.User_Status_Id;
					}
					else
					{
						this._User_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status_Time_Stamp_Mapping1", Storage="_User1", ThisKey="User_Id_Of", OtherKey="User_Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.User_Status_Time_Stamp_Mappings1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.User_Status_Time_Stamp_Mappings1.Add(this);
						this._User_Id_Of = value.User_Id;
					}
					else
					{
						this._User_Id_Of = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Status_To_Questionnaire_Mapping")]
	public partial class User_Status_To_Questionnaire_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Status_To_Questionnaire_Mapping_Id;
		
		private System.Nullable<int> _User_Status_Id;
		
		private System.Nullable<int> _Questionnaire_Id;
		
		private EntityRef<Questionnaire_Master> _Questionnaire_Master;
		
		private EntityRef<User_Status> _User_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Status_To_Questionnaire_Mapping_IdChanging(int value);
    partial void OnUser_Status_To_Questionnaire_Mapping_IdChanged();
    partial void OnUser_Status_IdChanging(System.Nullable<int> value);
    partial void OnUser_Status_IdChanged();
    partial void OnQuestionnaire_IdChanging(System.Nullable<int> value);
    partial void OnQuestionnaire_IdChanged();
    #endregion
		
		public User_Status_To_Questionnaire_Mapping()
		{
			this._Questionnaire_Master = default(EntityRef<Questionnaire_Master>);
			this._User_Status = default(EntityRef<User_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_To_Questionnaire_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Status_To_Questionnaire_Mapping_Id
		{
			get
			{
				return this._User_Status_To_Questionnaire_Mapping_Id;
			}
			set
			{
				if ((this._User_Status_To_Questionnaire_Mapping_Id != value))
				{
					this.OnUser_Status_To_Questionnaire_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_To_Questionnaire_Mapping_Id = value;
					this.SendPropertyChanged("User_Status_To_Questionnaire_Mapping_Id");
					this.OnUser_Status_To_Questionnaire_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_Id", DbType="Int")]
		public System.Nullable<int> User_Status_Id
		{
			get
			{
				return this._User_Status_Id;
			}
			set
			{
				if ((this._User_Status_Id != value))
				{
					if (this._User_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Status_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Status_Id = value;
					this.SendPropertyChanged("User_Status_Id");
					this.OnUser_Status_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_Id", DbType="Int")]
		public System.Nullable<int> Questionnaire_Id
		{
			get
			{
				return this._Questionnaire_Id;
			}
			set
			{
				if ((this._Questionnaire_Id != value))
				{
					if (this._Questionnaire_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaire_IdChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_Id = value;
					this.SendPropertyChanged("Questionnaire_Id");
					this.OnQuestionnaire_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_User_Status_To_Questionnaire_Mapping", Storage="_Questionnaire_Master", ThisKey="Questionnaire_Id", OtherKey="Questionnaire_Id", IsForeignKey=true)]
		public Questionnaire_Master Questionnaire_Master
		{
			get
			{
				return this._Questionnaire_Master.Entity;
			}
			set
			{
				Questionnaire_Master previousValue = this._Questionnaire_Master.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire_Master.Entity = null;
						previousValue.User_Status_To_Questionnaire_Mappings.Remove(this);
					}
					this._Questionnaire_Master.Entity = value;
					if ((value != null))
					{
						value.User_Status_To_Questionnaire_Mappings.Add(this);
						this._Questionnaire_Id = value.Questionnaire_Id;
					}
					else
					{
						this._Questionnaire_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Questionnaire_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Status_User_Status_To_Questionnaire_Mapping", Storage="_User_Status", ThisKey="User_Status_Id", OtherKey="User_Status_Id", IsForeignKey=true)]
		public User_Status User_Status
		{
			get
			{
				return this._User_Status.Entity;
			}
			set
			{
				User_Status previousValue = this._User_Status.Entity;
				if (((previousValue != value) 
							|| (this._User_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Status.Entity = null;
						previousValue.User_Status_To_Questionnaire_Mappings.Remove(this);
					}
					this._User_Status.Entity = value;
					if ((value != null))
					{
						value.User_Status_To_Questionnaire_Mappings.Add(this);
						this._User_Status_Id = value.User_Status_Id;
					}
					else
					{
						this._User_Status_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Input_mapping")]
	public partial class User_To_Input_mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_to_input_mapping_id;
		
		private System.Nullable<int> _questionnaire_id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _timestamp_id;
		
		private EntitySet<User_Input_To_Option_Mapping> _User_Input_To_Option_Mappings;
		
		private EntitySet<User_Input_to_Order_mapping> _User_Input_to_Order_mappings;
		
		private EntitySet<User_Input_To_User_Mapping> _User_Input_To_User_Mappings;
		
		private EntityRef<Questionnaire_Master> _Questionnaire_Master;
		
		private EntityRef<Time_Stamp> _Time_Stamp;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_to_input_mapping_idChanging(int value);
    partial void Onuser_to_input_mapping_idChanged();
    partial void Onquestionnaire_idChanging(System.Nullable<int> value);
    partial void Onquestionnaire_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Ontimestamp_idChanging(System.Nullable<int> value);
    partial void Ontimestamp_idChanged();
    #endregion
		
		public User_To_Input_mapping()
		{
			this._User_Input_To_Option_Mappings = new EntitySet<User_Input_To_Option_Mapping>(new Action<User_Input_To_Option_Mapping>(this.attach_User_Input_To_Option_Mappings), new Action<User_Input_To_Option_Mapping>(this.detach_User_Input_To_Option_Mappings));
			this._User_Input_to_Order_mappings = new EntitySet<User_Input_to_Order_mapping>(new Action<User_Input_to_Order_mapping>(this.attach_User_Input_to_Order_mappings), new Action<User_Input_to_Order_mapping>(this.detach_User_Input_to_Order_mappings));
			this._User_Input_To_User_Mappings = new EntitySet<User_Input_To_User_Mapping>(new Action<User_Input_To_User_Mapping>(this.attach_User_Input_To_User_Mappings), new Action<User_Input_To_User_Mapping>(this.detach_User_Input_To_User_Mappings));
			this._Questionnaire_Master = default(EntityRef<Questionnaire_Master>);
			this._Time_Stamp = default(EntityRef<Time_Stamp>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_to_input_mapping_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_to_input_mapping_id
		{
			get
			{
				return this._user_to_input_mapping_id;
			}
			set
			{
				if ((this._user_to_input_mapping_id != value))
				{
					this.Onuser_to_input_mapping_idChanging(value);
					this.SendPropertyChanging();
					this._user_to_input_mapping_id = value;
					this.SendPropertyChanged("user_to_input_mapping_id");
					this.Onuser_to_input_mapping_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnaire_id", DbType="Int")]
		public System.Nullable<int> questionnaire_id
		{
			get
			{
				return this._questionnaire_id;
			}
			set
			{
				if ((this._questionnaire_id != value))
				{
					if (this._Questionnaire_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onquestionnaire_idChanging(value);
					this.SendPropertyChanging();
					this._questionnaire_id = value;
					this.SendPropertyChanged("questionnaire_id");
					this.Onquestionnaire_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp_id", DbType="Int")]
		public System.Nullable<int> timestamp_id
		{
			get
			{
				return this._timestamp_id;
			}
			set
			{
				if ((this._timestamp_id != value))
				{
					if (this._Time_Stamp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontimestamp_idChanging(value);
					this.SendPropertyChanging();
					this._timestamp_id = value;
					this.SendPropertyChanged("timestamp_id");
					this.Ontimestamp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_To_Option_Mapping", Storage="_User_Input_To_Option_Mappings", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id")]
		public EntitySet<User_Input_To_Option_Mapping> User_Input_To_Option_Mappings
		{
			get
			{
				return this._User_Input_To_Option_Mappings;
			}
			set
			{
				this._User_Input_To_Option_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_to_Order_mapping", Storage="_User_Input_to_Order_mappings", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id")]
		public EntitySet<User_Input_to_Order_mapping> User_Input_to_Order_mappings
		{
			get
			{
				return this._User_Input_to_Order_mappings;
			}
			set
			{
				this._User_Input_to_Order_mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Input_mapping_User_Input_To_User_Mapping", Storage="_User_Input_To_User_Mappings", ThisKey="user_to_input_mapping_id", OtherKey="user_to_input_mapping_id")]
		public EntitySet<User_Input_To_User_Mapping> User_Input_To_User_Mappings
		{
			get
			{
				return this._User_Input_To_User_Mappings;
			}
			set
			{
				this._User_Input_To_User_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_Master_User_To_Input_mapping", Storage="_Questionnaire_Master", ThisKey="questionnaire_id", OtherKey="Questionnaire_Id", IsForeignKey=true)]
		public Questionnaire_Master Questionnaire_Master
		{
			get
			{
				return this._Questionnaire_Master.Entity;
			}
			set
			{
				Questionnaire_Master previousValue = this._Questionnaire_Master.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire_Master.Entity = null;
						previousValue.User_To_Input_mappings.Remove(this);
					}
					this._Questionnaire_Master.Entity = value;
					if ((value != null))
					{
						value.User_To_Input_mappings.Add(this);
						this._questionnaire_id = value.Questionnaire_Id;
					}
					else
					{
						this._questionnaire_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Questionnaire_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Time_Stamp_User_To_Input_mapping", Storage="_Time_Stamp", ThisKey="timestamp_id", OtherKey="Time_Stamp_Id", IsForeignKey=true)]
		public Time_Stamp Time_Stamp
		{
			get
			{
				return this._Time_Stamp.Entity;
			}
			set
			{
				Time_Stamp previousValue = this._Time_Stamp.Entity;
				if (((previousValue != value) 
							|| (this._Time_Stamp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Time_Stamp.Entity = null;
						previousValue.User_To_Input_mappings.Remove(this);
					}
					this._Time_Stamp.Entity = value;
					if ((value != null))
					{
						value.User_To_Input_mappings.Add(this);
						this._timestamp_id = value.Time_Stamp_Id;
					}
					else
					{
						this._timestamp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Time_Stamp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Input_mapping", Storage="_User", ThisKey="user_id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Input_mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Input_mappings.Add(this);
						this._user_id = value.User_Id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Input_To_Option_Mappings(User_Input_To_Option_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = this;
		}
		
		private void detach_User_Input_To_Option_Mappings(User_Input_To_Option_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = null;
		}
		
		private void attach_User_Input_to_Order_mappings(User_Input_to_Order_mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = this;
		}
		
		private void detach_User_Input_to_Order_mappings(User_Input_to_Order_mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = null;
		}
		
		private void attach_User_Input_To_User_Mappings(User_Input_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = this;
		}
		
		private void detach_User_Input_To_User_Mappings(User_Input_To_User_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Input_mapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Level_Mapping")]
	public partial class User_To_Level_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Level_Mapping_iD;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Level_To_Skill_Id;
		
		private System.Nullable<int> _Skill_Rating;
		
		private EntityRef<Level_To_Skill_Mapping> _Level_To_Skill_Mapping;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Level_Mapping_iDChanging(int value);
    partial void OnUser_To_Level_Mapping_iDChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnLevel_To_Skill_IdChanging(System.Nullable<int> value);
    partial void OnLevel_To_Skill_IdChanged();
    partial void OnSkill_RatingChanging(System.Nullable<int> value);
    partial void OnSkill_RatingChanged();
    #endregion
		
		public User_To_Level_Mapping()
		{
			this._Level_To_Skill_Mapping = default(EntityRef<Level_To_Skill_Mapping>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Level_Mapping_iD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Level_Mapping_iD
		{
			get
			{
				return this._User_To_Level_Mapping_iD;
			}
			set
			{
				if ((this._User_To_Level_Mapping_iD != value))
				{
					this.OnUser_To_Level_Mapping_iDChanging(value);
					this.SendPropertyChanging();
					this._User_To_Level_Mapping_iD = value;
					this.SendPropertyChanged("User_To_Level_Mapping_iD");
					this.OnUser_To_Level_Mapping_iDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_To_Skill_Id", DbType="Int")]
		public System.Nullable<int> Level_To_Skill_Id
		{
			get
			{
				return this._Level_To_Skill_Id;
			}
			set
			{
				if ((this._Level_To_Skill_Id != value))
				{
					if (this._Level_To_Skill_Mapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevel_To_Skill_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_To_Skill_Id = value;
					this.SendPropertyChanged("Level_To_Skill_Id");
					this.OnLevel_To_Skill_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_Rating", DbType="Int")]
		public System.Nullable<int> Skill_Rating
		{
			get
			{
				return this._Skill_Rating;
			}
			set
			{
				if ((this._Skill_Rating != value))
				{
					this.OnSkill_RatingChanging(value);
					this.SendPropertyChanging();
					this._Skill_Rating = value;
					this.SendPropertyChanged("Skill_Rating");
					this.OnSkill_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_To_Skill_Mapping_User_To_Level_Mapping", Storage="_Level_To_Skill_Mapping", ThisKey="Level_To_Skill_Id", OtherKey="Level_To_Skill_Mapping_Id", IsForeignKey=true)]
		public Level_To_Skill_Mapping Level_To_Skill_Mapping
		{
			get
			{
				return this._Level_To_Skill_Mapping.Entity;
			}
			set
			{
				Level_To_Skill_Mapping previousValue = this._Level_To_Skill_Mapping.Entity;
				if (((previousValue != value) 
							|| (this._Level_To_Skill_Mapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level_To_Skill_Mapping.Entity = null;
						previousValue.User_To_Level_Mappings.Remove(this);
					}
					this._Level_To_Skill_Mapping.Entity = value;
					if ((value != null))
					{
						value.User_To_Level_Mappings.Add(this);
						this._Level_To_Skill_Id = value.Level_To_Skill_Mapping_Id;
					}
					else
					{
						this._Level_To_Skill_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Level_To_Skill_Mapping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Level_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Level_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Level_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Phone_Mapping")]
	public partial class User_To_Phone_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Phone_Mapping_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Phone_Id;
		
		private EntityRef<Phone_Number_Master> _Phone_Number_Master;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Phone_Mapping_IdChanging(int value);
    partial void OnUser_To_Phone_Mapping_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnPhone_IdChanging(System.Nullable<int> value);
    partial void OnPhone_IdChanged();
    #endregion
		
		public User_To_Phone_Mapping()
		{
			this._Phone_Number_Master = default(EntityRef<Phone_Number_Master>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Phone_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Phone_Mapping_Id
		{
			get
			{
				return this._User_To_Phone_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Phone_Mapping_Id != value))
				{
					this.OnUser_To_Phone_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Phone_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Phone_Mapping_Id");
					this.OnUser_To_Phone_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Id", DbType="Int")]
		public System.Nullable<int> Phone_Id
		{
			get
			{
				return this._Phone_Id;
			}
			set
			{
				if ((this._Phone_Id != value))
				{
					if (this._Phone_Number_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhone_IdChanging(value);
					this.SendPropertyChanging();
					this._Phone_Id = value;
					this.SendPropertyChanged("Phone_Id");
					this.OnPhone_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_Number_Master_User_To_Phone_Mapping", Storage="_Phone_Number_Master", ThisKey="Phone_Id", OtherKey="Phone_Id", IsForeignKey=true)]
		public Phone_Number_Master Phone_Number_Master
		{
			get
			{
				return this._Phone_Number_Master.Entity;
			}
			set
			{
				Phone_Number_Master previousValue = this._Phone_Number_Master.Entity;
				if (((previousValue != value) 
							|| (this._Phone_Number_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phone_Number_Master.Entity = null;
						previousValue.User_To_Phone_Mappings.Remove(this);
					}
					this._Phone_Number_Master.Entity = value;
					if ((value != null))
					{
						value.User_To_Phone_Mappings.Add(this);
						this._Phone_Id = value.Phone_Id;
					}
					else
					{
						this._Phone_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phone_Number_Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Phone_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Phone_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Phone_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Preference")]
	public partial class User_To_Preference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Preference_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Preference_Id;
		
		private System.Nullable<bool> _bool_value;
		
		private EntitySet<User_Billing_Preference_Mapping> _User_Billing_Preference_Mappings;
		
		private EntitySet<User_Currency_Preferenc_Mapping> _User_Currency_Preferenc_Mappings;
		
		private EntitySet<User_FileType_Preference_Mapping> _User_FileType_Preference_Mappings;
		
		private EntitySet<User_Payment_Preference_Mapping> _User_Payment_Preference_Mappings;
		
		private EntityRef<Preference> _Preference;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Preference_IdChanging(int value);
    partial void OnUser_To_Preference_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnPreference_IdChanging(System.Nullable<int> value);
    partial void OnPreference_IdChanged();
    partial void Onbool_valueChanging(System.Nullable<bool> value);
    partial void Onbool_valueChanged();
    #endregion
		
		public User_To_Preference()
		{
			this._User_Billing_Preference_Mappings = new EntitySet<User_Billing_Preference_Mapping>(new Action<User_Billing_Preference_Mapping>(this.attach_User_Billing_Preference_Mappings), new Action<User_Billing_Preference_Mapping>(this.detach_User_Billing_Preference_Mappings));
			this._User_Currency_Preferenc_Mappings = new EntitySet<User_Currency_Preferenc_Mapping>(new Action<User_Currency_Preferenc_Mapping>(this.attach_User_Currency_Preferenc_Mappings), new Action<User_Currency_Preferenc_Mapping>(this.detach_User_Currency_Preferenc_Mappings));
			this._User_FileType_Preference_Mappings = new EntitySet<User_FileType_Preference_Mapping>(new Action<User_FileType_Preference_Mapping>(this.attach_User_FileType_Preference_Mappings), new Action<User_FileType_Preference_Mapping>(this.detach_User_FileType_Preference_Mappings));
			this._User_Payment_Preference_Mappings = new EntitySet<User_Payment_Preference_Mapping>(new Action<User_Payment_Preference_Mapping>(this.attach_User_Payment_Preference_Mappings), new Action<User_Payment_Preference_Mapping>(this.detach_User_Payment_Preference_Mappings));
			this._Preference = default(EntityRef<Preference>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Preference_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Preference_Id
		{
			get
			{
				return this._User_To_Preference_Id;
			}
			set
			{
				if ((this._User_To_Preference_Id != value))
				{
					this.OnUser_To_Preference_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Preference_Id = value;
					this.SendPropertyChanged("User_To_Preference_Id");
					this.OnUser_To_Preference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preference_Id", DbType="Int")]
		public System.Nullable<int> Preference_Id
		{
			get
			{
				return this._Preference_Id;
			}
			set
			{
				if ((this._Preference_Id != value))
				{
					if (this._Preference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreference_IdChanging(value);
					this.SendPropertyChanging();
					this._Preference_Id = value;
					this.SendPropertyChanged("Preference_Id");
					this.OnPreference_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bool_value", DbType="Bit")]
		public System.Nullable<bool> bool_value
		{
			get
			{
				return this._bool_value;
			}
			set
			{
				if ((this._bool_value != value))
				{
					this.Onbool_valueChanging(value);
					this.SendPropertyChanging();
					this._bool_value = value;
					this.SendPropertyChanged("bool_value");
					this.Onbool_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Billing_Preference_Mapping", Storage="_User_Billing_Preference_Mappings", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id")]
		public EntitySet<User_Billing_Preference_Mapping> User_Billing_Preference_Mappings
		{
			get
			{
				return this._User_Billing_Preference_Mappings;
			}
			set
			{
				this._User_Billing_Preference_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Currency_Preferenc_Mapping", Storage="_User_Currency_Preferenc_Mappings", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id")]
		public EntitySet<User_Currency_Preferenc_Mapping> User_Currency_Preferenc_Mappings
		{
			get
			{
				return this._User_Currency_Preferenc_Mappings;
			}
			set
			{
				this._User_Currency_Preferenc_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_FileType_Preference_Mapping", Storage="_User_FileType_Preference_Mappings", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id")]
		public EntitySet<User_FileType_Preference_Mapping> User_FileType_Preference_Mappings
		{
			get
			{
				return this._User_FileType_Preference_Mappings;
			}
			set
			{
				this._User_FileType_Preference_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Preference_User_Payment_Preference_Mapping", Storage="_User_Payment_Preference_Mappings", ThisKey="User_To_Preference_Id", OtherKey="User_To_Preference_Id")]
		public EntitySet<User_Payment_Preference_Mapping> User_Payment_Preference_Mappings
		{
			get
			{
				return this._User_Payment_Preference_Mappings;
			}
			set
			{
				this._User_Payment_Preference_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preference_User_To_Preference", Storage="_Preference", ThisKey="Preference_Id", OtherKey="Preference_Id", IsForeignKey=true)]
		public Preference Preference
		{
			get
			{
				return this._Preference.Entity;
			}
			set
			{
				Preference previousValue = this._Preference.Entity;
				if (((previousValue != value) 
							|| (this._Preference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preference.Entity = null;
						previousValue.User_To_Preferences.Remove(this);
					}
					this._Preference.Entity = value;
					if ((value != null))
					{
						value.User_To_Preferences.Add(this);
						this._Preference_Id = value.Preference_Id;
					}
					else
					{
						this._Preference_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Preference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Preference", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Preferences.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Preferences.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Billing_Preference_Mappings(User_Billing_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = this;
		}
		
		private void detach_User_Billing_Preference_Mappings(User_Billing_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = null;
		}
		
		private void attach_User_Currency_Preferenc_Mappings(User_Currency_Preferenc_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = this;
		}
		
		private void detach_User_Currency_Preferenc_Mappings(User_Currency_Preferenc_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = null;
		}
		
		private void attach_User_FileType_Preference_Mappings(User_FileType_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = this;
		}
		
		private void detach_User_FileType_Preference_Mappings(User_FileType_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = null;
		}
		
		private void attach_User_Payment_Preference_Mappings(User_Payment_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = this;
		}
		
		private void detach_User_Payment_Preference_Mappings(User_Payment_Preference_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Preference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Reminder")]
	public partial class User_To_Reminder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Reminder_Id;
		
		private System.Nullable<int> _Reminder_Id;
		
		private System.Nullable<int> _User_Id;
		
		private EntityRef<Reminder> _Reminder;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Reminder_IdChanging(int value);
    partial void OnUser_Reminder_IdChanged();
    partial void OnReminder_IdChanging(System.Nullable<int> value);
    partial void OnReminder_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    #endregion
		
		public User_To_Reminder()
		{
			this._Reminder = default(EntityRef<Reminder>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Reminder_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Reminder_Id
		{
			get
			{
				return this._User_Reminder_Id;
			}
			set
			{
				if ((this._User_Reminder_Id != value))
				{
					this.OnUser_Reminder_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Reminder_Id = value;
					this.SendPropertyChanged("User_Reminder_Id");
					this.OnUser_Reminder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder_Id", DbType="Int")]
		public System.Nullable<int> Reminder_Id
		{
			get
			{
				return this._Reminder_Id;
			}
			set
			{
				if ((this._Reminder_Id != value))
				{
					if (this._Reminder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReminder_IdChanging(value);
					this.SendPropertyChanging();
					this._Reminder_Id = value;
					this.SendPropertyChanged("Reminder_Id");
					this.OnReminder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reminder_User_To_Reminder", Storage="_Reminder", ThisKey="Reminder_Id", OtherKey="Reminder_Id", IsForeignKey=true)]
		public Reminder Reminder
		{
			get
			{
				return this._Reminder.Entity;
			}
			set
			{
				Reminder previousValue = this._Reminder.Entity;
				if (((previousValue != value) 
							|| (this._Reminder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reminder.Entity = null;
						previousValue.User_To_Reminders.Remove(this);
					}
					this._Reminder.Entity = value;
					if ((value != null))
					{
						value.User_To_Reminders.Add(this);
						this._Reminder_Id = value.Reminder_Id;
					}
					else
					{
						this._Reminder_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reminder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Reminder", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Reminders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Reminders.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Role_Mapping")]
	public partial class User_To_Role_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Role_Mapping_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Role_Id;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Role_Mapping_IdChanging(int value);
    partial void OnUser_To_Role_Mapping_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnRole_IdChanging(System.Nullable<int> value);
    partial void OnRole_IdChanged();
    #endregion
		
		public User_To_Role_Mapping()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Role_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Role_Mapping_Id
		{
			get
			{
				return this._User_To_Role_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Role_Mapping_Id != value))
				{
					this.OnUser_To_Role_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Role_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Role_Mapping_Id");
					this.OnUser_To_Role_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", DbType="Int")]
		public System.Nullable<int> Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Id = value;
					this.SendPropertyChanged("Role_Id");
					this.OnRole_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_To_Role_Mapping", Storage="_Role", ThisKey="Role_Id", OtherKey="Role_Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.User_To_Role_Mappings.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.User_To_Role_Mappings.Add(this);
						this._Role_Id = value.Role_Id;
					}
					else
					{
						this._Role_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Role_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Role_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Role_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Shift_Mapping")]
	public partial class User_To_Shift_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Shift_Mapping_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Shift_Start_Time;
		
		private System.Nullable<int> _Shift_End_Time;
		
		private System.Nullable<System.DateTime> _Start_Date;
		
		private System.Nullable<int> _Current_Status;
		
		private EntitySet<Login_Master> _Login_Masters;
		
		private EntitySet<Shift_Log> _Shift_Logs;
		
		private EntityRef<Shift> _Shift;
		
		private EntityRef<Shift> _Shift1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Shift_Mapping_IdChanging(int value);
    partial void OnUser_To_Shift_Mapping_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnShift_Start_TimeChanging(System.Nullable<int> value);
    partial void OnShift_Start_TimeChanged();
    partial void OnShift_End_TimeChanging(System.Nullable<int> value);
    partial void OnShift_End_TimeChanged();
    partial void OnStart_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_DateChanged();
    partial void OnCurrent_StatusChanging(System.Nullable<int> value);
    partial void OnCurrent_StatusChanged();
    #endregion
		
		public User_To_Shift_Mapping()
		{
			this._Login_Masters = new EntitySet<Login_Master>(new Action<Login_Master>(this.attach_Login_Masters), new Action<Login_Master>(this.detach_Login_Masters));
			this._Shift_Logs = new EntitySet<Shift_Log>(new Action<Shift_Log>(this.attach_Shift_Logs), new Action<Shift_Log>(this.detach_Shift_Logs));
			this._Shift = default(EntityRef<Shift>);
			this._Shift1 = default(EntityRef<Shift>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Shift_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Shift_Mapping_Id
		{
			get
			{
				return this._User_To_Shift_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Shift_Mapping_Id != value))
				{
					this.OnUser_To_Shift_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Shift_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Shift_Mapping_Id");
					this.OnUser_To_Shift_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Start_Time", DbType="Int")]
		public System.Nullable<int> Shift_Start_Time
		{
			get
			{
				return this._Shift_Start_Time;
			}
			set
			{
				if ((this._Shift_Start_Time != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShift_Start_TimeChanging(value);
					this.SendPropertyChanging();
					this._Shift_Start_Time = value;
					this.SendPropertyChanged("Shift_Start_Time");
					this.OnShift_Start_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_End_Time", DbType="Int")]
		public System.Nullable<int> Shift_End_Time
		{
			get
			{
				return this._Shift_End_Time;
			}
			set
			{
				if ((this._Shift_End_Time != value))
				{
					if (this._Shift1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShift_End_TimeChanging(value);
					this.SendPropertyChanging();
					this._Shift_End_Time = value;
					this.SendPropertyChanged("Shift_End_Time");
					this.OnShift_End_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Status", DbType="Int")]
		public System.Nullable<int> Current_Status
		{
			get
			{
				return this._Current_Status;
			}
			set
			{
				if ((this._Current_Status != value))
				{
					this.OnCurrent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Current_Status = value;
					this.SendPropertyChanged("Current_Status");
					this.OnCurrent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Shift_Mapping_Login_Master", Storage="_Login_Masters", ThisKey="User_To_Shift_Mapping_Id", OtherKey="User_To_Shift_Mapping_Id")]
		public EntitySet<Login_Master> Login_Masters
		{
			get
			{
				return this._Login_Masters;
			}
			set
			{
				this._Login_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_To_Shift_Mapping_Shift_Log", Storage="_Shift_Logs", ThisKey="User_To_Shift_Mapping_Id", OtherKey="User_To_Shift_Mapping_Id")]
		public EntitySet<Shift_Log> Shift_Logs
		{
			get
			{
				return this._Shift_Logs;
			}
			set
			{
				this._Shift_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_User_To_Shift_Mapping", Storage="_Shift", ThisKey="Shift_Start_Time", OtherKey="Shift_Id", IsForeignKey=true)]
		public Shift Shift
		{
			get
			{
				return this._Shift.Entity;
			}
			set
			{
				Shift previousValue = this._Shift.Entity;
				if (((previousValue != value) 
							|| (this._Shift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift.Entity = null;
						previousValue.User_To_Shift_Mappings.Remove(this);
					}
					this._Shift.Entity = value;
					if ((value != null))
					{
						value.User_To_Shift_Mappings.Add(this);
						this._Shift_Start_Time = value.Shift_Id;
					}
					else
					{
						this._Shift_Start_Time = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_User_To_Shift_Mapping1", Storage="_Shift1", ThisKey="Shift_End_Time", OtherKey="Shift_Id", IsForeignKey=true)]
		public Shift Shift1
		{
			get
			{
				return this._Shift1.Entity;
			}
			set
			{
				Shift previousValue = this._Shift1.Entity;
				if (((previousValue != value) 
							|| (this._Shift1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift1.Entity = null;
						previousValue.User_To_Shift_Mappings1.Remove(this);
					}
					this._Shift1.Entity = value;
					if ((value != null))
					{
						value.User_To_Shift_Mappings1.Add(this);
						this._Shift_End_Time = value.Shift_Id;
					}
					else
					{
						this._Shift_End_Time = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shift1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Shift_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Shift_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Shift_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Login_Masters(Login_Master entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Shift_Mapping = this;
		}
		
		private void detach_Login_Masters(Login_Master entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Shift_Mapping = null;
		}
		
		private void attach_Shift_Logs(Shift_Log entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Shift_Mapping = this;
		}
		
		private void detach_Shift_Logs(Shift_Log entity)
		{
			this.SendPropertyChanging();
			entity.User_To_Shift_Mapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_To_Special_Offer_Mapping")]
	public partial class User_To_Special_Offer_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_To_Special_Offer_Mapping_Id;
		
		private System.Nullable<int> _Special_Offer_Id;
		
		private System.Nullable<int> _User_Id;
		
		private string _Coupon_Code;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_To_Special_Offer_Mapping_IdChanging(int value);
    partial void OnUser_To_Special_Offer_Mapping_IdChanged();
    partial void OnSpecial_Offer_IdChanging(System.Nullable<int> value);
    partial void OnSpecial_Offer_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnCoupon_CodeChanging(string value);
    partial void OnCoupon_CodeChanged();
    #endregion
		
		public User_To_Special_Offer_Mapping()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_To_Special_Offer_Mapping_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_To_Special_Offer_Mapping_Id
		{
			get
			{
				return this._User_To_Special_Offer_Mapping_Id;
			}
			set
			{
				if ((this._User_To_Special_Offer_Mapping_Id != value))
				{
					this.OnUser_To_Special_Offer_Mapping_IdChanging(value);
					this.SendPropertyChanging();
					this._User_To_Special_Offer_Mapping_Id = value;
					this.SendPropertyChanged("User_To_Special_Offer_Mapping_Id");
					this.OnUser_To_Special_Offer_Mapping_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Offer_Id", DbType="Int")]
		public System.Nullable<int> Special_Offer_Id
		{
			get
			{
				return this._Special_Offer_Id;
			}
			set
			{
				if ((this._Special_Offer_Id != value))
				{
					this.OnSpecial_Offer_IdChanging(value);
					this.SendPropertyChanging();
					this._Special_Offer_Id = value;
					this.SendPropertyChanged("Special_Offer_Id");
					this.OnSpecial_Offer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coupon_Code", DbType="VarChar(50)")]
		public string Coupon_Code
		{
			get
			{
				return this._Coupon_Code;
			}
			set
			{
				if ((this._Coupon_Code != value))
				{
					this.OnCoupon_CodeChanging(value);
					this.SendPropertyChanging();
					this._Coupon_Code = value;
					this.SendPropertyChanged("Coupon_Code");
					this.OnCoupon_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_To_Special_Offer_Mapping", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_To_Special_Offer_Mappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_To_Special_Offer_Mappings.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
